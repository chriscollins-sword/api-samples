//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ApiDemoConsoleApplication.ArmApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PublicServiceSoap", Namespace="http://activerisk.com/")]
    public partial class PublicService : Microsoft.Web.Services3.WebServicesClientProtocol
    {
        
        private ArmSoapHeader armSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetArmUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPortalAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusinessAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlackFlagTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRiskAndImpactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateImpactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImpactOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImpactsForFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponsesForFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlansForFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponsesForPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImpactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponseStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponseEffectivenessesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponsePrioritiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImpactCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImpactGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPIDPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPIDPointsForFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRiskLevelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScoringSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScoringSchemesForItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRiskCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRiskStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRiskPhasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestFrequenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDesignEffectivenessesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetControlClassificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetControlTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetControlAssertionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetControlConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRiskSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistributionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaterfallDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFiltersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLanguageSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetColoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteItemIfEmptyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociationsForImpactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociationsForItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaticDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsStaticDataCurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetaDataHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEscalationItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEscalationItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEscalationItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEscalationItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscalateRisksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEscalationsForImpactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourcesOfGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddActivityScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateActivityScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivityScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddActivityDependencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateActivityDependencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivityDependencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveActivityDependencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRiskLinkageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRiskLinkageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkagesForRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScoreBandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScoreBandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImpactsForItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanStrategiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRiskSecurityPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveRisksOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRiskSecurityPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateResponseAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponseAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourcesAndGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetColourConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClassificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaveatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResourceToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveResourceFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveResourceFromAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLanguageSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLanguageSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImpactCategoryTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlinkPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlinkResponsesFromPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkResponsesToPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatingResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDesignResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetControlInfluenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEvaluationTestTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomList1ValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomList2ValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomList3ValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequirementFieldConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEvaluationTestConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEvaluationTestClassificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicensedFeaturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableWebPartsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequirementFiltersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PublicService() {
            this.Url = global::ApiDemoConsoleApplication.Properties.Settings.Default.ApiDemoConsoleApplication_ArmApi1_PublicService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ArmSoapHeader ArmSoapHeaderValue {
            get {
                return this.armSoapHeaderValueField;
            }
            set {
                this.armSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetArmUrlCompletedEventHandler GetArmUrlCompleted;
        
        /// <remarks/>
        public event GetPortalAccessCompletedEventHandler GetPortalAccessCompleted;
        
        /// <remarks/>
        public event GetInstancesCompletedEventHandler GetInstancesCompleted;
        
        /// <remarks/>
        public event GetBusinessAreasCompletedEventHandler GetBusinessAreasCompleted;
        
        /// <remarks/>
        public event GetBlackFlagTypesCompletedEventHandler GetBlackFlagTypesCompleted;
        
        /// <remarks/>
        public event AddRiskAndImpactCompletedEventHandler AddRiskAndImpactCompleted;
        
        /// <remarks/>
        public event UpdateImpactCompletedEventHandler UpdateImpactCompleted;
        
        /// <remarks/>
        public event UpdateRiskCompletedEventHandler UpdateRiskCompleted;
        
        /// <remarks/>
        public event DeleteImpactCompletedEventHandler DeleteImpactCompleted;
        
        /// <remarks/>
        public event AddPlanCompletedEventHandler AddPlanCompleted;
        
        /// <remarks/>
        public event UpdatePlanCompletedEventHandler UpdatePlanCompleted;
        
        /// <remarks/>
        public event AddResponseCompletedEventHandler AddResponseCompleted;
        
        /// <remarks/>
        public event UpdateResponseCompletedEventHandler UpdateResponseCompleted;
        
        /// <remarks/>
        public event DeleteResponseCompletedEventHandler DeleteResponseCompleted;
        
        /// <remarks/>
        public event GetImpactsForFilterCompletedEventHandler GetImpactsForFilterCompleted;
        
        /// <remarks/>
        public event GetResponsesForFilterCompletedEventHandler GetResponsesForFilterCompleted;
        
        /// <remarks/>
        public event GetPlansForFilterCompletedEventHandler GetPlansForFilterCompleted;
        
        /// <remarks/>
        public event GetResponsesForPlanCompletedEventHandler GetResponsesForPlanCompleted;
        
        /// <remarks/>
        public event GetImpactCompletedEventHandler GetImpactCompleted;
        
        /// <remarks/>
        public event GetRiskCompletedEventHandler GetRiskCompleted;
        
        /// <remarks/>
        public event GetPlanCompletedEventHandler GetPlanCompleted;
        
        /// <remarks/>
        public event GetItemCompletedEventHandler GetItemCompleted;
        
        /// <remarks/>
        public event GetTreeItemCompletedEventHandler GetTreeItemCompleted;
        
        /// <remarks/>
        public event GetResponseCompletedEventHandler GetResponseCompleted;
        
        /// <remarks/>
        public event GetResponseStatusesCompletedEventHandler GetResponseStatusesCompleted;
        
        /// <remarks/>
        public event GetResponseEffectivenessesCompletedEventHandler GetResponseEffectivenessesCompleted;
        
        /// <remarks/>
        public event GetResponsePrioritiesCompletedEventHandler GetResponsePrioritiesCompleted;
        
        /// <remarks/>
        public event GetImpactCategoriesCompletedEventHandler GetImpactCategoriesCompleted;
        
        /// <remarks/>
        public event GetImpactGroupsCompletedEventHandler GetImpactGroupsCompleted;
        
        /// <remarks/>
        public event GetPIDPointsCompletedEventHandler GetPIDPointsCompleted;
        
        /// <remarks/>
        public event GetPIDPointsForFilterCompletedEventHandler GetPIDPointsForFilterCompleted;
        
        /// <remarks/>
        public event GetRiskLevelsCompletedEventHandler GetRiskLevelsCompleted;
        
        /// <remarks/>
        public event GetScoringSchemeCompletedEventHandler GetScoringSchemeCompleted;
        
        /// <remarks/>
        public event GetScoringSchemesForItemCompletedEventHandler GetScoringSchemesForItemCompleted;
        
        /// <remarks/>
        public event GetResourcesCompletedEventHandler GetResourcesCompleted;
        
        /// <remarks/>
        public event GetRiskCategoriesCompletedEventHandler GetRiskCategoriesCompleted;
        
        /// <remarks/>
        public event GetRiskStatusesCompletedEventHandler GetRiskStatusesCompleted;
        
        /// <remarks/>
        public event GetRiskPhasesCompletedEventHandler GetRiskPhasesCompleted;
        
        /// <remarks/>
        public event GetTestFrequenciesCompletedEventHandler GetTestFrequenciesCompleted;
        
        /// <remarks/>
        public event GetDesignEffectivenessesCompletedEventHandler GetDesignEffectivenessesCompleted;
        
        /// <remarks/>
        public event GetControlClassificationsCompletedEventHandler GetControlClassificationsCompleted;
        
        /// <remarks/>
        public event GetControlTypesCompletedEventHandler GetControlTypesCompleted;
        
        /// <remarks/>
        public event GetControlAssertionsCompletedEventHandler GetControlAssertionsCompleted;
        
        /// <remarks/>
        public event GetControlConditionsCompletedEventHandler GetControlConditionsCompleted;
        
        /// <remarks/>
        public event GetRiskSourcesCompletedEventHandler GetRiskSourcesCompleted;
        
        /// <remarks/>
        public event GetDistributionsCompletedEventHandler GetDistributionsCompleted;
        
        /// <remarks/>
        public event GetWaterfallDataCompletedEventHandler GetWaterfallDataCompleted;
        
        /// <remarks/>
        public event GetDefaultFilterCompletedEventHandler GetDefaultFilterCompleted;
        
        /// <remarks/>
        public event GetRecordTypesCompletedEventHandler GetRecordTypesCompleted;
        
        /// <remarks/>
        public event GetUserFiltersCompletedEventHandler GetUserFiltersCompleted;
        
        /// <remarks/>
        public event GetUserLanguageSetCompletedEventHandler GetUserLanguageSetCompleted;
        
        /// <remarks/>
        public event GetColoursCompletedEventHandler GetColoursCompleted;
        
        /// <remarks/>
        public event AddModuleCompletedEventHandler AddModuleCompleted;
        
        /// <remarks/>
        public event GetModuleCompletedEventHandler GetModuleCompleted;
        
        /// <remarks/>
        public event UpdateModuleCompletedEventHandler UpdateModuleCompleted;
        
        /// <remarks/>
        public event AddRequirementCompletedEventHandler AddRequirementCompleted;
        
        /// <remarks/>
        public event GetRequirementCompletedEventHandler GetRequirementCompleted;
        
        /// <remarks/>
        public event UpdateRequirementCompletedEventHandler UpdateRequirementCompleted;
        
        /// <remarks/>
        public event DeleteItemCompletedEventHandler DeleteItemCompleted;
        
        /// <remarks/>
        public event DeleteItemIfEmptyCompletedEventHandler DeleteItemIfEmptyCompleted;
        
        /// <remarks/>
        public event RemoveItemCompletedEventHandler RemoveItemCompleted;
        
        /// <remarks/>
        public event AddAssociationCompletedEventHandler AddAssociationCompleted;
        
        /// <remarks/>
        public event DeleteAssociationCompletedEventHandler DeleteAssociationCompleted;
        
        /// <remarks/>
        public event GetAssociationsForImpactCompletedEventHandler GetAssociationsForImpactCompleted;
        
        /// <remarks/>
        public event GetAssociationsForItemCompletedEventHandler GetAssociationsForItemCompleted;
        
        /// <remarks/>
        public event GetUserDataCompletedEventHandler GetUserDataCompleted;
        
        /// <remarks/>
        public event GetStaticDataCompletedEventHandler GetStaticDataCompleted;
        
        /// <remarks/>
        public event IsStaticDataCurrentCompletedEventHandler IsStaticDataCurrentCompleted;
        
        /// <remarks/>
        public event GetMetaDataHierarchyCompletedEventHandler GetMetaDataHierarchyCompleted;
        
        /// <remarks/>
        public event GetEscalationItemCompletedEventHandler GetEscalationItemCompleted;
        
        /// <remarks/>
        public event AddEscalationItemCompletedEventHandler AddEscalationItemCompleted;
        
        /// <remarks/>
        public event UpdateEscalationItemCompletedEventHandler UpdateEscalationItemCompleted;
        
        /// <remarks/>
        public event DeleteEscalationItemCompletedEventHandler DeleteEscalationItemCompleted;
        
        /// <remarks/>
        public event EscalateRisksCompletedEventHandler EscalateRisksCompleted;
        
        /// <remarks/>
        public event GetEscalationsForImpactCompletedEventHandler GetEscalationsForImpactCompleted;
        
        /// <remarks/>
        public event GetResourceGroupsCompletedEventHandler GetResourceGroupsCompleted;
        
        /// <remarks/>
        public event GetResourcesOfGroupCompletedEventHandler GetResourcesOfGroupCompleted;
        
        /// <remarks/>
        public event GetFolderCompletedEventHandler GetFolderCompleted;
        
        /// <remarks/>
        public event AddFolderCompletedEventHandler AddFolderCompleted;
        
        /// <remarks/>
        public event UpdateFolderCompletedEventHandler UpdateFolderCompleted;
        
        /// <remarks/>
        public event GetActivityCompletedEventHandler GetActivityCompleted;
        
        /// <remarks/>
        public event AddActivityCompletedEventHandler AddActivityCompleted;
        
        /// <remarks/>
        public event UpdateActivityCompletedEventHandler UpdateActivityCompleted;
        
        /// <remarks/>
        public event AddActivityScheduleCompletedEventHandler AddActivityScheduleCompleted;
        
        /// <remarks/>
        public event UpdateActivityScheduleCompletedEventHandler UpdateActivityScheduleCompleted;
        
        /// <remarks/>
        public event GetActivityScheduleCompletedEventHandler GetActivityScheduleCompleted;
        
        /// <remarks/>
        public event AddActivityDependencyCompletedEventHandler AddActivityDependencyCompleted;
        
        /// <remarks/>
        public event UpdateActivityDependencyCompletedEventHandler UpdateActivityDependencyCompleted;
        
        /// <remarks/>
        public event GetActivityDependencyCompletedEventHandler GetActivityDependencyCompleted;
        
        /// <remarks/>
        public event RemoveActivityDependencyCompletedEventHandler RemoveActivityDependencyCompleted;
        
        /// <remarks/>
        public event GetCalendarCompletedEventHandler GetCalendarCompleted;
        
        /// <remarks/>
        public event AddCalendarCompletedEventHandler AddCalendarCompleted;
        
        /// <remarks/>
        public event UpdateCalendarCompletedEventHandler UpdateCalendarCompleted;
        
        /// <remarks/>
        public event AddRiskLinkageCompletedEventHandler AddRiskLinkageCompleted;
        
        /// <remarks/>
        public event DeleteRiskLinkageCompletedEventHandler DeleteRiskLinkageCompleted;
        
        /// <remarks/>
        public event GetLinkagesForRiskCompletedEventHandler GetLinkagesForRiskCompleted;
        
        /// <remarks/>
        public event GetAllScoreBandsCompletedEventHandler GetAllScoreBandsCompleted;
        
        /// <remarks/>
        public event GetScoreBandsCompletedEventHandler GetScoreBandsCompleted;
        
        /// <remarks/>
        public event GetImpactsForItemsCompletedEventHandler GetImpactsForItemsCompleted;
        
        /// <remarks/>
        public event GetPlanStrategiesCompletedEventHandler GetPlanStrategiesCompleted;
        
        /// <remarks/>
        public event GetRiskSecurityPropertiesCompletedEventHandler GetRiskSecurityPropertiesCompleted;
        
        /// <remarks/>
        public event MoveRiskCompletedEventHandler MoveRiskCompleted;
        
        /// <remarks/>
        public event MoveRisksCompletedEventHandler MoveRisksCompleted;
        
        /// <remarks/>
        public event MoveItemCompletedEventHandler MoveItemCompleted;
        
        /// <remarks/>
        public event UpdateRiskSecurityPropertiesCompletedEventHandler UpdateRiskSecurityPropertiesCompleted;
        
        /// <remarks/>
        public event UpdateResponseAssessmentCompletedEventHandler UpdateResponseAssessmentCompleted;
        
        /// <remarks/>
        public event GetResponseAssessmentCompletedEventHandler GetResponseAssessmentCompleted;
        
        /// <remarks/>
        public event GetResourceRolesCompletedEventHandler GetResourceRolesCompleted;
        
        /// <remarks/>
        public event GetResourcesAndGroupsCompletedEventHandler GetResourcesAndGroupsCompleted;
        
        /// <remarks/>
        public event GetColourConfigCompletedEventHandler GetColourConfigCompleted;
        
        /// <remarks/>
        public event GetClassificationsCompletedEventHandler GetClassificationsCompleted;
        
        /// <remarks/>
        public event GetCaveatsCompletedEventHandler GetCaveatsCompleted;
        
        /// <remarks/>
        public event GetConfigurationSetsCompletedEventHandler GetConfigurationSetsCompleted;
        
        /// <remarks/>
        public event GetSecurityAttributesCompletedEventHandler GetSecurityAttributesCompleted;
        
        /// <remarks/>
        public event GetCurrenciesCompletedEventHandler GetCurrenciesCompleted;
        
        /// <remarks/>
        public event GetResourceCompletedEventHandler GetResourceCompleted;
        
        /// <remarks/>
        public event AddResourceCompletedEventHandler AddResourceCompleted;
        
        /// <remarks/>
        public event UpdateResourceCompletedEventHandler UpdateResourceCompleted;
        
        /// <remarks/>
        public event DeleteResourceCompletedEventHandler DeleteResourceCompleted;
        
        /// <remarks/>
        public event AddResourceToGroupCompletedEventHandler AddResourceToGroupCompleted;
        
        /// <remarks/>
        public event RemoveResourceFromGroupCompletedEventHandler RemoveResourceFromGroupCompleted;
        
        /// <remarks/>
        public event RemoveResourceFromAllGroupsCompletedEventHandler RemoveResourceFromAllGroupsCompleted;
        
        /// <remarks/>
        public event GetLanguageSetCompletedEventHandler GetLanguageSetCompleted;
        
        /// <remarks/>
        public event GetLanguageSetsCompletedEventHandler GetLanguageSetsCompleted;
        
        /// <remarks/>
        public event GetImpactCategoryTypesCompletedEventHandler GetImpactCategoryTypesCompleted;
        
        /// <remarks/>
        public event LinkPlanCompletedEventHandler LinkPlanCompleted;
        
        /// <remarks/>
        public event UnlinkPlanCompletedEventHandler UnlinkPlanCompleted;
        
        /// <remarks/>
        public event UnlinkResponsesFromPlanCompletedEventHandler UnlinkResponsesFromPlanCompleted;
        
        /// <remarks/>
        public event LinkResponsesToPlanCompletedEventHandler LinkResponsesToPlanCompleted;
        
        /// <remarks/>
        public event GetOperatingResultCompletedEventHandler GetOperatingResultCompleted;
        
        /// <remarks/>
        public event GetDesignResultCompletedEventHandler GetDesignResultCompleted;
        
        /// <remarks/>
        public event GetControlInfluenceCompletedEventHandler GetControlInfluenceCompleted;
        
        /// <remarks/>
        public event GetEvaluationTestTypeCompletedEventHandler GetEvaluationTestTypeCompleted;
        
        /// <remarks/>
        public event GetCustomList1ValuesCompletedEventHandler GetCustomList1ValuesCompleted;
        
        /// <remarks/>
        public event GetCustomList2ValuesCompletedEventHandler GetCustomList2ValuesCompleted;
        
        /// <remarks/>
        public event GetCustomList3ValuesCompletedEventHandler GetCustomList3ValuesCompleted;
        
        /// <remarks/>
        public event GetRequirementFieldConfigurationsCompletedEventHandler GetRequirementFieldConfigurationsCompleted;
        
        /// <remarks/>
        public event GetEvaluationTestConditionCompletedEventHandler GetEvaluationTestConditionCompleted;
        
        /// <remarks/>
        public event GetEvaluationTestClassificationCompletedEventHandler GetEvaluationTestClassificationCompleted;
        
        /// <remarks/>
        public event GetLicensedFeaturesCompletedEventHandler GetLicensedFeaturesCompleted;
        
        /// <remarks/>
        public event GetAvailableWebPartsCompletedEventHandler GetAvailableWebPartsCompleted;
        
        /// <remarks/>
        public event GetRequirementsCompletedEventHandler GetRequirementsCompleted;
        
        /// <remarks/>
        public event GetRequirementFiltersCompletedEventHandler GetRequirementFiltersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetArmUrl", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArmUrl() {
            object[] results = this.Invoke("GetArmUrl", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArmUrlAsync() {
            this.GetArmUrlAsync(null);
        }
        
        /// <remarks/>
        public void GetArmUrlAsync(object userState) {
            if ((this.GetArmUrlOperationCompleted == null)) {
                this.GetArmUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArmUrlOperationCompleted);
            }
            this.InvokeAsync("GetArmUrl", new object[0], this.GetArmUrlOperationCompleted, userState);
        }
        
        private void OnGetArmUrlOperationCompleted(object arg) {
            if ((this.GetArmUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArmUrlCompleted(this, new GetArmUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetPortalAccess", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPortalAccess() {
            object[] results = this.Invoke("GetPortalAccess", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPortalAccessAsync() {
            this.GetPortalAccessAsync(null);
        }
        
        /// <remarks/>
        public void GetPortalAccessAsync(object userState) {
            if ((this.GetPortalAccessOperationCompleted == null)) {
                this.GetPortalAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPortalAccessOperationCompleted);
            }
            this.InvokeAsync("GetPortalAccess", new object[0], this.GetPortalAccessOperationCompleted, userState);
        }
        
        private void OnGetPortalAccessOperationCompleted(object arg) {
            if ((this.GetPortalAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPortalAccessCompleted(this, new GetPortalAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetInstances", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InstanceTransfer[] GetInstances() {
            object[] results = this.Invoke("GetInstances", new object[0]);
            return ((InstanceTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInstancesAsync() {
            this.GetInstancesAsync(null);
        }
        
        /// <remarks/>
        public void GetInstancesAsync(object userState) {
            if ((this.GetInstancesOperationCompleted == null)) {
                this.GetInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstancesOperationCompleted);
            }
            this.InvokeAsync("GetInstances", new object[0], this.GetInstancesOperationCompleted, userState);
        }
        
        private void OnGetInstancesOperationCompleted(object arg) {
            if ((this.GetInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstancesCompleted(this, new GetInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetBusinessAreas", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessAreaTransfer[] GetBusinessAreas() {
            object[] results = this.Invoke("GetBusinessAreas", new object[0]);
            return ((BusinessAreaTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBusinessAreasAsync() {
            this.GetBusinessAreasAsync(null);
        }
        
        /// <remarks/>
        public void GetBusinessAreasAsync(object userState) {
            if ((this.GetBusinessAreasOperationCompleted == null)) {
                this.GetBusinessAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusinessAreasOperationCompleted);
            }
            this.InvokeAsync("GetBusinessAreas", new object[0], this.GetBusinessAreasOperationCompleted, userState);
        }
        
        private void OnGetBusinessAreasOperationCompleted(object arg) {
            if ((this.GetBusinessAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusinessAreasCompleted(this, new GetBusinessAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetBlackFlagTypes", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BlackFlagTypeTransfer[] GetBlackFlagTypes() {
            object[] results = this.Invoke("GetBlackFlagTypes", new object[0]);
            return ((BlackFlagTypeTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBlackFlagTypesAsync() {
            this.GetBlackFlagTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetBlackFlagTypesAsync(object userState) {
            if ((this.GetBlackFlagTypesOperationCompleted == null)) {
                this.GetBlackFlagTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlackFlagTypesOperationCompleted);
            }
            this.InvokeAsync("GetBlackFlagTypes", new object[0], this.GetBlackFlagTypesOperationCompleted, userState);
        }
        
        private void OnGetBlackFlagTypesOperationCompleted(object arg) {
            if ((this.GetBlackFlagTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlackFlagTypesCompleted(this, new GetBlackFlagTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddRiskAndImpact", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactTransfer AddRiskAndImpact(int recordType, ImpactTransfer impactTransfer, RiskTransfer riskTransfer) {
            object[] results = this.Invoke("AddRiskAndImpact", new object[] {
                        recordType,
                        impactTransfer,
                        riskTransfer});
            return ((ImpactTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddRiskAndImpactAsync(int recordType, ImpactTransfer impactTransfer, RiskTransfer riskTransfer) {
            this.AddRiskAndImpactAsync(recordType, impactTransfer, riskTransfer, null);
        }
        
        /// <remarks/>
        public void AddRiskAndImpactAsync(int recordType, ImpactTransfer impactTransfer, RiskTransfer riskTransfer, object userState) {
            if ((this.AddRiskAndImpactOperationCompleted == null)) {
                this.AddRiskAndImpactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRiskAndImpactOperationCompleted);
            }
            this.InvokeAsync("AddRiskAndImpact", new object[] {
                        recordType,
                        impactTransfer,
                        riskTransfer}, this.AddRiskAndImpactOperationCompleted, userState);
        }
        
        private void OnAddRiskAndImpactOperationCompleted(object arg) {
            if ((this.AddRiskAndImpactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRiskAndImpactCompleted(this, new AddRiskAndImpactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateImpact", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactTransfer UpdateImpact(int recordType, ImpactTransfer impactTransfer) {
            object[] results = this.Invoke("UpdateImpact", new object[] {
                        recordType,
                        impactTransfer});
            return ((ImpactTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateImpactAsync(int recordType, ImpactTransfer impactTransfer) {
            this.UpdateImpactAsync(recordType, impactTransfer, null);
        }
        
        /// <remarks/>
        public void UpdateImpactAsync(int recordType, ImpactTransfer impactTransfer, object userState) {
            if ((this.UpdateImpactOperationCompleted == null)) {
                this.UpdateImpactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateImpactOperationCompleted);
            }
            this.InvokeAsync("UpdateImpact", new object[] {
                        recordType,
                        impactTransfer}, this.UpdateImpactOperationCompleted, userState);
        }
        
        private void OnUpdateImpactOperationCompleted(object arg) {
            if ((this.UpdateImpactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateImpactCompleted(this, new UpdateImpactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateRisk", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskTransfer UpdateRisk(RiskTransfer riskTransfer, string riskStatusChangedComments) {
            object[] results = this.Invoke("UpdateRisk", new object[] {
                        riskTransfer,
                        riskStatusChangedComments});
            return ((RiskTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRiskAsync(RiskTransfer riskTransfer, string riskStatusChangedComments) {
            this.UpdateRiskAsync(riskTransfer, riskStatusChangedComments, null);
        }
        
        /// <remarks/>
        public void UpdateRiskAsync(RiskTransfer riskTransfer, string riskStatusChangedComments, object userState) {
            if ((this.UpdateRiskOperationCompleted == null)) {
                this.UpdateRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRiskOperationCompleted);
            }
            this.InvokeAsync("UpdateRisk", new object[] {
                        riskTransfer,
                        riskStatusChangedComments}, this.UpdateRiskOperationCompleted, userState);
        }
        
        private void OnUpdateRiskOperationCompleted(object arg) {
            if ((this.UpdateRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRiskCompleted(this, new UpdateRiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteImpact", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteImpact(int impactID) {
            this.Invoke("DeleteImpact", new object[] {
                        impactID});
        }
        
        /// <remarks/>
        public void DeleteImpactAsync(int impactID) {
            this.DeleteImpactAsync(impactID, null);
        }
        
        /// <remarks/>
        public void DeleteImpactAsync(int impactID, object userState) {
            if ((this.DeleteImpactOperationCompleted == null)) {
                this.DeleteImpactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImpactOperationCompleted);
            }
            this.InvokeAsync("DeleteImpact", new object[] {
                        impactID}, this.DeleteImpactOperationCompleted, userState);
        }
        
        private void OnDeleteImpactOperationCompleted(object arg) {
            if ((this.DeleteImpactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImpactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddPlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlanTransfer AddPlan(int impactID, PlanTransfer planTransfer) {
            object[] results = this.Invoke("AddPlan", new object[] {
                        impactID,
                        planTransfer});
            return ((PlanTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddPlanAsync(int impactID, PlanTransfer planTransfer) {
            this.AddPlanAsync(impactID, planTransfer, null);
        }
        
        /// <remarks/>
        public void AddPlanAsync(int impactID, PlanTransfer planTransfer, object userState) {
            if ((this.AddPlanOperationCompleted == null)) {
                this.AddPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPlanOperationCompleted);
            }
            this.InvokeAsync("AddPlan", new object[] {
                        impactID,
                        planTransfer}, this.AddPlanOperationCompleted, userState);
        }
        
        private void OnAddPlanOperationCompleted(object arg) {
            if ((this.AddPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPlanCompleted(this, new AddPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdatePlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlanTransfer UpdatePlan(PlanTransfer planTransfer) {
            object[] results = this.Invoke("UpdatePlan", new object[] {
                        planTransfer});
            return ((PlanTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePlanAsync(PlanTransfer planTransfer) {
            this.UpdatePlanAsync(planTransfer, null);
        }
        
        /// <remarks/>
        public void UpdatePlanAsync(PlanTransfer planTransfer, object userState) {
            if ((this.UpdatePlanOperationCompleted == null)) {
                this.UpdatePlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePlanOperationCompleted);
            }
            this.InvokeAsync("UpdatePlan", new object[] {
                        planTransfer}, this.UpdatePlanOperationCompleted, userState);
        }
        
        private void OnUpdatePlanOperationCompleted(object arg) {
            if ((this.UpdatePlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePlanCompleted(this, new UpdatePlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddResponse", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseTransfer AddResponse(int planID, int recordType, ResponseTransfer response) {
            object[] results = this.Invoke("AddResponse", new object[] {
                        planID,
                        recordType,
                        response});
            return ((ResponseTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddResponseAsync(int planID, int recordType, ResponseTransfer response) {
            this.AddResponseAsync(planID, recordType, response, null);
        }
        
        /// <remarks/>
        public void AddResponseAsync(int planID, int recordType, ResponseTransfer response, object userState) {
            if ((this.AddResponseOperationCompleted == null)) {
                this.AddResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResponseOperationCompleted);
            }
            this.InvokeAsync("AddResponse", new object[] {
                        planID,
                        recordType,
                        response}, this.AddResponseOperationCompleted, userState);
        }
        
        private void OnAddResponseOperationCompleted(object arg) {
            if ((this.AddResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResponseCompleted(this, new AddResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateResponse", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseTransfer UpdateResponse(int recordType, ResponseTransfer response) {
            object[] results = this.Invoke("UpdateResponse", new object[] {
                        recordType,
                        response});
            return ((ResponseTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateResponseAsync(int recordType, ResponseTransfer response) {
            this.UpdateResponseAsync(recordType, response, null);
        }
        
        /// <remarks/>
        public void UpdateResponseAsync(int recordType, ResponseTransfer response, object userState) {
            if ((this.UpdateResponseOperationCompleted == null)) {
                this.UpdateResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResponseOperationCompleted);
            }
            this.InvokeAsync("UpdateResponse", new object[] {
                        recordType,
                        response}, this.UpdateResponseOperationCompleted, userState);
        }
        
        private void OnUpdateResponseOperationCompleted(object arg) {
            if ((this.UpdateResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateResponseCompleted(this, new UpdateResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteResponse", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteResponse(int impactID, int responseID) {
            this.Invoke("DeleteResponse", new object[] {
                        impactID,
                        responseID});
        }
        
        /// <remarks/>
        public void DeleteResponseAsync(int impactID, int responseID) {
            this.DeleteResponseAsync(impactID, responseID, null);
        }
        
        /// <remarks/>
        public void DeleteResponseAsync(int impactID, int responseID, object userState) {
            if ((this.DeleteResponseOperationCompleted == null)) {
                this.DeleteResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResponseOperationCompleted);
            }
            this.InvokeAsync("DeleteResponse", new object[] {
                        impactID,
                        responseID}, this.DeleteResponseOperationCompleted, userState);
        }
        
        private void OnDeleteResponseOperationCompleted(object arg) {
            if ((this.DeleteResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResponseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetImpactsForFilter", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("impacts")]
        public ImpactTransfer[] GetImpactsForFilter(int itemID, int recordTypeID, short treeType, int filterID, int pageNumber, short pageSize, out RiskTransfer[] risks, out int totalPages) {
            object[] results = this.Invoke("GetImpactsForFilter", new object[] {
                        itemID,
                        recordTypeID,
                        treeType,
                        filterID,
                        pageNumber,
                        pageSize});
            risks = ((RiskTransfer[])(results[1]));
            totalPages = ((int)(results[2]));
            return ((ImpactTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImpactsForFilterAsync(int itemID, int recordTypeID, short treeType, int filterID, int pageNumber, short pageSize) {
            this.GetImpactsForFilterAsync(itemID, recordTypeID, treeType, filterID, pageNumber, pageSize, null);
        }
        
        /// <remarks/>
        public void GetImpactsForFilterAsync(int itemID, int recordTypeID, short treeType, int filterID, int pageNumber, short pageSize, object userState) {
            if ((this.GetImpactsForFilterOperationCompleted == null)) {
                this.GetImpactsForFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImpactsForFilterOperationCompleted);
            }
            this.InvokeAsync("GetImpactsForFilter", new object[] {
                        itemID,
                        recordTypeID,
                        treeType,
                        filterID,
                        pageNumber,
                        pageSize}, this.GetImpactsForFilterOperationCompleted, userState);
        }
        
        private void OnGetImpactsForFilterOperationCompleted(object arg) {
            if ((this.GetImpactsForFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImpactsForFilterCompleted(this, new GetImpactsForFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResponsesForFilter", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseTransfer[] GetResponsesForFilter(int itemID, short treeType, int filterID, int pageNumber, short pageSize, out int totalPages) {
            object[] results = this.Invoke("GetResponsesForFilter", new object[] {
                        itemID,
                        treeType,
                        filterID,
                        pageNumber,
                        pageSize});
            totalPages = ((int)(results[1]));
            return ((ResponseTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResponsesForFilterAsync(int itemID, short treeType, int filterID, int pageNumber, short pageSize) {
            this.GetResponsesForFilterAsync(itemID, treeType, filterID, pageNumber, pageSize, null);
        }
        
        /// <remarks/>
        public void GetResponsesForFilterAsync(int itemID, short treeType, int filterID, int pageNumber, short pageSize, object userState) {
            if ((this.GetResponsesForFilterOperationCompleted == null)) {
                this.GetResponsesForFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponsesForFilterOperationCompleted);
            }
            this.InvokeAsync("GetResponsesForFilter", new object[] {
                        itemID,
                        treeType,
                        filterID,
                        pageNumber,
                        pageSize}, this.GetResponsesForFilterOperationCompleted, userState);
        }
        
        private void OnGetResponsesForFilterOperationCompleted(object arg) {
            if ((this.GetResponsesForFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponsesForFilterCompleted(this, new GetResponsesForFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetPlansForFilter", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlanTransfer[] GetPlansForFilter(int itemID, short treeType, int filterID, int pageNumber, short pageSize, out int totalPages) {
            object[] results = this.Invoke("GetPlansForFilter", new object[] {
                        itemID,
                        treeType,
                        filterID,
                        pageNumber,
                        pageSize});
            totalPages = ((int)(results[1]));
            return ((PlanTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlansForFilterAsync(int itemID, short treeType, int filterID, int pageNumber, short pageSize) {
            this.GetPlansForFilterAsync(itemID, treeType, filterID, pageNumber, pageSize, null);
        }
        
        /// <remarks/>
        public void GetPlansForFilterAsync(int itemID, short treeType, int filterID, int pageNumber, short pageSize, object userState) {
            if ((this.GetPlansForFilterOperationCompleted == null)) {
                this.GetPlansForFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlansForFilterOperationCompleted);
            }
            this.InvokeAsync("GetPlansForFilter", new object[] {
                        itemID,
                        treeType,
                        filterID,
                        pageNumber,
                        pageSize}, this.GetPlansForFilterOperationCompleted, userState);
        }
        
        private void OnGetPlansForFilterOperationCompleted(object arg) {
            if ((this.GetPlansForFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlansForFilterCompleted(this, new GetPlansForFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResponsesForPlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseTransfer[] GetResponsesForPlan(int planID, int itemID) {
            object[] results = this.Invoke("GetResponsesForPlan", new object[] {
                        planID,
                        itemID});
            return ((ResponseTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResponsesForPlanAsync(int planID, int itemID) {
            this.GetResponsesForPlanAsync(planID, itemID, null);
        }
        
        /// <remarks/>
        public void GetResponsesForPlanAsync(int planID, int itemID, object userState) {
            if ((this.GetResponsesForPlanOperationCompleted == null)) {
                this.GetResponsesForPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponsesForPlanOperationCompleted);
            }
            this.InvokeAsync("GetResponsesForPlan", new object[] {
                        planID,
                        itemID}, this.GetResponsesForPlanOperationCompleted, userState);
        }
        
        private void OnGetResponsesForPlanOperationCompleted(object arg) {
            if ((this.GetResponsesForPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponsesForPlanCompleted(this, new GetResponsesForPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetImpact", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactTransfer GetImpact(int impactID, out RiskTransfer risk, out ItemTransfer item, out PlanTransfer plan) {
            object[] results = this.Invoke("GetImpact", new object[] {
                        impactID});
            risk = ((RiskTransfer)(results[1]));
            item = ((ItemTransfer)(results[2]));
            plan = ((PlanTransfer)(results[3]));
            return ((ImpactTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetImpactAsync(int impactID) {
            this.GetImpactAsync(impactID, null);
        }
        
        /// <remarks/>
        public void GetImpactAsync(int impactID, object userState) {
            if ((this.GetImpactOperationCompleted == null)) {
                this.GetImpactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImpactOperationCompleted);
            }
            this.InvokeAsync("GetImpact", new object[] {
                        impactID}, this.GetImpactOperationCompleted, userState);
        }
        
        private void OnGetImpactOperationCompleted(object arg) {
            if ((this.GetImpactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImpactCompleted(this, new GetImpactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRisk", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskTransfer GetRisk(int riskID, int itemID) {
            object[] results = this.Invoke("GetRisk", new object[] {
                        riskID,
                        itemID});
            return ((RiskTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetRiskAsync(int riskID, int itemID) {
            this.GetRiskAsync(riskID, itemID, null);
        }
        
        /// <remarks/>
        public void GetRiskAsync(int riskID, int itemID, object userState) {
            if ((this.GetRiskOperationCompleted == null)) {
                this.GetRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRiskOperationCompleted);
            }
            this.InvokeAsync("GetRisk", new object[] {
                        riskID,
                        itemID}, this.GetRiskOperationCompleted, userState);
        }
        
        private void OnGetRiskOperationCompleted(object arg) {
            if ((this.GetRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRiskCompleted(this, new GetRiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetPlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlanTransfer GetPlan(int planID, int itemID) {
            object[] results = this.Invoke("GetPlan", new object[] {
                        planID,
                        itemID});
            return ((PlanTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanAsync(int planID, int itemID) {
            this.GetPlanAsync(planID, itemID, null);
        }
        
        /// <remarks/>
        public void GetPlanAsync(int planID, int itemID, object userState) {
            if ((this.GetPlanOperationCompleted == null)) {
                this.GetPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanOperationCompleted);
            }
            this.InvokeAsync("GetPlan", new object[] {
                        planID,
                        itemID}, this.GetPlanOperationCompleted, userState);
        }
        
        private void OnGetPlanOperationCompleted(object arg) {
            if ((this.GetPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanCompleted(this, new GetPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ItemTransfer GetItem(int itemID) {
            object[] results = this.Invoke("GetItem", new object[] {
                        itemID});
            return ((ItemTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemAsync(int itemID) {
            this.GetItemAsync(itemID, null);
        }
        
        /// <remarks/>
        public void GetItemAsync(int itemID, object userState) {
            if ((this.GetItemOperationCompleted == null)) {
                this.GetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemOperationCompleted);
            }
            this.InvokeAsync("GetItem", new object[] {
                        itemID}, this.GetItemOperationCompleted, userState);
        }
        
        private void OnGetItemOperationCompleted(object arg) {
            if ((this.GetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemCompleted(this, new GetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetTreeItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TreeItemTransfer GetTreeItem(int rootItemID, short treeType, short loadDepth) {
            object[] results = this.Invoke("GetTreeItem", new object[] {
                        rootItemID,
                        treeType,
                        loadDepth});
            return ((TreeItemTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeItemAsync(int rootItemID, short treeType, short loadDepth) {
            this.GetTreeItemAsync(rootItemID, treeType, loadDepth, null);
        }
        
        /// <remarks/>
        public void GetTreeItemAsync(int rootItemID, short treeType, short loadDepth, object userState) {
            if ((this.GetTreeItemOperationCompleted == null)) {
                this.GetTreeItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeItemOperationCompleted);
            }
            this.InvokeAsync("GetTreeItem", new object[] {
                        rootItemID,
                        treeType,
                        loadDepth}, this.GetTreeItemOperationCompleted, userState);
        }
        
        private void OnGetTreeItemOperationCompleted(object arg) {
            if ((this.GetTreeItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeItemCompleted(this, new GetTreeItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResponse", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseTransfer GetResponse(int impactID, int responseID) {
            object[] results = this.Invoke("GetResponse", new object[] {
                        impactID,
                        responseID});
            return ((ResponseTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetResponseAsync(int impactID, int responseID) {
            this.GetResponseAsync(impactID, responseID, null);
        }
        
        /// <remarks/>
        public void GetResponseAsync(int impactID, int responseID, object userState) {
            if ((this.GetResponseOperationCompleted == null)) {
                this.GetResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponseOperationCompleted);
            }
            this.InvokeAsync("GetResponse", new object[] {
                        impactID,
                        responseID}, this.GetResponseOperationCompleted, userState);
        }
        
        private void OnGetResponseOperationCompleted(object arg) {
            if ((this.GetResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponseCompleted(this, new GetResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResponseStatuses", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseStatusTransfer[] GetResponseStatuses() {
            object[] results = this.Invoke("GetResponseStatuses", new object[0]);
            return ((ResponseStatusTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResponseStatusesAsync() {
            this.GetResponseStatusesAsync(null);
        }
        
        /// <remarks/>
        public void GetResponseStatusesAsync(object userState) {
            if ((this.GetResponseStatusesOperationCompleted == null)) {
                this.GetResponseStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponseStatusesOperationCompleted);
            }
            this.InvokeAsync("GetResponseStatuses", new object[0], this.GetResponseStatusesOperationCompleted, userState);
        }
        
        private void OnGetResponseStatusesOperationCompleted(object arg) {
            if ((this.GetResponseStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponseStatusesCompleted(this, new GetResponseStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResponseEffectivenesses", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseEffectivenessTransfer[] GetResponseEffectivenesses() {
            object[] results = this.Invoke("GetResponseEffectivenesses", new object[0]);
            return ((ResponseEffectivenessTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResponseEffectivenessesAsync() {
            this.GetResponseEffectivenessesAsync(null);
        }
        
        /// <remarks/>
        public void GetResponseEffectivenessesAsync(object userState) {
            if ((this.GetResponseEffectivenessesOperationCompleted == null)) {
                this.GetResponseEffectivenessesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponseEffectivenessesOperationCompleted);
            }
            this.InvokeAsync("GetResponseEffectivenesses", new object[0], this.GetResponseEffectivenessesOperationCompleted, userState);
        }
        
        private void OnGetResponseEffectivenessesOperationCompleted(object arg) {
            if ((this.GetResponseEffectivenessesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponseEffectivenessesCompleted(this, new GetResponseEffectivenessesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResponsePriorities", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponsePriorityTransfer[] GetResponsePriorities() {
            object[] results = this.Invoke("GetResponsePriorities", new object[0]);
            return ((ResponsePriorityTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResponsePrioritiesAsync() {
            this.GetResponsePrioritiesAsync(null);
        }
        
        /// <remarks/>
        public void GetResponsePrioritiesAsync(object userState) {
            if ((this.GetResponsePrioritiesOperationCompleted == null)) {
                this.GetResponsePrioritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponsePrioritiesOperationCompleted);
            }
            this.InvokeAsync("GetResponsePriorities", new object[0], this.GetResponsePrioritiesOperationCompleted, userState);
        }
        
        private void OnGetResponsePrioritiesOperationCompleted(object arg) {
            if ((this.GetResponsePrioritiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponsePrioritiesCompleted(this, new GetResponsePrioritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetImpactCategories", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactCategoryTransfer[] GetImpactCategories() {
            object[] results = this.Invoke("GetImpactCategories", new object[0]);
            return ((ImpactCategoryTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImpactCategoriesAsync() {
            this.GetImpactCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetImpactCategoriesAsync(object userState) {
            if ((this.GetImpactCategoriesOperationCompleted == null)) {
                this.GetImpactCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImpactCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetImpactCategories", new object[0], this.GetImpactCategoriesOperationCompleted, userState);
        }
        
        private void OnGetImpactCategoriesOperationCompleted(object arg) {
            if ((this.GetImpactCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImpactCategoriesCompleted(this, new GetImpactCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetImpactGroups", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactGroupTransfer[] GetImpactGroups(bool isConfig) {
            object[] results = this.Invoke("GetImpactGroups", new object[] {
                        isConfig});
            return ((ImpactGroupTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImpactGroupsAsync(bool isConfig) {
            this.GetImpactGroupsAsync(isConfig, null);
        }
        
        /// <remarks/>
        public void GetImpactGroupsAsync(bool isConfig, object userState) {
            if ((this.GetImpactGroupsOperationCompleted == null)) {
                this.GetImpactGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImpactGroupsOperationCompleted);
            }
            this.InvokeAsync("GetImpactGroups", new object[] {
                        isConfig}, this.GetImpactGroupsOperationCompleted, userState);
        }
        
        private void OnGetImpactGroupsOperationCompleted(object arg) {
            if ((this.GetImpactGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImpactGroupsCompleted(this, new GetImpactGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetPIDPoints", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PIDPointsTransfer GetPIDPoints(int impactID) {
            object[] results = this.Invoke("GetPIDPoints", new object[] {
                        impactID});
            return ((PIDPointsTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetPIDPointsAsync(int impactID) {
            this.GetPIDPointsAsync(impactID, null);
        }
        
        /// <remarks/>
        public void GetPIDPointsAsync(int impactID, object userState) {
            if ((this.GetPIDPointsOperationCompleted == null)) {
                this.GetPIDPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPIDPointsOperationCompleted);
            }
            this.InvokeAsync("GetPIDPoints", new object[] {
                        impactID}, this.GetPIDPointsOperationCompleted, userState);
        }
        
        private void OnGetPIDPointsOperationCompleted(object arg) {
            if ((this.GetPIDPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPIDPointsCompleted(this, new GetPIDPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetPIDPointsForFilter", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PIDPointsTransfer[] GetPIDPointsForFilter(int itemID, int filterID, int reasessmentSchemeId) {
            object[] results = this.Invoke("GetPIDPointsForFilter", new object[] {
                        itemID,
                        filterID,
                        reasessmentSchemeId});
            return ((PIDPointsTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPIDPointsForFilterAsync(int itemID, int filterID, int reasessmentSchemeId) {
            this.GetPIDPointsForFilterAsync(itemID, filterID, reasessmentSchemeId, null);
        }
        
        /// <remarks/>
        public void GetPIDPointsForFilterAsync(int itemID, int filterID, int reasessmentSchemeId, object userState) {
            if ((this.GetPIDPointsForFilterOperationCompleted == null)) {
                this.GetPIDPointsForFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPIDPointsForFilterOperationCompleted);
            }
            this.InvokeAsync("GetPIDPointsForFilter", new object[] {
                        itemID,
                        filterID,
                        reasessmentSchemeId}, this.GetPIDPointsForFilterOperationCompleted, userState);
        }
        
        private void OnGetPIDPointsForFilterOperationCompleted(object arg) {
            if ((this.GetPIDPointsForFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPIDPointsForFilterCompleted(this, new GetPIDPointsForFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRiskLevels", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskLevelTransfer[] GetRiskLevels(int pidId) {
            object[] results = this.Invoke("GetRiskLevels", new object[] {
                        pidId});
            return ((RiskLevelTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRiskLevelsAsync(int pidId) {
            this.GetRiskLevelsAsync(pidId, null);
        }
        
        /// <remarks/>
        public void GetRiskLevelsAsync(int pidId, object userState) {
            if ((this.GetRiskLevelsOperationCompleted == null)) {
                this.GetRiskLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRiskLevelsOperationCompleted);
            }
            this.InvokeAsync("GetRiskLevels", new object[] {
                        pidId}, this.GetRiskLevelsOperationCompleted, userState);
        }
        
        private void OnGetRiskLevelsOperationCompleted(object arg) {
            if ((this.GetRiskLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRiskLevelsCompleted(this, new GetRiskLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetScoringScheme", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScoringSchemeTransfer GetScoringScheme(int schemeId) {
            object[] results = this.Invoke("GetScoringScheme", new object[] {
                        schemeId});
            return ((ScoringSchemeTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetScoringSchemeAsync(int schemeId) {
            this.GetScoringSchemeAsync(schemeId, null);
        }
        
        /// <remarks/>
        public void GetScoringSchemeAsync(int schemeId, object userState) {
            if ((this.GetScoringSchemeOperationCompleted == null)) {
                this.GetScoringSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScoringSchemeOperationCompleted);
            }
            this.InvokeAsync("GetScoringScheme", new object[] {
                        schemeId}, this.GetScoringSchemeOperationCompleted, userState);
        }
        
        private void OnGetScoringSchemeOperationCompleted(object arg) {
            if ((this.GetScoringSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScoringSchemeCompleted(this, new GetScoringSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetScoringSchemesForItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScoringSchemeTransfer[] GetScoringSchemesForItem(int itemID, bool includeCriteria) {
            object[] results = this.Invoke("GetScoringSchemesForItem", new object[] {
                        itemID,
                        includeCriteria});
            return ((ScoringSchemeTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScoringSchemesForItemAsync(int itemID, bool includeCriteria) {
            this.GetScoringSchemesForItemAsync(itemID, includeCriteria, null);
        }
        
        /// <remarks/>
        public void GetScoringSchemesForItemAsync(int itemID, bool includeCriteria, object userState) {
            if ((this.GetScoringSchemesForItemOperationCompleted == null)) {
                this.GetScoringSchemesForItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScoringSchemesForItemOperationCompleted);
            }
            this.InvokeAsync("GetScoringSchemesForItem", new object[] {
                        itemID,
                        includeCriteria}, this.GetScoringSchemesForItemOperationCompleted, userState);
        }
        
        private void OnGetScoringSchemesForItemOperationCompleted(object arg) {
            if ((this.GetScoringSchemesForItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScoringSchemesForItemCompleted(this, new GetScoringSchemesForItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResources", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceTransfer[] GetResources() {
            object[] results = this.Invoke("GetResources", new object[0]);
            return ((ResourceTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResourcesAsync() {
            this.GetResourcesAsync(null);
        }
        
        /// <remarks/>
        public void GetResourcesAsync(object userState) {
            if ((this.GetResourcesOperationCompleted == null)) {
                this.GetResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourcesOperationCompleted);
            }
            this.InvokeAsync("GetResources", new object[0], this.GetResourcesOperationCompleted, userState);
        }
        
        private void OnGetResourcesOperationCompleted(object arg) {
            if ((this.GetResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourcesCompleted(this, new GetResourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRiskCategories", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskCategoryTransfer[] GetRiskCategories() {
            object[] results = this.Invoke("GetRiskCategories", new object[0]);
            return ((RiskCategoryTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRiskCategoriesAsync() {
            this.GetRiskCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetRiskCategoriesAsync(object userState) {
            if ((this.GetRiskCategoriesOperationCompleted == null)) {
                this.GetRiskCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRiskCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetRiskCategories", new object[0], this.GetRiskCategoriesOperationCompleted, userState);
        }
        
        private void OnGetRiskCategoriesOperationCompleted(object arg) {
            if ((this.GetRiskCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRiskCategoriesCompleted(this, new GetRiskCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRiskStatuses", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskStatusTransfer[] GetRiskStatuses(int eventID) {
            object[] results = this.Invoke("GetRiskStatuses", new object[] {
                        eventID});
            return ((RiskStatusTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRiskStatusesAsync(int eventID) {
            this.GetRiskStatusesAsync(eventID, null);
        }
        
        /// <remarks/>
        public void GetRiskStatusesAsync(int eventID, object userState) {
            if ((this.GetRiskStatusesOperationCompleted == null)) {
                this.GetRiskStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRiskStatusesOperationCompleted);
            }
            this.InvokeAsync("GetRiskStatuses", new object[] {
                        eventID}, this.GetRiskStatusesOperationCompleted, userState);
        }
        
        private void OnGetRiskStatusesOperationCompleted(object arg) {
            if ((this.GetRiskStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRiskStatusesCompleted(this, new GetRiskStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRiskPhases", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskPhaseTransfer[] GetRiskPhases() {
            object[] results = this.Invoke("GetRiskPhases", new object[0]);
            return ((RiskPhaseTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRiskPhasesAsync() {
            this.GetRiskPhasesAsync(null);
        }
        
        /// <remarks/>
        public void GetRiskPhasesAsync(object userState) {
            if ((this.GetRiskPhasesOperationCompleted == null)) {
                this.GetRiskPhasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRiskPhasesOperationCompleted);
            }
            this.InvokeAsync("GetRiskPhases", new object[0], this.GetRiskPhasesOperationCompleted, userState);
        }
        
        private void OnGetRiskPhasesOperationCompleted(object arg) {
            if ((this.GetRiskPhasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRiskPhasesCompleted(this, new GetRiskPhasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetTestFrequencies", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestFrequencyTransfer[] GetTestFrequencies() {
            object[] results = this.Invoke("GetTestFrequencies", new object[0]);
            return ((TestFrequencyTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestFrequenciesAsync() {
            this.GetTestFrequenciesAsync(null);
        }
        
        /// <remarks/>
        public void GetTestFrequenciesAsync(object userState) {
            if ((this.GetTestFrequenciesOperationCompleted == null)) {
                this.GetTestFrequenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestFrequenciesOperationCompleted);
            }
            this.InvokeAsync("GetTestFrequencies", new object[0], this.GetTestFrequenciesOperationCompleted, userState);
        }
        
        private void OnGetTestFrequenciesOperationCompleted(object arg) {
            if ((this.GetTestFrequenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestFrequenciesCompleted(this, new GetTestFrequenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetDesignEffectivenesses", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DesignEffectivenessTransfer[] GetDesignEffectivenesses() {
            object[] results = this.Invoke("GetDesignEffectivenesses", new object[0]);
            return ((DesignEffectivenessTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDesignEffectivenessesAsync() {
            this.GetDesignEffectivenessesAsync(null);
        }
        
        /// <remarks/>
        public void GetDesignEffectivenessesAsync(object userState) {
            if ((this.GetDesignEffectivenessesOperationCompleted == null)) {
                this.GetDesignEffectivenessesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDesignEffectivenessesOperationCompleted);
            }
            this.InvokeAsync("GetDesignEffectivenesses", new object[0], this.GetDesignEffectivenessesOperationCompleted, userState);
        }
        
        private void OnGetDesignEffectivenessesOperationCompleted(object arg) {
            if ((this.GetDesignEffectivenessesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDesignEffectivenessesCompleted(this, new GetDesignEffectivenessesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetControlClassifications", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ControlClassificationTransfer[] GetControlClassifications() {
            object[] results = this.Invoke("GetControlClassifications", new object[0]);
            return ((ControlClassificationTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetControlClassificationsAsync() {
            this.GetControlClassificationsAsync(null);
        }
        
        /// <remarks/>
        public void GetControlClassificationsAsync(object userState) {
            if ((this.GetControlClassificationsOperationCompleted == null)) {
                this.GetControlClassificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlClassificationsOperationCompleted);
            }
            this.InvokeAsync("GetControlClassifications", new object[0], this.GetControlClassificationsOperationCompleted, userState);
        }
        
        private void OnGetControlClassificationsOperationCompleted(object arg) {
            if ((this.GetControlClassificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetControlClassificationsCompleted(this, new GetControlClassificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetControlTypes", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ControlTypeTransfer[] GetControlTypes() {
            object[] results = this.Invoke("GetControlTypes", new object[0]);
            return ((ControlTypeTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetControlTypesAsync() {
            this.GetControlTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetControlTypesAsync(object userState) {
            if ((this.GetControlTypesOperationCompleted == null)) {
                this.GetControlTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlTypesOperationCompleted);
            }
            this.InvokeAsync("GetControlTypes", new object[0], this.GetControlTypesOperationCompleted, userState);
        }
        
        private void OnGetControlTypesOperationCompleted(object arg) {
            if ((this.GetControlTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetControlTypesCompleted(this, new GetControlTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetControlAssertions", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ControlAssertionTransfer[] GetControlAssertions() {
            object[] results = this.Invoke("GetControlAssertions", new object[0]);
            return ((ControlAssertionTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetControlAssertionsAsync() {
            this.GetControlAssertionsAsync(null);
        }
        
        /// <remarks/>
        public void GetControlAssertionsAsync(object userState) {
            if ((this.GetControlAssertionsOperationCompleted == null)) {
                this.GetControlAssertionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlAssertionsOperationCompleted);
            }
            this.InvokeAsync("GetControlAssertions", new object[0], this.GetControlAssertionsOperationCompleted, userState);
        }
        
        private void OnGetControlAssertionsOperationCompleted(object arg) {
            if ((this.GetControlAssertionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetControlAssertionsCompleted(this, new GetControlAssertionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetControlConditions", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ControlConditionTransfer[] GetControlConditions() {
            object[] results = this.Invoke("GetControlConditions", new object[0]);
            return ((ControlConditionTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetControlConditionsAsync() {
            this.GetControlConditionsAsync(null);
        }
        
        /// <remarks/>
        public void GetControlConditionsAsync(object userState) {
            if ((this.GetControlConditionsOperationCompleted == null)) {
                this.GetControlConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlConditionsOperationCompleted);
            }
            this.InvokeAsync("GetControlConditions", new object[0], this.GetControlConditionsOperationCompleted, userState);
        }
        
        private void OnGetControlConditionsOperationCompleted(object arg) {
            if ((this.GetControlConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetControlConditionsCompleted(this, new GetControlConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRiskSources", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskSourceTransfer[] GetRiskSources() {
            object[] results = this.Invoke("GetRiskSources", new object[0]);
            return ((RiskSourceTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRiskSourcesAsync() {
            this.GetRiskSourcesAsync(null);
        }
        
        /// <remarks/>
        public void GetRiskSourcesAsync(object userState) {
            if ((this.GetRiskSourcesOperationCompleted == null)) {
                this.GetRiskSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRiskSourcesOperationCompleted);
            }
            this.InvokeAsync("GetRiskSources", new object[0], this.GetRiskSourcesOperationCompleted, userState);
        }
        
        private void OnGetRiskSourcesOperationCompleted(object arg) {
            if ((this.GetRiskSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRiskSourcesCompleted(this, new GetRiskSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetDistributions", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistributionTransfer[] GetDistributions() {
            object[] results = this.Invoke("GetDistributions", new object[0]);
            return ((DistributionTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDistributionsAsync() {
            this.GetDistributionsAsync(null);
        }
        
        /// <remarks/>
        public void GetDistributionsAsync(object userState) {
            if ((this.GetDistributionsOperationCompleted == null)) {
                this.GetDistributionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistributionsOperationCompleted);
            }
            this.InvokeAsync("GetDistributions", new object[0], this.GetDistributionsOperationCompleted, userState);
        }
        
        private void OnGetDistributionsOperationCompleted(object arg) {
            if ((this.GetDistributionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistributionsCompleted(this, new GetDistributionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetWaterfallData", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WaterfallDataTransfer GetWaterfallData(int impactID, bool includeUnscoredResponses) {
            object[] results = this.Invoke("GetWaterfallData", new object[] {
                        impactID,
                        includeUnscoredResponses});
            return ((WaterfallDataTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaterfallDataAsync(int impactID, bool includeUnscoredResponses) {
            this.GetWaterfallDataAsync(impactID, includeUnscoredResponses, null);
        }
        
        /// <remarks/>
        public void GetWaterfallDataAsync(int impactID, bool includeUnscoredResponses, object userState) {
            if ((this.GetWaterfallDataOperationCompleted == null)) {
                this.GetWaterfallDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaterfallDataOperationCompleted);
            }
            this.InvokeAsync("GetWaterfallData", new object[] {
                        impactID,
                        includeUnscoredResponses}, this.GetWaterfallDataOperationCompleted, userState);
        }
        
        private void OnGetWaterfallDataOperationCompleted(object arg) {
            if ((this.GetWaterfallDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaterfallDataCompleted(this, new GetWaterfallDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetDefaultFilter", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilterTransfer GetDefaultFilter() {
            object[] results = this.Invoke("GetDefaultFilter", new object[0]);
            return ((FilterTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultFilterAsync() {
            this.GetDefaultFilterAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultFilterAsync(object userState) {
            if ((this.GetDefaultFilterOperationCompleted == null)) {
                this.GetDefaultFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultFilterOperationCompleted);
            }
            this.InvokeAsync("GetDefaultFilter", new object[0], this.GetDefaultFilterOperationCompleted, userState);
        }
        
        private void OnGetDefaultFilterOperationCompleted(object arg) {
            if ((this.GetDefaultFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultFilterCompleted(this, new GetDefaultFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRecordTypes", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RecordTypeTransfer[] GetRecordTypes() {
            object[] results = this.Invoke("GetRecordTypes", new object[0]);
            return ((RecordTypeTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordTypesAsync() {
            this.GetRecordTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetRecordTypesAsync(object userState) {
            if ((this.GetRecordTypesOperationCompleted == null)) {
                this.GetRecordTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordTypesOperationCompleted);
            }
            this.InvokeAsync("GetRecordTypes", new object[0], this.GetRecordTypesOperationCompleted, userState);
        }
        
        private void OnGetRecordTypesOperationCompleted(object arg) {
            if ((this.GetRecordTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordTypesCompleted(this, new GetRecordTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetUserFilters", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilterTransfer[] GetUserFilters() {
            object[] results = this.Invoke("GetUserFilters", new object[0]);
            return ((FilterTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFiltersAsync() {
            this.GetUserFiltersAsync(null);
        }
        
        /// <remarks/>
        public void GetUserFiltersAsync(object userState) {
            if ((this.GetUserFiltersOperationCompleted == null)) {
                this.GetUserFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFiltersOperationCompleted);
            }
            this.InvokeAsync("GetUserFilters", new object[0], this.GetUserFiltersOperationCompleted, userState);
        }
        
        private void OnGetUserFiltersOperationCompleted(object arg) {
            if ((this.GetUserFiltersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFiltersCompleted(this, new GetUserFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetUserLanguageSet", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LanguageSetTransfer GetUserLanguageSet() {
            object[] results = this.Invoke("GetUserLanguageSet", new object[0]);
            return ((LanguageSetTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLanguageSetAsync() {
            this.GetUserLanguageSetAsync(null);
        }
        
        /// <remarks/>
        public void GetUserLanguageSetAsync(object userState) {
            if ((this.GetUserLanguageSetOperationCompleted == null)) {
                this.GetUserLanguageSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLanguageSetOperationCompleted);
            }
            this.InvokeAsync("GetUserLanguageSet", new object[0], this.GetUserLanguageSetOperationCompleted, userState);
        }
        
        private void OnGetUserLanguageSetOperationCompleted(object arg) {
            if ((this.GetUserLanguageSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLanguageSetCompleted(this, new GetUserLanguageSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetColours", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ColourTransfer[] GetColours() {
            object[] results = this.Invoke("GetColours", new object[0]);
            return ((ColourTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetColoursAsync() {
            this.GetColoursAsync(null);
        }
        
        /// <remarks/>
        public void GetColoursAsync(object userState) {
            if ((this.GetColoursOperationCompleted == null)) {
                this.GetColoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColoursOperationCompleted);
            }
            this.InvokeAsync("GetColours", new object[0], this.GetColoursOperationCompleted, userState);
        }
        
        private void OnGetColoursOperationCompleted(object arg) {
            if ((this.GetColoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColoursCompleted(this, new GetColoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddModule", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ModuleTransfer AddModule(int parentItemID, int destinationItemID, short insertMode, ModuleTransfer module) {
            object[] results = this.Invoke("AddModule", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        module});
            return ((ModuleTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddModuleAsync(int parentItemID, int destinationItemID, short insertMode, ModuleTransfer module) {
            this.AddModuleAsync(parentItemID, destinationItemID, insertMode, module, null);
        }
        
        /// <remarks/>
        public void AddModuleAsync(int parentItemID, int destinationItemID, short insertMode, ModuleTransfer module, object userState) {
            if ((this.AddModuleOperationCompleted == null)) {
                this.AddModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddModuleOperationCompleted);
            }
            this.InvokeAsync("AddModule", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        module}, this.AddModuleOperationCompleted, userState);
        }
        
        private void OnAddModuleOperationCompleted(object arg) {
            if ((this.AddModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddModuleCompleted(this, new AddModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetModule", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ModuleTransfer GetModule(int itemID) {
            object[] results = this.Invoke("GetModule", new object[] {
                        itemID});
            return ((ModuleTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleAsync(int itemID) {
            this.GetModuleAsync(itemID, null);
        }
        
        /// <remarks/>
        public void GetModuleAsync(int itemID, object userState) {
            if ((this.GetModuleOperationCompleted == null)) {
                this.GetModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleOperationCompleted);
            }
            this.InvokeAsync("GetModule", new object[] {
                        itemID}, this.GetModuleOperationCompleted, userState);
        }
        
        private void OnGetModuleOperationCompleted(object arg) {
            if ((this.GetModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleCompleted(this, new GetModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateModule", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ModuleTransfer UpdateModule(ModuleTransfer module) {
            object[] results = this.Invoke("UpdateModule", new object[] {
                        module});
            return ((ModuleTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateModuleAsync(ModuleTransfer module) {
            this.UpdateModuleAsync(module, null);
        }
        
        /// <remarks/>
        public void UpdateModuleAsync(ModuleTransfer module, object userState) {
            if ((this.UpdateModuleOperationCompleted == null)) {
                this.UpdateModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateModuleOperationCompleted);
            }
            this.InvokeAsync("UpdateModule", new object[] {
                        module}, this.UpdateModuleOperationCompleted, userState);
        }
        
        private void OnUpdateModuleOperationCompleted(object arg) {
            if ((this.UpdateModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateModuleCompleted(this, new UpdateModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddRequirement", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequirementTransfer AddRequirement(int parentItemID, int destinationItemID, short insertMode, RequirementTransfer requirement) {
            object[] results = this.Invoke("AddRequirement", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        requirement});
            return ((RequirementTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddRequirementAsync(int parentItemID, int destinationItemID, short insertMode, RequirementTransfer requirement) {
            this.AddRequirementAsync(parentItemID, destinationItemID, insertMode, requirement, null);
        }
        
        /// <remarks/>
        public void AddRequirementAsync(int parentItemID, int destinationItemID, short insertMode, RequirementTransfer requirement, object userState) {
            if ((this.AddRequirementOperationCompleted == null)) {
                this.AddRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRequirementOperationCompleted);
            }
            this.InvokeAsync("AddRequirement", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        requirement}, this.AddRequirementOperationCompleted, userState);
        }
        
        private void OnAddRequirementOperationCompleted(object arg) {
            if ((this.AddRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRequirementCompleted(this, new AddRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRequirement", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequirementTransfer GetRequirement(int itemID) {
            object[] results = this.Invoke("GetRequirement", new object[] {
                        itemID});
            return ((RequirementTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequirementAsync(int itemID) {
            this.GetRequirementAsync(itemID, null);
        }
        
        /// <remarks/>
        public void GetRequirementAsync(int itemID, object userState) {
            if ((this.GetRequirementOperationCompleted == null)) {
                this.GetRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequirementOperationCompleted);
            }
            this.InvokeAsync("GetRequirement", new object[] {
                        itemID}, this.GetRequirementOperationCompleted, userState);
        }
        
        private void OnGetRequirementOperationCompleted(object arg) {
            if ((this.GetRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequirementCompleted(this, new GetRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateRequirement", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequirementTransfer UpdateRequirement(RequirementTransfer requirement) {
            object[] results = this.Invoke("UpdateRequirement", new object[] {
                        requirement});
            return ((RequirementTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequirementAsync(RequirementTransfer requirement) {
            this.UpdateRequirementAsync(requirement, null);
        }
        
        /// <remarks/>
        public void UpdateRequirementAsync(RequirementTransfer requirement, object userState) {
            if ((this.UpdateRequirementOperationCompleted == null)) {
                this.UpdateRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequirementOperationCompleted);
            }
            this.InvokeAsync("UpdateRequirement", new object[] {
                        requirement}, this.UpdateRequirementOperationCompleted, userState);
        }
        
        private void OnUpdateRequirementOperationCompleted(object arg) {
            if ((this.UpdateRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequirementCompleted(this, new UpdateRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItem(int itemID) {
            this.Invoke("DeleteItem", new object[] {
                        itemID});
        }
        
        /// <remarks/>
        public void DeleteItemAsync(int itemID) {
            this.DeleteItemAsync(itemID, null);
        }
        
        /// <remarks/>
        public void DeleteItemAsync(int itemID, object userState) {
            if ((this.DeleteItemOperationCompleted == null)) {
                this.DeleteItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteItemOperationCompleted);
            }
            this.InvokeAsync("DeleteItem", new object[] {
                        itemID}, this.DeleteItemOperationCompleted, userState);
        }
        
        private void OnDeleteItemOperationCompleted(object arg) {
            if ((this.DeleteItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteItemIfEmpty", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItemIfEmpty(int itemID) {
            this.Invoke("DeleteItemIfEmpty", new object[] {
                        itemID});
        }
        
        /// <remarks/>
        public void DeleteItemIfEmptyAsync(int itemID) {
            this.DeleteItemIfEmptyAsync(itemID, null);
        }
        
        /// <remarks/>
        public void DeleteItemIfEmptyAsync(int itemID, object userState) {
            if ((this.DeleteItemIfEmptyOperationCompleted == null)) {
                this.DeleteItemIfEmptyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteItemIfEmptyOperationCompleted);
            }
            this.InvokeAsync("DeleteItemIfEmpty", new object[] {
                        itemID}, this.DeleteItemIfEmptyOperationCompleted, userState);
        }
        
        private void OnDeleteItemIfEmptyOperationCompleted(object arg) {
            if ((this.DeleteItemIfEmptyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteItemIfEmptyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/RemoveItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveItem(int itemID) {
            this.Invoke("RemoveItem", new object[] {
                        itemID});
        }
        
        /// <remarks/>
        public void RemoveItemAsync(int itemID) {
            this.RemoveItemAsync(itemID, null);
        }
        
        /// <remarks/>
        public void RemoveItemAsync(int itemID, object userState) {
            if ((this.RemoveItemOperationCompleted == null)) {
                this.RemoveItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveItemOperationCompleted);
            }
            this.InvokeAsync("RemoveItem", new object[] {
                        itemID}, this.RemoveItemOperationCompleted, userState);
        }
        
        private void OnRemoveItemOperationCompleted(object arg) {
            if ((this.RemoveItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddAssociation", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAssociation(AssociationTransfer association) {
            this.Invoke("AddAssociation", new object[] {
                        association});
        }
        
        /// <remarks/>
        public void AddAssociationAsync(AssociationTransfer association) {
            this.AddAssociationAsync(association, null);
        }
        
        /// <remarks/>
        public void AddAssociationAsync(AssociationTransfer association, object userState) {
            if ((this.AddAssociationOperationCompleted == null)) {
                this.AddAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAssociationOperationCompleted);
            }
            this.InvokeAsync("AddAssociation", new object[] {
                        association}, this.AddAssociationOperationCompleted, userState);
        }
        
        private void OnAddAssociationOperationCompleted(object arg) {
            if ((this.AddAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAssociationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteAssociation", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAssociation(AssociationTransfer association) {
            this.Invoke("DeleteAssociation", new object[] {
                        association});
        }
        
        /// <remarks/>
        public void DeleteAssociationAsync(AssociationTransfer association) {
            this.DeleteAssociationAsync(association, null);
        }
        
        /// <remarks/>
        public void DeleteAssociationAsync(AssociationTransfer association, object userState) {
            if ((this.DeleteAssociationOperationCompleted == null)) {
                this.DeleteAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssociationOperationCompleted);
            }
            this.InvokeAsync("DeleteAssociation", new object[] {
                        association}, this.DeleteAssociationOperationCompleted, userState);
        }
        
        private void OnDeleteAssociationOperationCompleted(object arg) {
            if ((this.DeleteAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssociationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetAssociationsForImpact", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AssociationTransfer[] GetAssociationsForImpact(int impactID) {
            object[] results = this.Invoke("GetAssociationsForImpact", new object[] {
                        impactID});
            return ((AssociationTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociationsForImpactAsync(int impactID) {
            this.GetAssociationsForImpactAsync(impactID, null);
        }
        
        /// <remarks/>
        public void GetAssociationsForImpactAsync(int impactID, object userState) {
            if ((this.GetAssociationsForImpactOperationCompleted == null)) {
                this.GetAssociationsForImpactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociationsForImpactOperationCompleted);
            }
            this.InvokeAsync("GetAssociationsForImpact", new object[] {
                        impactID}, this.GetAssociationsForImpactOperationCompleted, userState);
        }
        
        private void OnGetAssociationsForImpactOperationCompleted(object arg) {
            if ((this.GetAssociationsForImpactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociationsForImpactCompleted(this, new GetAssociationsForImpactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetAssociationsForItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AssociationTransfer[] GetAssociationsForItem(int itemID) {
            object[] results = this.Invoke("GetAssociationsForItem", new object[] {
                        itemID});
            return ((AssociationTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociationsForItemAsync(int itemID) {
            this.GetAssociationsForItemAsync(itemID, null);
        }
        
        /// <remarks/>
        public void GetAssociationsForItemAsync(int itemID, object userState) {
            if ((this.GetAssociationsForItemOperationCompleted == null)) {
                this.GetAssociationsForItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociationsForItemOperationCompleted);
            }
            this.InvokeAsync("GetAssociationsForItem", new object[] {
                        itemID}, this.GetAssociationsForItemOperationCompleted, userState);
        }
        
        private void OnGetAssociationsForItemOperationCompleted(object arg) {
            if ((this.GetAssociationsForItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociationsForItemCompleted(this, new GetAssociationsForItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetUserData", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserProfileTransfer GetUserData() {
            object[] results = this.Invoke("GetUserData", new object[0]);
            return ((UserProfileTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDataAsync() {
            this.GetUserDataAsync(null);
        }
        
        /// <remarks/>
        public void GetUserDataAsync(object userState) {
            if ((this.GetUserDataOperationCompleted == null)) {
                this.GetUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDataOperationCompleted);
            }
            this.InvokeAsync("GetUserData", new object[0], this.GetUserDataOperationCompleted, userState);
        }
        
        private void OnGetUserDataOperationCompleted(object arg) {
            if ((this.GetUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDataCompleted(this, new GetUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetStaticData", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StaticDataTransfer GetStaticData(int[] items) {
            object[] results = this.Invoke("GetStaticData", new object[] {
                        items});
            return ((StaticDataTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaticDataAsync(int[] items) {
            this.GetStaticDataAsync(items, null);
        }
        
        /// <remarks/>
        public void GetStaticDataAsync(int[] items, object userState) {
            if ((this.GetStaticDataOperationCompleted == null)) {
                this.GetStaticDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaticDataOperationCompleted);
            }
            this.InvokeAsync("GetStaticData", new object[] {
                        items}, this.GetStaticDataOperationCompleted, userState);
        }
        
        private void OnGetStaticDataOperationCompleted(object arg) {
            if ((this.GetStaticDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaticDataCompleted(this, new GetStaticDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/IsStaticDataCurrent", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsStaticDataCurrent(int staticDataVersion) {
            object[] results = this.Invoke("IsStaticDataCurrent", new object[] {
                        staticDataVersion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsStaticDataCurrentAsync(int staticDataVersion) {
            this.IsStaticDataCurrentAsync(staticDataVersion, null);
        }
        
        /// <remarks/>
        public void IsStaticDataCurrentAsync(int staticDataVersion, object userState) {
            if ((this.IsStaticDataCurrentOperationCompleted == null)) {
                this.IsStaticDataCurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsStaticDataCurrentOperationCompleted);
            }
            this.InvokeAsync("IsStaticDataCurrent", new object[] {
                        staticDataVersion}, this.IsStaticDataCurrentOperationCompleted, userState);
        }
        
        private void OnIsStaticDataCurrentOperationCompleted(object arg) {
            if ((this.IsStaticDataCurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsStaticDataCurrentCompleted(this, new IsStaticDataCurrentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetMetaDataHierarchy", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MetaDataItemDTO[] GetMetaDataHierarchy() {
            object[] results = this.Invoke("GetMetaDataHierarchy", new object[0]);
            return ((MetaDataItemDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetaDataHierarchyAsync() {
            this.GetMetaDataHierarchyAsync(null);
        }
        
        /// <remarks/>
        public void GetMetaDataHierarchyAsync(object userState) {
            if ((this.GetMetaDataHierarchyOperationCompleted == null)) {
                this.GetMetaDataHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetaDataHierarchyOperationCompleted);
            }
            this.InvokeAsync("GetMetaDataHierarchy", new object[0], this.GetMetaDataHierarchyOperationCompleted, userState);
        }
        
        private void OnGetMetaDataHierarchyOperationCompleted(object arg) {
            if ((this.GetMetaDataHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetaDataHierarchyCompleted(this, new GetMetaDataHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetEscalationItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EscalationItemTransfer GetEscalationItem(int escalationID) {
            object[] results = this.Invoke("GetEscalationItem", new object[] {
                        escalationID});
            return ((EscalationItemTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetEscalationItemAsync(int escalationID) {
            this.GetEscalationItemAsync(escalationID, null);
        }
        
        /// <remarks/>
        public void GetEscalationItemAsync(int escalationID, object userState) {
            if ((this.GetEscalationItemOperationCompleted == null)) {
                this.GetEscalationItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEscalationItemOperationCompleted);
            }
            this.InvokeAsync("GetEscalationItem", new object[] {
                        escalationID}, this.GetEscalationItemOperationCompleted, userState);
        }
        
        private void OnGetEscalationItemOperationCompleted(object arg) {
            if ((this.GetEscalationItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEscalationItemCompleted(this, new GetEscalationItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddEscalationItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EscalationItemTransfer AddEscalationItem(int parentItemID, int destinationItemID, short insertMode, EscalationItemTransfer escalation) {
            object[] results = this.Invoke("AddEscalationItem", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        escalation});
            return ((EscalationItemTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddEscalationItemAsync(int parentItemID, int destinationItemID, short insertMode, EscalationItemTransfer escalation) {
            this.AddEscalationItemAsync(parentItemID, destinationItemID, insertMode, escalation, null);
        }
        
        /// <remarks/>
        public void AddEscalationItemAsync(int parentItemID, int destinationItemID, short insertMode, EscalationItemTransfer escalation, object userState) {
            if ((this.AddEscalationItemOperationCompleted == null)) {
                this.AddEscalationItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEscalationItemOperationCompleted);
            }
            this.InvokeAsync("AddEscalationItem", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        escalation}, this.AddEscalationItemOperationCompleted, userState);
        }
        
        private void OnAddEscalationItemOperationCompleted(object arg) {
            if ((this.AddEscalationItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEscalationItemCompleted(this, new AddEscalationItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateEscalationItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EscalationItemTransfer UpdateEscalationItem(EscalationItemTransfer escalation) {
            object[] results = this.Invoke("UpdateEscalationItem", new object[] {
                        escalation});
            return ((EscalationItemTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEscalationItemAsync(EscalationItemTransfer escalation) {
            this.UpdateEscalationItemAsync(escalation, null);
        }
        
        /// <remarks/>
        public void UpdateEscalationItemAsync(EscalationItemTransfer escalation, object userState) {
            if ((this.UpdateEscalationItemOperationCompleted == null)) {
                this.UpdateEscalationItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEscalationItemOperationCompleted);
            }
            this.InvokeAsync("UpdateEscalationItem", new object[] {
                        escalation}, this.UpdateEscalationItemOperationCompleted, userState);
        }
        
        private void OnUpdateEscalationItemOperationCompleted(object arg) {
            if ((this.UpdateEscalationItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEscalationItemCompleted(this, new UpdateEscalationItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteEscalationItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEscalationItem(EscalationItemTransfer escalation) {
            this.Invoke("DeleteEscalationItem", new object[] {
                        escalation});
        }
        
        /// <remarks/>
        public void DeleteEscalationItemAsync(EscalationItemTransfer escalation) {
            this.DeleteEscalationItemAsync(escalation, null);
        }
        
        /// <remarks/>
        public void DeleteEscalationItemAsync(EscalationItemTransfer escalation, object userState) {
            if ((this.DeleteEscalationItemOperationCompleted == null)) {
                this.DeleteEscalationItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEscalationItemOperationCompleted);
            }
            this.InvokeAsync("DeleteEscalationItem", new object[] {
                        escalation}, this.DeleteEscalationItemOperationCompleted, userState);
        }
        
        private void OnDeleteEscalationItemOperationCompleted(object arg) {
            if ((this.DeleteEscalationItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEscalationItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/EscalateRisks", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EscalateRisks(int escalationID, short operation, int[] impactIDs, string auditComment) {
            this.Invoke("EscalateRisks", new object[] {
                        escalationID,
                        operation,
                        impactIDs,
                        auditComment});
        }
        
        /// <remarks/>
        public void EscalateRisksAsync(int escalationID, short operation, int[] impactIDs, string auditComment) {
            this.EscalateRisksAsync(escalationID, operation, impactIDs, auditComment, null);
        }
        
        /// <remarks/>
        public void EscalateRisksAsync(int escalationID, short operation, int[] impactIDs, string auditComment, object userState) {
            if ((this.EscalateRisksOperationCompleted == null)) {
                this.EscalateRisksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalateRisksOperationCompleted);
            }
            this.InvokeAsync("EscalateRisks", new object[] {
                        escalationID,
                        operation,
                        impactIDs,
                        auditComment}, this.EscalateRisksOperationCompleted, userState);
        }
        
        private void OnEscalateRisksOperationCompleted(object arg) {
            if ((this.EscalateRisksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalateRisksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetEscalationsForImpact", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactEscalationTransfer[] GetEscalationsForImpact(int impactID) {
            object[] results = this.Invoke("GetEscalationsForImpact", new object[] {
                        impactID});
            return ((ImpactEscalationTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEscalationsForImpactAsync(int impactID) {
            this.GetEscalationsForImpactAsync(impactID, null);
        }
        
        /// <remarks/>
        public void GetEscalationsForImpactAsync(int impactID, object userState) {
            if ((this.GetEscalationsForImpactOperationCompleted == null)) {
                this.GetEscalationsForImpactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEscalationsForImpactOperationCompleted);
            }
            this.InvokeAsync("GetEscalationsForImpact", new object[] {
                        impactID}, this.GetEscalationsForImpactOperationCompleted, userState);
        }
        
        private void OnGetEscalationsForImpactOperationCompleted(object arg) {
            if ((this.GetEscalationsForImpactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEscalationsForImpactCompleted(this, new GetEscalationsForImpactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResourceGroups", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceGroupTransfer[] GetResourceGroups(bool adminOnly) {
            object[] results = this.Invoke("GetResourceGroups", new object[] {
                        adminOnly});
            return ((ResourceGroupTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceGroupsAsync(bool adminOnly) {
            this.GetResourceGroupsAsync(adminOnly, null);
        }
        
        /// <remarks/>
        public void GetResourceGroupsAsync(bool adminOnly, object userState) {
            if ((this.GetResourceGroupsOperationCompleted == null)) {
                this.GetResourceGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceGroupsOperationCompleted);
            }
            this.InvokeAsync("GetResourceGroups", new object[] {
                        adminOnly}, this.GetResourceGroupsOperationCompleted, userState);
        }
        
        private void OnGetResourceGroupsOperationCompleted(object arg) {
            if ((this.GetResourceGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceGroupsCompleted(this, new GetResourceGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResourcesOfGroup", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceTransfer[] GetResourcesOfGroup(ResourceGroupTransfer group) {
            object[] results = this.Invoke("GetResourcesOfGroup", new object[] {
                        group});
            return ((ResourceTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResourcesOfGroupAsync(ResourceGroupTransfer group) {
            this.GetResourcesOfGroupAsync(group, null);
        }
        
        /// <remarks/>
        public void GetResourcesOfGroupAsync(ResourceGroupTransfer group, object userState) {
            if ((this.GetResourcesOfGroupOperationCompleted == null)) {
                this.GetResourcesOfGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourcesOfGroupOperationCompleted);
            }
            this.InvokeAsync("GetResourcesOfGroup", new object[] {
                        group}, this.GetResourcesOfGroupOperationCompleted, userState);
        }
        
        private void OnGetResourcesOfGroupOperationCompleted(object arg) {
            if ((this.GetResourcesOfGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourcesOfGroupCompleted(this, new GetResourcesOfGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetFolder", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderTransfer GetFolder(int folderID) {
            object[] results = this.Invoke("GetFolder", new object[] {
                        folderID});
            return ((FolderTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderAsync(int folderID) {
            this.GetFolderAsync(folderID, null);
        }
        
        /// <remarks/>
        public void GetFolderAsync(int folderID, object userState) {
            if ((this.GetFolderOperationCompleted == null)) {
                this.GetFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderOperationCompleted);
            }
            this.InvokeAsync("GetFolder", new object[] {
                        folderID}, this.GetFolderOperationCompleted, userState);
        }
        
        private void OnGetFolderOperationCompleted(object arg) {
            if ((this.GetFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderCompleted(this, new GetFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddFolder", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderTransfer AddFolder(int parentItemID, int destinationItemID, short insertMode, FolderTransfer newFolder) {
            object[] results = this.Invoke("AddFolder", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        newFolder});
            return ((FolderTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddFolderAsync(int parentItemID, int destinationItemID, short insertMode, FolderTransfer newFolder) {
            this.AddFolderAsync(parentItemID, destinationItemID, insertMode, newFolder, null);
        }
        
        /// <remarks/>
        public void AddFolderAsync(int parentItemID, int destinationItemID, short insertMode, FolderTransfer newFolder, object userState) {
            if ((this.AddFolderOperationCompleted == null)) {
                this.AddFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFolderOperationCompleted);
            }
            this.InvokeAsync("AddFolder", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        newFolder}, this.AddFolderOperationCompleted, userState);
        }
        
        private void OnAddFolderOperationCompleted(object arg) {
            if ((this.AddFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFolderCompleted(this, new AddFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateFolder", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderTransfer UpdateFolder(FolderTransfer folder) {
            object[] results = this.Invoke("UpdateFolder", new object[] {
                        folder});
            return ((FolderTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderAsync(FolderTransfer folder) {
            this.UpdateFolderAsync(folder, null);
        }
        
        /// <remarks/>
        public void UpdateFolderAsync(FolderTransfer folder, object userState) {
            if ((this.UpdateFolderOperationCompleted == null)) {
                this.UpdateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderOperationCompleted);
            }
            this.InvokeAsync("UpdateFolder", new object[] {
                        folder}, this.UpdateFolderOperationCompleted, userState);
        }
        
        private void OnUpdateFolderOperationCompleted(object arg) {
            if ((this.UpdateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderCompleted(this, new UpdateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetActivity", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivityTransfer GetActivity(int ActivityID) {
            object[] results = this.Invoke("GetActivity", new object[] {
                        ActivityID});
            return ((ActivityTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivityAsync(int ActivityID) {
            this.GetActivityAsync(ActivityID, null);
        }
        
        /// <remarks/>
        public void GetActivityAsync(int ActivityID, object userState) {
            if ((this.GetActivityOperationCompleted == null)) {
                this.GetActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivityOperationCompleted);
            }
            this.InvokeAsync("GetActivity", new object[] {
                        ActivityID}, this.GetActivityOperationCompleted, userState);
        }
        
        private void OnGetActivityOperationCompleted(object arg) {
            if ((this.GetActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivityCompleted(this, new GetActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddActivity", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivityTransfer AddActivity(int parentItemID, int destinationItemID, short insertMode, ActivityTransfer newActivity) {
            object[] results = this.Invoke("AddActivity", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        newActivity});
            return ((ActivityTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddActivityAsync(int parentItemID, int destinationItemID, short insertMode, ActivityTransfer newActivity) {
            this.AddActivityAsync(parentItemID, destinationItemID, insertMode, newActivity, null);
        }
        
        /// <remarks/>
        public void AddActivityAsync(int parentItemID, int destinationItemID, short insertMode, ActivityTransfer newActivity, object userState) {
            if ((this.AddActivityOperationCompleted == null)) {
                this.AddActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddActivityOperationCompleted);
            }
            this.InvokeAsync("AddActivity", new object[] {
                        parentItemID,
                        destinationItemID,
                        insertMode,
                        newActivity}, this.AddActivityOperationCompleted, userState);
        }
        
        private void OnAddActivityOperationCompleted(object arg) {
            if ((this.AddActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddActivityCompleted(this, new AddActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateActivity", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivityTransfer UpdateActivity(ActivityTransfer Activity) {
            object[] results = this.Invoke("UpdateActivity", new object[] {
                        Activity});
            return ((ActivityTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateActivityAsync(ActivityTransfer Activity) {
            this.UpdateActivityAsync(Activity, null);
        }
        
        /// <remarks/>
        public void UpdateActivityAsync(ActivityTransfer Activity, object userState) {
            if ((this.UpdateActivityOperationCompleted == null)) {
                this.UpdateActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateActivityOperationCompleted);
            }
            this.InvokeAsync("UpdateActivity", new object[] {
                        Activity}, this.UpdateActivityOperationCompleted, userState);
        }
        
        private void OnUpdateActivityOperationCompleted(object arg) {
            if ((this.UpdateActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateActivityCompleted(this, new UpdateActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddActivitySchedule", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddActivitySchedule(ActivityScheduleTransfer newActivitySchedule) {
            this.Invoke("AddActivitySchedule", new object[] {
                        newActivitySchedule});
        }
        
        /// <remarks/>
        public void AddActivityScheduleAsync(ActivityScheduleTransfer newActivitySchedule) {
            this.AddActivityScheduleAsync(newActivitySchedule, null);
        }
        
        /// <remarks/>
        public void AddActivityScheduleAsync(ActivityScheduleTransfer newActivitySchedule, object userState) {
            if ((this.AddActivityScheduleOperationCompleted == null)) {
                this.AddActivityScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddActivityScheduleOperationCompleted);
            }
            this.InvokeAsync("AddActivitySchedule", new object[] {
                        newActivitySchedule}, this.AddActivityScheduleOperationCompleted, userState);
        }
        
        private void OnAddActivityScheduleOperationCompleted(object arg) {
            if ((this.AddActivityScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddActivityScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateActivitySchedule", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateActivitySchedule(ActivityScheduleTransfer newActivitySchedule) {
            this.Invoke("UpdateActivitySchedule", new object[] {
                        newActivitySchedule});
        }
        
        /// <remarks/>
        public void UpdateActivityScheduleAsync(ActivityScheduleTransfer newActivitySchedule) {
            this.UpdateActivityScheduleAsync(newActivitySchedule, null);
        }
        
        /// <remarks/>
        public void UpdateActivityScheduleAsync(ActivityScheduleTransfer newActivitySchedule, object userState) {
            if ((this.UpdateActivityScheduleOperationCompleted == null)) {
                this.UpdateActivityScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateActivityScheduleOperationCompleted);
            }
            this.InvokeAsync("UpdateActivitySchedule", new object[] {
                        newActivitySchedule}, this.UpdateActivityScheduleOperationCompleted, userState);
        }
        
        private void OnUpdateActivityScheduleOperationCompleted(object arg) {
            if ((this.UpdateActivityScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateActivityScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetActivitySchedule", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivityScheduleTransfer GetActivitySchedule(int ActivityID) {
            object[] results = this.Invoke("GetActivitySchedule", new object[] {
                        ActivityID});
            return ((ActivityScheduleTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivityScheduleAsync(int ActivityID) {
            this.GetActivityScheduleAsync(ActivityID, null);
        }
        
        /// <remarks/>
        public void GetActivityScheduleAsync(int ActivityID, object userState) {
            if ((this.GetActivityScheduleOperationCompleted == null)) {
                this.GetActivityScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivityScheduleOperationCompleted);
            }
            this.InvokeAsync("GetActivitySchedule", new object[] {
                        ActivityID}, this.GetActivityScheduleOperationCompleted, userState);
        }
        
        private void OnGetActivityScheduleOperationCompleted(object arg) {
            if ((this.GetActivityScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivityScheduleCompleted(this, new GetActivityScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddActivityDependency", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivityDependencyTransfer AddActivityDependency(ActivityDependencyTransfer newActivityDependency) {
            object[] results = this.Invoke("AddActivityDependency", new object[] {
                        newActivityDependency});
            return ((ActivityDependencyTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddActivityDependencyAsync(ActivityDependencyTransfer newActivityDependency) {
            this.AddActivityDependencyAsync(newActivityDependency, null);
        }
        
        /// <remarks/>
        public void AddActivityDependencyAsync(ActivityDependencyTransfer newActivityDependency, object userState) {
            if ((this.AddActivityDependencyOperationCompleted == null)) {
                this.AddActivityDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddActivityDependencyOperationCompleted);
            }
            this.InvokeAsync("AddActivityDependency", new object[] {
                        newActivityDependency}, this.AddActivityDependencyOperationCompleted, userState);
        }
        
        private void OnAddActivityDependencyOperationCompleted(object arg) {
            if ((this.AddActivityDependencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddActivityDependencyCompleted(this, new AddActivityDependencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateActivityDependency", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivityDependencyTransfer UpdateActivityDependency(ActivityDependencyTransfer newActivityDependency) {
            object[] results = this.Invoke("UpdateActivityDependency", new object[] {
                        newActivityDependency});
            return ((ActivityDependencyTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateActivityDependencyAsync(ActivityDependencyTransfer newActivityDependency) {
            this.UpdateActivityDependencyAsync(newActivityDependency, null);
        }
        
        /// <remarks/>
        public void UpdateActivityDependencyAsync(ActivityDependencyTransfer newActivityDependency, object userState) {
            if ((this.UpdateActivityDependencyOperationCompleted == null)) {
                this.UpdateActivityDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateActivityDependencyOperationCompleted);
            }
            this.InvokeAsync("UpdateActivityDependency", new object[] {
                        newActivityDependency}, this.UpdateActivityDependencyOperationCompleted, userState);
        }
        
        private void OnUpdateActivityDependencyOperationCompleted(object arg) {
            if ((this.UpdateActivityDependencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateActivityDependencyCompleted(this, new UpdateActivityDependencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetActivityDependency", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivityDependencyTransfer GetActivityDependency(int ActivityDependencyID) {
            object[] results = this.Invoke("GetActivityDependency", new object[] {
                        ActivityDependencyID});
            return ((ActivityDependencyTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivityDependencyAsync(int ActivityDependencyID) {
            this.GetActivityDependencyAsync(ActivityDependencyID, null);
        }
        
        /// <remarks/>
        public void GetActivityDependencyAsync(int ActivityDependencyID, object userState) {
            if ((this.GetActivityDependencyOperationCompleted == null)) {
                this.GetActivityDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivityDependencyOperationCompleted);
            }
            this.InvokeAsync("GetActivityDependency", new object[] {
                        ActivityDependencyID}, this.GetActivityDependencyOperationCompleted, userState);
        }
        
        private void OnGetActivityDependencyOperationCompleted(object arg) {
            if ((this.GetActivityDependencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivityDependencyCompleted(this, new GetActivityDependencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/RemoveActivityDependency", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveActivityDependency(int ActivityDependencyID) {
            this.Invoke("RemoveActivityDependency", new object[] {
                        ActivityDependencyID});
        }
        
        /// <remarks/>
        public void RemoveActivityDependencyAsync(int ActivityDependencyID) {
            this.RemoveActivityDependencyAsync(ActivityDependencyID, null);
        }
        
        /// <remarks/>
        public void RemoveActivityDependencyAsync(int ActivityDependencyID, object userState) {
            if ((this.RemoveActivityDependencyOperationCompleted == null)) {
                this.RemoveActivityDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveActivityDependencyOperationCompleted);
            }
            this.InvokeAsync("RemoveActivityDependency", new object[] {
                        ActivityDependencyID}, this.RemoveActivityDependencyOperationCompleted, userState);
        }
        
        private void OnRemoveActivityDependencyOperationCompleted(object arg) {
            if ((this.RemoveActivityDependencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveActivityDependencyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetCalendar", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CalendarTransfer GetCalendar(int FolderItemID, int CalendarID) {
            object[] results = this.Invoke("GetCalendar", new object[] {
                        FolderItemID,
                        CalendarID});
            return ((CalendarTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCalendarAsync(int FolderItemID, int CalendarID) {
            this.GetCalendarAsync(FolderItemID, CalendarID, null);
        }
        
        /// <remarks/>
        public void GetCalendarAsync(int FolderItemID, int CalendarID, object userState) {
            if ((this.GetCalendarOperationCompleted == null)) {
                this.GetCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarOperationCompleted);
            }
            this.InvokeAsync("GetCalendar", new object[] {
                        FolderItemID,
                        CalendarID}, this.GetCalendarOperationCompleted, userState);
        }
        
        private void OnGetCalendarOperationCompleted(object arg) {
            if ((this.GetCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarCompleted(this, new GetCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddCalendar", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCalendar(int folderItemID, CalendarTransfer newCalendar) {
            this.Invoke("AddCalendar", new object[] {
                        folderItemID,
                        newCalendar});
        }
        
        /// <remarks/>
        public void AddCalendarAsync(int folderItemID, CalendarTransfer newCalendar) {
            this.AddCalendarAsync(folderItemID, newCalendar, null);
        }
        
        /// <remarks/>
        public void AddCalendarAsync(int folderItemID, CalendarTransfer newCalendar, object userState) {
            if ((this.AddCalendarOperationCompleted == null)) {
                this.AddCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCalendarOperationCompleted);
            }
            this.InvokeAsync("AddCalendar", new object[] {
                        folderItemID,
                        newCalendar}, this.AddCalendarOperationCompleted, userState);
        }
        
        private void OnAddCalendarOperationCompleted(object arg) {
            if ((this.AddCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCalendarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateCalendar", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCalendar(int folderItemID, CalendarTransfer newCalendar) {
            this.Invoke("UpdateCalendar", new object[] {
                        folderItemID,
                        newCalendar});
        }
        
        /// <remarks/>
        public void UpdateCalendarAsync(int folderItemID, CalendarTransfer newCalendar) {
            this.UpdateCalendarAsync(folderItemID, newCalendar, null);
        }
        
        /// <remarks/>
        public void UpdateCalendarAsync(int folderItemID, CalendarTransfer newCalendar, object userState) {
            if ((this.UpdateCalendarOperationCompleted == null)) {
                this.UpdateCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCalendarOperationCompleted);
            }
            this.InvokeAsync("UpdateCalendar", new object[] {
                        folderItemID,
                        newCalendar}, this.UpdateCalendarOperationCompleted, userState);
        }
        
        private void OnUpdateCalendarOperationCompleted(object arg) {
            if ((this.UpdateCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCalendarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddRiskLinkage", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRiskLinkage(RiskLinkageTransfer link) {
            this.Invoke("AddRiskLinkage", new object[] {
                        link});
        }
        
        /// <remarks/>
        public void AddRiskLinkageAsync(RiskLinkageTransfer link) {
            this.AddRiskLinkageAsync(link, null);
        }
        
        /// <remarks/>
        public void AddRiskLinkageAsync(RiskLinkageTransfer link, object userState) {
            if ((this.AddRiskLinkageOperationCompleted == null)) {
                this.AddRiskLinkageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRiskLinkageOperationCompleted);
            }
            this.InvokeAsync("AddRiskLinkage", new object[] {
                        link}, this.AddRiskLinkageOperationCompleted, userState);
        }
        
        private void OnAddRiskLinkageOperationCompleted(object arg) {
            if ((this.AddRiskLinkageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRiskLinkageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteRiskLinkage", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRiskLinkage(RiskLinkageTransfer link) {
            this.Invoke("DeleteRiskLinkage", new object[] {
                        link});
        }
        
        /// <remarks/>
        public void DeleteRiskLinkageAsync(RiskLinkageTransfer link) {
            this.DeleteRiskLinkageAsync(link, null);
        }
        
        /// <remarks/>
        public void DeleteRiskLinkageAsync(RiskLinkageTransfer link, object userState) {
            if ((this.DeleteRiskLinkageOperationCompleted == null)) {
                this.DeleteRiskLinkageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRiskLinkageOperationCompleted);
            }
            this.InvokeAsync("DeleteRiskLinkage", new object[] {
                        link}, this.DeleteRiskLinkageOperationCompleted, userState);
        }
        
        private void OnDeleteRiskLinkageOperationCompleted(object arg) {
            if ((this.DeleteRiskLinkageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRiskLinkageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetLinkagesForRisk", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RiskLinkageTransfer[] GetLinkagesForRisk(int sourceRiskID) {
            object[] results = this.Invoke("GetLinkagesForRisk", new object[] {
                        sourceRiskID});
            return ((RiskLinkageTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkagesForRiskAsync(int sourceRiskID) {
            this.GetLinkagesForRiskAsync(sourceRiskID, null);
        }
        
        /// <remarks/>
        public void GetLinkagesForRiskAsync(int sourceRiskID, object userState) {
            if ((this.GetLinkagesForRiskOperationCompleted == null)) {
                this.GetLinkagesForRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkagesForRiskOperationCompleted);
            }
            this.InvokeAsync("GetLinkagesForRisk", new object[] {
                        sourceRiskID}, this.GetLinkagesForRiskOperationCompleted, userState);
        }
        
        private void OnGetLinkagesForRiskOperationCompleted(object arg) {
            if ((this.GetLinkagesForRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkagesForRiskCompleted(this, new GetLinkagesForRiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetAllScoreBands", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScoreBandTransfer[] GetAllScoreBands(int pidId) {
            object[] results = this.Invoke("GetAllScoreBands", new object[] {
                        pidId});
            return ((ScoreBandTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScoreBandsAsync(int pidId) {
            this.GetAllScoreBandsAsync(pidId, null);
        }
        
        /// <remarks/>
        public void GetAllScoreBandsAsync(int pidId, object userState) {
            if ((this.GetAllScoreBandsOperationCompleted == null)) {
                this.GetAllScoreBandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScoreBandsOperationCompleted);
            }
            this.InvokeAsync("GetAllScoreBands", new object[] {
                        pidId}, this.GetAllScoreBandsOperationCompleted, userState);
        }
        
        private void OnGetAllScoreBandsOperationCompleted(object arg) {
            if ((this.GetAllScoreBandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScoreBandsCompleted(this, new GetAllScoreBandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetScoreBands", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScoreBandTransfer[] GetScoreBands(int pidId, short type, bool includeUndefined, bool includeNil) {
            object[] results = this.Invoke("GetScoreBands", new object[] {
                        pidId,
                        type,
                        includeUndefined,
                        includeNil});
            return ((ScoreBandTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScoreBandsAsync(int pidId, short type, bool includeUndefined, bool includeNil) {
            this.GetScoreBandsAsync(pidId, type, includeUndefined, includeNil, null);
        }
        
        /// <remarks/>
        public void GetScoreBandsAsync(int pidId, short type, bool includeUndefined, bool includeNil, object userState) {
            if ((this.GetScoreBandsOperationCompleted == null)) {
                this.GetScoreBandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScoreBandsOperationCompleted);
            }
            this.InvokeAsync("GetScoreBands", new object[] {
                        pidId,
                        type,
                        includeUndefined,
                        includeNil}, this.GetScoreBandsOperationCompleted, userState);
        }
        
        private void OnGetScoreBandsOperationCompleted(object arg) {
            if ((this.GetScoreBandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScoreBandsCompleted(this, new GetScoreBandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetImpactsForItems", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactTransfer[] GetImpactsForItems(int[] itemIDs, bool loadPlan, bool loadResponses) {
            object[] results = this.Invoke("GetImpactsForItems", new object[] {
                        itemIDs,
                        loadPlan,
                        loadResponses});
            return ((ImpactTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImpactsForItemsAsync(int[] itemIDs, bool loadPlan, bool loadResponses) {
            this.GetImpactsForItemsAsync(itemIDs, loadPlan, loadResponses, null);
        }
        
        /// <remarks/>
        public void GetImpactsForItemsAsync(int[] itemIDs, bool loadPlan, bool loadResponses, object userState) {
            if ((this.GetImpactsForItemsOperationCompleted == null)) {
                this.GetImpactsForItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImpactsForItemsOperationCompleted);
            }
            this.InvokeAsync("GetImpactsForItems", new object[] {
                        itemIDs,
                        loadPlan,
                        loadResponses}, this.GetImpactsForItemsOperationCompleted, userState);
        }
        
        private void OnGetImpactsForItemsOperationCompleted(object arg) {
            if ((this.GetImpactsForItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImpactsForItemsCompleted(this, new GetImpactsForItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetPlanStrategies", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlanStrategyTransfer[] GetPlanStrategies() {
            object[] results = this.Invoke("GetPlanStrategies", new object[0]);
            return ((PlanStrategyTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanStrategiesAsync() {
            this.GetPlanStrategiesAsync(null);
        }
        
        /// <remarks/>
        public void GetPlanStrategiesAsync(object userState) {
            if ((this.GetPlanStrategiesOperationCompleted == null)) {
                this.GetPlanStrategiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanStrategiesOperationCompleted);
            }
            this.InvokeAsync("GetPlanStrategies", new object[0], this.GetPlanStrategiesOperationCompleted, userState);
        }
        
        private void OnGetPlanStrategiesOperationCompleted(object arg) {
            if ((this.GetPlanStrategiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanStrategiesCompleted(this, new GetPlanStrategiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRiskSecurityProperties", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityPropertiesTransfer GetRiskSecurityProperties(int riskID) {
            object[] results = this.Invoke("GetRiskSecurityProperties", new object[] {
                        riskID});
            return ((SecurityPropertiesTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetRiskSecurityPropertiesAsync(int riskID) {
            this.GetRiskSecurityPropertiesAsync(riskID, null);
        }
        
        /// <remarks/>
        public void GetRiskSecurityPropertiesAsync(int riskID, object userState) {
            if ((this.GetRiskSecurityPropertiesOperationCompleted == null)) {
                this.GetRiskSecurityPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRiskSecurityPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetRiskSecurityProperties", new object[] {
                        riskID}, this.GetRiskSecurityPropertiesOperationCompleted, userState);
        }
        
        private void OnGetRiskSecurityPropertiesOperationCompleted(object arg) {
            if ((this.GetRiskSecurityPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRiskSecurityPropertiesCompleted(this, new GetRiskSecurityPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/MoveRisk", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveRisk(int sourceItemID, int targetItemID, int riskID) {
            this.Invoke("MoveRisk", new object[] {
                        sourceItemID,
                        targetItemID,
                        riskID});
        }
        
        /// <remarks/>
        public void MoveRiskAsync(int sourceItemID, int targetItemID, int riskID) {
            this.MoveRiskAsync(sourceItemID, targetItemID, riskID, null);
        }
        
        /// <remarks/>
        public void MoveRiskAsync(int sourceItemID, int targetItemID, int riskID, object userState) {
            if ((this.MoveRiskOperationCompleted == null)) {
                this.MoveRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveRiskOperationCompleted);
            }
            this.InvokeAsync("MoveRisk", new object[] {
                        sourceItemID,
                        targetItemID,
                        riskID}, this.MoveRiskOperationCompleted, userState);
        }
        
        private void OnMoveRiskOperationCompleted(object arg) {
            if ((this.MoveRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveRiskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/MoveRisks", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveRisks(int sourceItemID, int targetItemID, int[] risks) {
            this.Invoke("MoveRisks", new object[] {
                        sourceItemID,
                        targetItemID,
                        risks});
        }
        
        /// <remarks/>
        public void MoveRisksAsync(int sourceItemID, int targetItemID, int[] risks) {
            this.MoveRisksAsync(sourceItemID, targetItemID, risks, null);
        }
        
        /// <remarks/>
        public void MoveRisksAsync(int sourceItemID, int targetItemID, int[] risks, object userState) {
            if ((this.MoveRisksOperationCompleted == null)) {
                this.MoveRisksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveRisksOperationCompleted);
            }
            this.InvokeAsync("MoveRisks", new object[] {
                        sourceItemID,
                        targetItemID,
                        risks}, this.MoveRisksOperationCompleted, userState);
        }
        
        private void OnMoveRisksOperationCompleted(object arg) {
            if ((this.MoveRisksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveRisksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/MoveItem", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveItem(int sourceItemID, int targetItemID, short insertMode) {
            this.Invoke("MoveItem", new object[] {
                        sourceItemID,
                        targetItemID,
                        insertMode});
        }
        
        /// <remarks/>
        public void MoveItemAsync(int sourceItemID, int targetItemID, short insertMode) {
            this.MoveItemAsync(sourceItemID, targetItemID, insertMode, null);
        }
        
        /// <remarks/>
        public void MoveItemAsync(int sourceItemID, int targetItemID, short insertMode, object userState) {
            if ((this.MoveItemOperationCompleted == null)) {
                this.MoveItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveItemOperationCompleted);
            }
            this.InvokeAsync("MoveItem", new object[] {
                        sourceItemID,
                        targetItemID,
                        insertMode}, this.MoveItemOperationCompleted, userState);
        }
        
        private void OnMoveItemOperationCompleted(object arg) {
            if ((this.MoveItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateRiskSecurityProperties", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRiskSecurityProperties(int riskID, SecurityPropertiesTransfer security) {
            this.Invoke("UpdateRiskSecurityProperties", new object[] {
                        riskID,
                        security});
        }
        
        /// <remarks/>
        public void UpdateRiskSecurityPropertiesAsync(int riskID, SecurityPropertiesTransfer security) {
            this.UpdateRiskSecurityPropertiesAsync(riskID, security, null);
        }
        
        /// <remarks/>
        public void UpdateRiskSecurityPropertiesAsync(int riskID, SecurityPropertiesTransfer security, object userState) {
            if ((this.UpdateRiskSecurityPropertiesOperationCompleted == null)) {
                this.UpdateRiskSecurityPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRiskSecurityPropertiesOperationCompleted);
            }
            this.InvokeAsync("UpdateRiskSecurityProperties", new object[] {
                        riskID,
                        security}, this.UpdateRiskSecurityPropertiesOperationCompleted, userState);
        }
        
        private void OnUpdateRiskSecurityPropertiesOperationCompleted(object arg) {
            if ((this.UpdateRiskSecurityPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRiskSecurityPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateResponseAssessment", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateResponseAssessment(int impactID, int responseID, AssessmentTransfer rAssessment) {
            this.Invoke("UpdateResponseAssessment", new object[] {
                        impactID,
                        responseID,
                        rAssessment});
        }
        
        /// <remarks/>
        public void UpdateResponseAssessmentAsync(int impactID, int responseID, AssessmentTransfer rAssessment) {
            this.UpdateResponseAssessmentAsync(impactID, responseID, rAssessment, null);
        }
        
        /// <remarks/>
        public void UpdateResponseAssessmentAsync(int impactID, int responseID, AssessmentTransfer rAssessment, object userState) {
            if ((this.UpdateResponseAssessmentOperationCompleted == null)) {
                this.UpdateResponseAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResponseAssessmentOperationCompleted);
            }
            this.InvokeAsync("UpdateResponseAssessment", new object[] {
                        impactID,
                        responseID,
                        rAssessment}, this.UpdateResponseAssessmentOperationCompleted, userState);
        }
        
        private void OnUpdateResponseAssessmentOperationCompleted(object arg) {
            if ((this.UpdateResponseAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateResponseAssessmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResponseAssessment", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AssessmentTransfer GetResponseAssessment(int impactID, int responseID) {
            object[] results = this.Invoke("GetResponseAssessment", new object[] {
                        impactID,
                        responseID});
            return ((AssessmentTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetResponseAssessmentAsync(int impactID, int responseID) {
            this.GetResponseAssessmentAsync(impactID, responseID, null);
        }
        
        /// <remarks/>
        public void GetResponseAssessmentAsync(int impactID, int responseID, object userState) {
            if ((this.GetResponseAssessmentOperationCompleted == null)) {
                this.GetResponseAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponseAssessmentOperationCompleted);
            }
            this.InvokeAsync("GetResponseAssessment", new object[] {
                        impactID,
                        responseID}, this.GetResponseAssessmentOperationCompleted, userState);
        }
        
        private void OnGetResponseAssessmentOperationCompleted(object arg) {
            if ((this.GetResponseAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponseAssessmentCompleted(this, new GetResponseAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResourceRoles", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceRoleTransfer[] GetResourceRoles() {
            object[] results = this.Invoke("GetResourceRoles", new object[0]);
            return ((ResourceRoleTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceRolesAsync() {
            this.GetResourceRolesAsync(null);
        }
        
        /// <remarks/>
        public void GetResourceRolesAsync(object userState) {
            if ((this.GetResourceRolesOperationCompleted == null)) {
                this.GetResourceRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceRolesOperationCompleted);
            }
            this.InvokeAsync("GetResourceRoles", new object[0], this.GetResourceRolesOperationCompleted, userState);
        }
        
        private void OnGetResourceRolesOperationCompleted(object arg) {
            if ((this.GetResourceRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceRolesCompleted(this, new GetResourceRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResourcesAndGroups", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceTransfer[] GetResourcesAndGroups() {
            object[] results = this.Invoke("GetResourcesAndGroups", new object[0]);
            return ((ResourceTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResourcesAndGroupsAsync() {
            this.GetResourcesAndGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetResourcesAndGroupsAsync(object userState) {
            if ((this.GetResourcesAndGroupsOperationCompleted == null)) {
                this.GetResourcesAndGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourcesAndGroupsOperationCompleted);
            }
            this.InvokeAsync("GetResourcesAndGroups", new object[0], this.GetResourcesAndGroupsOperationCompleted, userState);
        }
        
        private void OnGetResourcesAndGroupsOperationCompleted(object arg) {
            if ((this.GetResourcesAndGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourcesAndGroupsCompleted(this, new GetResourcesAndGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetColourConfig", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ColourTransfer[] GetColourConfig() {
            object[] results = this.Invoke("GetColourConfig", new object[0]);
            return ((ColourTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetColourConfigAsync() {
            this.GetColourConfigAsync(null);
        }
        
        /// <remarks/>
        public void GetColourConfigAsync(object userState) {
            if ((this.GetColourConfigOperationCompleted == null)) {
                this.GetColourConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColourConfigOperationCompleted);
            }
            this.InvokeAsync("GetColourConfig", new object[0], this.GetColourConfigOperationCompleted, userState);
        }
        
        private void OnGetColourConfigOperationCompleted(object arg) {
            if ((this.GetColourConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColourConfigCompleted(this, new GetColourConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetClassifications", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClassificationTransfer[] GetClassifications() {
            object[] results = this.Invoke("GetClassifications", new object[0]);
            return ((ClassificationTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClassificationsAsync() {
            this.GetClassificationsAsync(null);
        }
        
        /// <remarks/>
        public void GetClassificationsAsync(object userState) {
            if ((this.GetClassificationsOperationCompleted == null)) {
                this.GetClassificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClassificationsOperationCompleted);
            }
            this.InvokeAsync("GetClassifications", new object[0], this.GetClassificationsOperationCompleted, userState);
        }
        
        private void OnGetClassificationsOperationCompleted(object arg) {
            if ((this.GetClassificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClassificationsCompleted(this, new GetClassificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetCaveats", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CaveatTransfer[] GetCaveats() {
            object[] results = this.Invoke("GetCaveats", new object[0]);
            return ((CaveatTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCaveatsAsync() {
            this.GetCaveatsAsync(null);
        }
        
        /// <remarks/>
        public void GetCaveatsAsync(object userState) {
            if ((this.GetCaveatsOperationCompleted == null)) {
                this.GetCaveatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaveatsOperationCompleted);
            }
            this.InvokeAsync("GetCaveats", new object[0], this.GetCaveatsOperationCompleted, userState);
        }
        
        private void OnGetCaveatsOperationCompleted(object arg) {
            if ((this.GetCaveatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaveatsCompleted(this, new GetCaveatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetConfigurationSets", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConfigurationSetTransfer[] GetConfigurationSets() {
            object[] results = this.Invoke("GetConfigurationSets", new object[0]);
            return ((ConfigurationSetTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationSetsAsync() {
            this.GetConfigurationSetsAsync(null);
        }
        
        /// <remarks/>
        public void GetConfigurationSetsAsync(object userState) {
            if ((this.GetConfigurationSetsOperationCompleted == null)) {
                this.GetConfigurationSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationSetsOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationSets", new object[0], this.GetConfigurationSetsOperationCompleted, userState);
        }
        
        private void OnGetConfigurationSetsOperationCompleted(object arg) {
            if ((this.GetConfigurationSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationSetsCompleted(this, new GetConfigurationSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetSecurityAttributes", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityAttributeTransfer[] GetSecurityAttributes() {
            object[] results = this.Invoke("GetSecurityAttributes", new object[0]);
            return ((SecurityAttributeTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityAttributesAsync() {
            this.GetSecurityAttributesAsync(null);
        }
        
        /// <remarks/>
        public void GetSecurityAttributesAsync(object userState) {
            if ((this.GetSecurityAttributesOperationCompleted == null)) {
                this.GetSecurityAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityAttributesOperationCompleted);
            }
            this.InvokeAsync("GetSecurityAttributes", new object[0], this.GetSecurityAttributesOperationCompleted, userState);
        }
        
        private void OnGetSecurityAttributesOperationCompleted(object arg) {
            if ((this.GetSecurityAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityAttributesCompleted(this, new GetSecurityAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetCurrencies", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyTransfer[] GetCurrencies() {
            object[] results = this.Invoke("GetCurrencies", new object[0]);
            return ((CurrencyTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync() {
            this.GetCurrenciesAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(object userState) {
            if ((this.GetCurrenciesOperationCompleted == null)) {
                this.GetCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrenciesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencies", new object[0], this.GetCurrenciesOperationCompleted, userState);
        }
        
        private void OnGetCurrenciesOperationCompleted(object arg) {
            if ((this.GetCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrenciesCompleted(this, new GetCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetResource", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceTransfer GetResource(int resourceID) {
            object[] results = this.Invoke("GetResource", new object[] {
                        resourceID});
            return ((ResourceTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceAsync(int resourceID) {
            this.GetResourceAsync(resourceID, null);
        }
        
        /// <remarks/>
        public void GetResourceAsync(int resourceID, object userState) {
            if ((this.GetResourceOperationCompleted == null)) {
                this.GetResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceOperationCompleted);
            }
            this.InvokeAsync("GetResource", new object[] {
                        resourceID}, this.GetResourceOperationCompleted, userState);
        }
        
        private void OnGetResourceOperationCompleted(object arg) {
            if ((this.GetResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceCompleted(this, new GetResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddResource", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceTransfer AddResource(ResourceTransfer resource) {
            object[] results = this.Invoke("AddResource", new object[] {
                        resource});
            return ((ResourceTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void AddResourceAsync(ResourceTransfer resource) {
            this.AddResourceAsync(resource, null);
        }
        
        /// <remarks/>
        public void AddResourceAsync(ResourceTransfer resource, object userState) {
            if ((this.AddResourceOperationCompleted == null)) {
                this.AddResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResourceOperationCompleted);
            }
            this.InvokeAsync("AddResource", new object[] {
                        resource}, this.AddResourceOperationCompleted, userState);
        }
        
        private void OnAddResourceOperationCompleted(object arg) {
            if ((this.AddResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResourceCompleted(this, new AddResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UpdateResource", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateResource(ResourceTransfer resource, bool forceUpdate) {
            this.Invoke("UpdateResource", new object[] {
                        resource,
                        forceUpdate});
        }
        
        /// <remarks/>
        public void UpdateResourceAsync(ResourceTransfer resource, bool forceUpdate) {
            this.UpdateResourceAsync(resource, forceUpdate, null);
        }
        
        /// <remarks/>
        public void UpdateResourceAsync(ResourceTransfer resource, bool forceUpdate, object userState) {
            if ((this.UpdateResourceOperationCompleted == null)) {
                this.UpdateResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResourceOperationCompleted);
            }
            this.InvokeAsync("UpdateResource", new object[] {
                        resource,
                        forceUpdate}, this.UpdateResourceOperationCompleted, userState);
        }
        
        private void OnUpdateResourceOperationCompleted(object arg) {
            if ((this.UpdateResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateResourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/DeleteResource", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteResource(int resourceId, bool forceDelete) {
            this.Invoke("DeleteResource", new object[] {
                        resourceId,
                        forceDelete});
        }
        
        /// <remarks/>
        public void DeleteResourceAsync(int resourceId, bool forceDelete) {
            this.DeleteResourceAsync(resourceId, forceDelete, null);
        }
        
        /// <remarks/>
        public void DeleteResourceAsync(int resourceId, bool forceDelete, object userState) {
            if ((this.DeleteResourceOperationCompleted == null)) {
                this.DeleteResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResourceOperationCompleted);
            }
            this.InvokeAsync("DeleteResource", new object[] {
                        resourceId,
                        forceDelete}, this.DeleteResourceOperationCompleted, userState);
        }
        
        private void OnDeleteResourceOperationCompleted(object arg) {
            if ((this.DeleteResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/AddResourceToGroup", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddResourceToGroup(int resourceId, int groupId, bool isAdmin) {
            this.Invoke("AddResourceToGroup", new object[] {
                        resourceId,
                        groupId,
                        isAdmin});
        }
        
        /// <remarks/>
        public void AddResourceToGroupAsync(int resourceId, int groupId, bool isAdmin) {
            this.AddResourceToGroupAsync(resourceId, groupId, isAdmin, null);
        }
        
        /// <remarks/>
        public void AddResourceToGroupAsync(int resourceId, int groupId, bool isAdmin, object userState) {
            if ((this.AddResourceToGroupOperationCompleted == null)) {
                this.AddResourceToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResourceToGroupOperationCompleted);
            }
            this.InvokeAsync("AddResourceToGroup", new object[] {
                        resourceId,
                        groupId,
                        isAdmin}, this.AddResourceToGroupOperationCompleted, userState);
        }
        
        private void OnAddResourceToGroupOperationCompleted(object arg) {
            if ((this.AddResourceToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResourceToGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/RemoveResourceFromGroup", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveResourceFromGroup(int resourceId, int groupId) {
            this.Invoke("RemoveResourceFromGroup", new object[] {
                        resourceId,
                        groupId});
        }
        
        /// <remarks/>
        public void RemoveResourceFromGroupAsync(int resourceId, int groupId) {
            this.RemoveResourceFromGroupAsync(resourceId, groupId, null);
        }
        
        /// <remarks/>
        public void RemoveResourceFromGroupAsync(int resourceId, int groupId, object userState) {
            if ((this.RemoveResourceFromGroupOperationCompleted == null)) {
                this.RemoveResourceFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveResourceFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveResourceFromGroup", new object[] {
                        resourceId,
                        groupId}, this.RemoveResourceFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveResourceFromGroupOperationCompleted(object arg) {
            if ((this.RemoveResourceFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveResourceFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/RemoveResourceFromAllGroups", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveResourceFromAllGroups(int resourceId) {
            this.Invoke("RemoveResourceFromAllGroups", new object[] {
                        resourceId});
        }
        
        /// <remarks/>
        public void RemoveResourceFromAllGroupsAsync(int resourceId) {
            this.RemoveResourceFromAllGroupsAsync(resourceId, null);
        }
        
        /// <remarks/>
        public void RemoveResourceFromAllGroupsAsync(int resourceId, object userState) {
            if ((this.RemoveResourceFromAllGroupsOperationCompleted == null)) {
                this.RemoveResourceFromAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveResourceFromAllGroupsOperationCompleted);
            }
            this.InvokeAsync("RemoveResourceFromAllGroups", new object[] {
                        resourceId}, this.RemoveResourceFromAllGroupsOperationCompleted, userState);
        }
        
        private void OnRemoveResourceFromAllGroupsOperationCompleted(object arg) {
            if ((this.RemoveResourceFromAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveResourceFromAllGroupsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetLanguageSet", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LanguageSetTransfer GetLanguageSet(int languageSetId) {
            object[] results = this.Invoke("GetLanguageSet", new object[] {
                        languageSetId});
            return ((LanguageSetTransfer)(results[0]));
        }
        
        /// <remarks/>
        public void GetLanguageSetAsync(int languageSetId) {
            this.GetLanguageSetAsync(languageSetId, null);
        }
        
        /// <remarks/>
        public void GetLanguageSetAsync(int languageSetId, object userState) {
            if ((this.GetLanguageSetOperationCompleted == null)) {
                this.GetLanguageSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguageSetOperationCompleted);
            }
            this.InvokeAsync("GetLanguageSet", new object[] {
                        languageSetId}, this.GetLanguageSetOperationCompleted, userState);
        }
        
        private void OnGetLanguageSetOperationCompleted(object arg) {
            if ((this.GetLanguageSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLanguageSetCompleted(this, new GetLanguageSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetLanguageSets", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LanguageSetTransfer[] GetLanguageSets() {
            object[] results = this.Invoke("GetLanguageSets", new object[0]);
            return ((LanguageSetTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLanguageSetsAsync() {
            this.GetLanguageSetsAsync(null);
        }
        
        /// <remarks/>
        public void GetLanguageSetsAsync(object userState) {
            if ((this.GetLanguageSetsOperationCompleted == null)) {
                this.GetLanguageSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguageSetsOperationCompleted);
            }
            this.InvokeAsync("GetLanguageSets", new object[0], this.GetLanguageSetsOperationCompleted, userState);
        }
        
        private void OnGetLanguageSetsOperationCompleted(object arg) {
            if ((this.GetLanguageSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLanguageSetsCompleted(this, new GetLanguageSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetImpactCategoryTypes", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImpactCategoryTypeTransfer[] GetImpactCategoryTypes() {
            object[] results = this.Invoke("GetImpactCategoryTypes", new object[0]);
            return ((ImpactCategoryTypeTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImpactCategoryTypesAsync() {
            this.GetImpactCategoryTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetImpactCategoryTypesAsync(object userState) {
            if ((this.GetImpactCategoryTypesOperationCompleted == null)) {
                this.GetImpactCategoryTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImpactCategoryTypesOperationCompleted);
            }
            this.InvokeAsync("GetImpactCategoryTypes", new object[0], this.GetImpactCategoryTypesOperationCompleted, userState);
        }
        
        private void OnGetImpactCategoryTypesOperationCompleted(object arg) {
            if ((this.GetImpactCategoryTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImpactCategoryTypesCompleted(this, new GetImpactCategoryTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/LinkPlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LinkPlan(int impactId, int planId, bool confirmed) {
            object[] results = this.Invoke("LinkPlan", new object[] {
                        impactId,
                        planId,
                        confirmed});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LinkPlanAsync(int impactId, int planId, bool confirmed) {
            this.LinkPlanAsync(impactId, planId, confirmed, null);
        }
        
        /// <remarks/>
        public void LinkPlanAsync(int impactId, int planId, bool confirmed, object userState) {
            if ((this.LinkPlanOperationCompleted == null)) {
                this.LinkPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkPlanOperationCompleted);
            }
            this.InvokeAsync("LinkPlan", new object[] {
                        impactId,
                        planId,
                        confirmed}, this.LinkPlanOperationCompleted, userState);
        }
        
        private void OnLinkPlanOperationCompleted(object arg) {
            if ((this.LinkPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkPlanCompleted(this, new LinkPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UnlinkPlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnlinkPlan(int impactId, int planId) {
            object[] results = this.Invoke("UnlinkPlan", new object[] {
                        impactId,
                        planId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnlinkPlanAsync(int impactId, int planId) {
            this.UnlinkPlanAsync(impactId, planId, null);
        }
        
        /// <remarks/>
        public void UnlinkPlanAsync(int impactId, int planId, object userState) {
            if ((this.UnlinkPlanOperationCompleted == null)) {
                this.UnlinkPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlinkPlanOperationCompleted);
            }
            this.InvokeAsync("UnlinkPlan", new object[] {
                        impactId,
                        planId}, this.UnlinkPlanOperationCompleted, userState);
        }
        
        private void OnUnlinkPlanOperationCompleted(object arg) {
            if ((this.UnlinkPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlinkPlanCompleted(this, new UnlinkPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/UnlinkResponsesFromPlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnlinkResponsesFromPlan(int planId, int[] responseIds) {
            this.Invoke("UnlinkResponsesFromPlan", new object[] {
                        planId,
                        responseIds});
        }
        
        /// <remarks/>
        public void UnlinkResponsesFromPlanAsync(int planId, int[] responseIds) {
            this.UnlinkResponsesFromPlanAsync(planId, responseIds, null);
        }
        
        /// <remarks/>
        public void UnlinkResponsesFromPlanAsync(int planId, int[] responseIds, object userState) {
            if ((this.UnlinkResponsesFromPlanOperationCompleted == null)) {
                this.UnlinkResponsesFromPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlinkResponsesFromPlanOperationCompleted);
            }
            this.InvokeAsync("UnlinkResponsesFromPlan", new object[] {
                        planId,
                        responseIds}, this.UnlinkResponsesFromPlanOperationCompleted, userState);
        }
        
        private void OnUnlinkResponsesFromPlanOperationCompleted(object arg) {
            if ((this.UnlinkResponsesFromPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlinkResponsesFromPlanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/LinkResponsesToPlan", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LinkResponsesToPlan(int planId, int[] responseIds) {
            this.Invoke("LinkResponsesToPlan", new object[] {
                        planId,
                        responseIds});
        }
        
        /// <remarks/>
        public void LinkResponsesToPlanAsync(int planId, int[] responseIds) {
            this.LinkResponsesToPlanAsync(planId, responseIds, null);
        }
        
        /// <remarks/>
        public void LinkResponsesToPlanAsync(int planId, int[] responseIds, object userState) {
            if ((this.LinkResponsesToPlanOperationCompleted == null)) {
                this.LinkResponsesToPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkResponsesToPlanOperationCompleted);
            }
            this.InvokeAsync("LinkResponsesToPlan", new object[] {
                        planId,
                        responseIds}, this.LinkResponsesToPlanOperationCompleted, userState);
        }
        
        private void OnLinkResponsesToPlanOperationCompleted(object arg) {
            if ((this.LinkResponsesToPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkResponsesToPlanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetOperatingResult", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperatingResultTransfer[] GetOperatingResult() {
            object[] results = this.Invoke("GetOperatingResult", new object[0]);
            return ((OperatingResultTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatingResultAsync() {
            this.GetOperatingResultAsync(null);
        }
        
        /// <remarks/>
        public void GetOperatingResultAsync(object userState) {
            if ((this.GetOperatingResultOperationCompleted == null)) {
                this.GetOperatingResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatingResultOperationCompleted);
            }
            this.InvokeAsync("GetOperatingResult", new object[0], this.GetOperatingResultOperationCompleted, userState);
        }
        
        private void OnGetOperatingResultOperationCompleted(object arg) {
            if ((this.GetOperatingResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatingResultCompleted(this, new GetOperatingResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetDesignResult", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DesignResultTransfer[] GetDesignResult() {
            object[] results = this.Invoke("GetDesignResult", new object[0]);
            return ((DesignResultTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDesignResultAsync() {
            this.GetDesignResultAsync(null);
        }
        
        /// <remarks/>
        public void GetDesignResultAsync(object userState) {
            if ((this.GetDesignResultOperationCompleted == null)) {
                this.GetDesignResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDesignResultOperationCompleted);
            }
            this.InvokeAsync("GetDesignResult", new object[0], this.GetDesignResultOperationCompleted, userState);
        }
        
        private void OnGetDesignResultOperationCompleted(object arg) {
            if ((this.GetDesignResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDesignResultCompleted(this, new GetDesignResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetControlInfluence", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ControlInfluenceTransfer[] GetControlInfluence() {
            object[] results = this.Invoke("GetControlInfluence", new object[0]);
            return ((ControlInfluenceTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetControlInfluenceAsync() {
            this.GetControlInfluenceAsync(null);
        }
        
        /// <remarks/>
        public void GetControlInfluenceAsync(object userState) {
            if ((this.GetControlInfluenceOperationCompleted == null)) {
                this.GetControlInfluenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlInfluenceOperationCompleted);
            }
            this.InvokeAsync("GetControlInfluence", new object[0], this.GetControlInfluenceOperationCompleted, userState);
        }
        
        private void OnGetControlInfluenceOperationCompleted(object arg) {
            if ((this.GetControlInfluenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetControlInfluenceCompleted(this, new GetControlInfluenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetEvaluationTestType", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EvaluationTestTypeTransfer[] GetEvaluationTestType() {
            object[] results = this.Invoke("GetEvaluationTestType", new object[0]);
            return ((EvaluationTestTypeTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEvaluationTestTypeAsync() {
            this.GetEvaluationTestTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetEvaluationTestTypeAsync(object userState) {
            if ((this.GetEvaluationTestTypeOperationCompleted == null)) {
                this.GetEvaluationTestTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEvaluationTestTypeOperationCompleted);
            }
            this.InvokeAsync("GetEvaluationTestType", new object[0], this.GetEvaluationTestTypeOperationCompleted, userState);
        }
        
        private void OnGetEvaluationTestTypeOperationCompleted(object arg) {
            if ((this.GetEvaluationTestTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEvaluationTestTypeCompleted(this, new GetEvaluationTestTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetCustomList1Values", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequirementCustomList1Transfer[] GetCustomList1Values() {
            object[] results = this.Invoke("GetCustomList1Values", new object[0]);
            return ((RequirementCustomList1Transfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomList1ValuesAsync() {
            this.GetCustomList1ValuesAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomList1ValuesAsync(object userState) {
            if ((this.GetCustomList1ValuesOperationCompleted == null)) {
                this.GetCustomList1ValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomList1ValuesOperationCompleted);
            }
            this.InvokeAsync("GetCustomList1Values", new object[0], this.GetCustomList1ValuesOperationCompleted, userState);
        }
        
        private void OnGetCustomList1ValuesOperationCompleted(object arg) {
            if ((this.GetCustomList1ValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomList1ValuesCompleted(this, new GetCustomList1ValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetCustomList2Values", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequirementCustomList2Transfer[] GetCustomList2Values() {
            object[] results = this.Invoke("GetCustomList2Values", new object[0]);
            return ((RequirementCustomList2Transfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomList2ValuesAsync() {
            this.GetCustomList2ValuesAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomList2ValuesAsync(object userState) {
            if ((this.GetCustomList2ValuesOperationCompleted == null)) {
                this.GetCustomList2ValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomList2ValuesOperationCompleted);
            }
            this.InvokeAsync("GetCustomList2Values", new object[0], this.GetCustomList2ValuesOperationCompleted, userState);
        }
        
        private void OnGetCustomList2ValuesOperationCompleted(object arg) {
            if ((this.GetCustomList2ValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomList2ValuesCompleted(this, new GetCustomList2ValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetCustomList3Values", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequirementCustomList3Transfer[] GetCustomList3Values() {
            object[] results = this.Invoke("GetCustomList3Values", new object[0]);
            return ((RequirementCustomList3Transfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomList3ValuesAsync() {
            this.GetCustomList3ValuesAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomList3ValuesAsync(object userState) {
            if ((this.GetCustomList3ValuesOperationCompleted == null)) {
                this.GetCustomList3ValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomList3ValuesOperationCompleted);
            }
            this.InvokeAsync("GetCustomList3Values", new object[0], this.GetCustomList3ValuesOperationCompleted, userState);
        }
        
        private void OnGetCustomList3ValuesOperationCompleted(object arg) {
            if ((this.GetCustomList3ValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomList3ValuesCompleted(this, new GetCustomList3ValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRequirementFieldConfigurations", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FieldConfigTransfer[] GetRequirementFieldConfigurations() {
            object[] results = this.Invoke("GetRequirementFieldConfigurations", new object[0]);
            return ((FieldConfigTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRequirementFieldConfigurationsAsync() {
            this.GetRequirementFieldConfigurationsAsync(null);
        }
        
        /// <remarks/>
        public void GetRequirementFieldConfigurationsAsync(object userState) {
            if ((this.GetRequirementFieldConfigurationsOperationCompleted == null)) {
                this.GetRequirementFieldConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequirementFieldConfigurationsOperationCompleted);
            }
            this.InvokeAsync("GetRequirementFieldConfigurations", new object[0], this.GetRequirementFieldConfigurationsOperationCompleted, userState);
        }
        
        private void OnGetRequirementFieldConfigurationsOperationCompleted(object arg) {
            if ((this.GetRequirementFieldConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequirementFieldConfigurationsCompleted(this, new GetRequirementFieldConfigurationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetEvaluationTestCondition", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EvaluationTestConditionTransfer[] GetEvaluationTestCondition() {
            object[] results = this.Invoke("GetEvaluationTestCondition", new object[0]);
            return ((EvaluationTestConditionTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEvaluationTestConditionAsync() {
            this.GetEvaluationTestConditionAsync(null);
        }
        
        /// <remarks/>
        public void GetEvaluationTestConditionAsync(object userState) {
            if ((this.GetEvaluationTestConditionOperationCompleted == null)) {
                this.GetEvaluationTestConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEvaluationTestConditionOperationCompleted);
            }
            this.InvokeAsync("GetEvaluationTestCondition", new object[0], this.GetEvaluationTestConditionOperationCompleted, userState);
        }
        
        private void OnGetEvaluationTestConditionOperationCompleted(object arg) {
            if ((this.GetEvaluationTestConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEvaluationTestConditionCompleted(this, new GetEvaluationTestConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetEvaluationTestClassification", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EvaluationTestClassificationTransfer[] GetEvaluationTestClassification() {
            object[] results = this.Invoke("GetEvaluationTestClassification", new object[0]);
            return ((EvaluationTestClassificationTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEvaluationTestClassificationAsync() {
            this.GetEvaluationTestClassificationAsync(null);
        }
        
        /// <remarks/>
        public void GetEvaluationTestClassificationAsync(object userState) {
            if ((this.GetEvaluationTestClassificationOperationCompleted == null)) {
                this.GetEvaluationTestClassificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEvaluationTestClassificationOperationCompleted);
            }
            this.InvokeAsync("GetEvaluationTestClassification", new object[0], this.GetEvaluationTestClassificationOperationCompleted, userState);
        }
        
        private void OnGetEvaluationTestClassificationOperationCompleted(object arg) {
            if ((this.GetEvaluationTestClassificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEvaluationTestClassificationCompleted(this, new GetEvaluationTestClassificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetLicensedFeatures", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialFeature[] GetLicensedFeatures() {
            object[] results = this.Invoke("GetLicensedFeatures", new object[0]);
            return ((SpecialFeature[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLicensedFeaturesAsync() {
            this.GetLicensedFeaturesAsync(null);
        }
        
        /// <remarks/>
        public void GetLicensedFeaturesAsync(object userState) {
            if ((this.GetLicensedFeaturesOperationCompleted == null)) {
                this.GetLicensedFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicensedFeaturesOperationCompleted);
            }
            this.InvokeAsync("GetLicensedFeatures", new object[0], this.GetLicensedFeaturesOperationCompleted, userState);
        }
        
        private void OnGetLicensedFeaturesOperationCompleted(object arg) {
            if ((this.GetLicensedFeaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicensedFeaturesCompleted(this, new GetLicensedFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetAvailableWebParts", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebPartMetaData[] GetAvailableWebParts() {
            object[] results = this.Invoke("GetAvailableWebParts", new object[0]);
            return ((WebPartMetaData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableWebPartsAsync() {
            this.GetAvailableWebPartsAsync(null);
        }
        
        /// <remarks/>
        public void GetAvailableWebPartsAsync(object userState) {
            if ((this.GetAvailableWebPartsOperationCompleted == null)) {
                this.GetAvailableWebPartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableWebPartsOperationCompleted);
            }
            this.InvokeAsync("GetAvailableWebParts", new object[0], this.GetAvailableWebPartsOperationCompleted, userState);
        }
        
        private void OnGetAvailableWebPartsOperationCompleted(object arg) {
            if ((this.GetAvailableWebPartsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableWebPartsCompleted(this, new GetAvailableWebPartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRequirements", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRequirementsResult GetRequirements(int filterId, RequirementsSearchParameters parameters, int pageNumber, int pageSize) {
            object[] results = this.Invoke("GetRequirements", new object[] {
                        filterId,
                        parameters,
                        pageNumber,
                        pageSize});
            return ((GetRequirementsResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequirementsAsync(int filterId, RequirementsSearchParameters parameters, int pageNumber, int pageSize) {
            this.GetRequirementsAsync(filterId, parameters, pageNumber, pageSize, null);
        }
        
        /// <remarks/>
        public void GetRequirementsAsync(int filterId, RequirementsSearchParameters parameters, int pageNumber, int pageSize, object userState) {
            if ((this.GetRequirementsOperationCompleted == null)) {
                this.GetRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequirementsOperationCompleted);
            }
            this.InvokeAsync("GetRequirements", new object[] {
                        filterId,
                        parameters,
                        pageNumber,
                        pageSize}, this.GetRequirementsOperationCompleted, userState);
        }
        
        private void OnGetRequirementsOperationCompleted(object arg) {
            if ((this.GetRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequirementsCompleted(this, new GetRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ArmSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://activerisk.com/GetRequirementFilters", RequestNamespace="http://activerisk.com/", ResponseNamespace="http://activerisk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilterTransfer[] GetRequirementFilters() {
            object[] results = this.Invoke("GetRequirementFilters", new object[0]);
            return ((FilterTransfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRequirementFiltersAsync() {
            this.GetRequirementFiltersAsync(null);
        }
        
        /// <remarks/>
        public void GetRequirementFiltersAsync(object userState) {
            if ((this.GetRequirementFiltersOperationCompleted == null)) {
                this.GetRequirementFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequirementFiltersOperationCompleted);
            }
            this.InvokeAsync("GetRequirementFilters", new object[0], this.GetRequirementFiltersOperationCompleted, userState);
        }
        
        private void OnGetRequirementFiltersOperationCompleted(object arg) {
            if ((this.GetRequirementFiltersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequirementFiltersCompleted(this, new GetRequirementFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://activerisk.com/", IsNullable=false)]
    public partial class ArmSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int businessAreaIDField;
        
        private string clientVersionField;
        
        private int instanceIDField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int BusinessAreaID {
            get {
                return this.businessAreaIDField;
            }
            set {
                this.businessAreaIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientVersion {
            get {
                return this.clientVersionField;
            }
            set {
                this.clientVersionField = value;
            }
        }
        
        /// <remarks/>
        public int InstanceID {
            get {
                return this.instanceIDField;
            }
            set {
                this.instanceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class GetRequirementsResult {
        
        private RequirementTransfer[] requirementsField;
        
        private int pageCountField;
        
        private int recordCountField;
        
        /// <remarks/>
        public RequirementTransfer[] Requirements {
            get {
                return this.requirementsField;
            }
            set {
                this.requirementsField = value;
            }
        }
        
        /// <remarks/>
        public int PageCount {
            get {
                return this.pageCountField;
            }
            set {
                this.pageCountField = value;
            }
        }
        
        /// <remarks/>
        public int RecordCount {
            get {
                return this.recordCountField;
            }
            set {
                this.recordCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RequirementTransfer {
        
        private int itemIDField;
        
        private string nameField;
        
        private int ownerIDField;
        
        private int packageIDField;
        
        private int scoringSchemeGroupIDField;
        
        private int classificationIDField;
        
        private int caveatIDField;
        
        private string descriptionField;
        
        private string businessObjectivesField;
        
        private string commentsField;
        
        private int configurationSetIDField;
        
        private double costField;
        
        private string objectIDField;
        
        private int businessAreaIdField;
        
        private int[] requirementCustomList1Field;
        
        private int requirementCustomList2Field;
        
        private int[] requirementCustomList3Field;
        
        private short treeLevelField;
        
        private int parentIDField;
        
        private int currencyIdField;
        
        private int orderIdField;
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerID {
            get {
                return this.ownerIDField;
            }
            set {
                this.ownerIDField = value;
            }
        }
        
        /// <remarks/>
        public int PackageID {
            get {
                return this.packageIDField;
            }
            set {
                this.packageIDField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeGroupID {
            get {
                return this.scoringSchemeGroupIDField;
            }
            set {
                this.scoringSchemeGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public int ClassificationID {
            get {
                return this.classificationIDField;
            }
            set {
                this.classificationIDField = value;
            }
        }
        
        /// <remarks/>
        public int CaveatID {
            get {
                return this.caveatIDField;
            }
            set {
                this.caveatIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessObjectives {
            get {
                return this.businessObjectivesField;
            }
            set {
                this.businessObjectivesField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int ConfigurationSetID {
            get {
                return this.configurationSetIDField;
            }
            set {
                this.configurationSetIDField = value;
            }
        }
        
        /// <remarks/>
        public double Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public int BusinessAreaId {
            get {
                return this.businessAreaIdField;
            }
            set {
                this.businessAreaIdField = value;
            }
        }
        
        /// <remarks/>
        public int[] RequirementCustomList1 {
            get {
                return this.requirementCustomList1Field;
            }
            set {
                this.requirementCustomList1Field = value;
            }
        }
        
        /// <remarks/>
        public int RequirementCustomList2 {
            get {
                return this.requirementCustomList2Field;
            }
            set {
                this.requirementCustomList2Field = value;
            }
        }
        
        /// <remarks/>
        public int[] RequirementCustomList3 {
            get {
                return this.requirementCustomList3Field;
            }
            set {
                this.requirementCustomList3Field = value;
            }
        }
        
        /// <remarks/>
        public short TreeLevel {
            get {
                return this.treeLevelField;
            }
            set {
                this.treeLevelField = value;
            }
        }
        
        /// <remarks/>
        public int ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RequirementsSearchParameters {
        
        private string nameField;
        
        private string ownerField;
        
        private string metaDataField;
        
        private string classificationField;
        
        private string caveatField;
        
        private string requirementsCustomList1Field;
        
        private string requirementsCustomList2Field;
        
        private string requirementsCustomList3Field;
        
        private string descriptionField;
        
        private string businessObjectivesField;
        
        private string objectIDField;
        
        private string commentsField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string MetaData {
            get {
                return this.metaDataField;
            }
            set {
                this.metaDataField = value;
            }
        }
        
        /// <remarks/>
        public string Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        public string Caveat {
            get {
                return this.caveatField;
            }
            set {
                this.caveatField = value;
            }
        }
        
        /// <remarks/>
        public string RequirementsCustomList1 {
            get {
                return this.requirementsCustomList1Field;
            }
            set {
                this.requirementsCustomList1Field = value;
            }
        }
        
        /// <remarks/>
        public string RequirementsCustomList2 {
            get {
                return this.requirementsCustomList2Field;
            }
            set {
                this.requirementsCustomList2Field = value;
            }
        }
        
        /// <remarks/>
        public string RequirementsCustomList3 {
            get {
                return this.requirementsCustomList3Field;
            }
            set {
                this.requirementsCustomList3Field = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessObjectives {
            get {
                return this.businessObjectivesField;
            }
            set {
                this.businessObjectivesField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class WebPartParameterPossibleValue {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class WebPartRequiredParameter {
        
        private string nameField;
        
        private string displayNameField;
        
        private WebPartParameterPossibleValue[] possibleValuesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public WebPartParameterPossibleValue[] PossibleValues {
            get {
                return this.possibleValuesField;
            }
            set {
                this.possibleValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class WebPartMetaData {
        
        private string guidField;
        
        private string urlBaseField;
        
        private string nameField;
        
        private WebPartRequiredParameter[] requiredParametersField;
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string UrlBase {
            get {
                return this.urlBaseField;
            }
            set {
                this.urlBaseField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public WebPartRequiredParameter[] RequiredParameters {
            get {
                return this.requiredParametersField;
            }
            set {
                this.requiredParametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class SecurityPropertiesTransfer {
        
        private bool groupSecurityEnabledField;
        
        private SecurityAttributeTransfer[] securityAttributesField;
        
        /// <remarks/>
        public bool GroupSecurityEnabled {
            get {
                return this.groupSecurityEnabledField;
            }
            set {
                this.groupSecurityEnabledField = value;
            }
        }
        
        /// <remarks/>
        public SecurityAttributeTransfer[] SecurityAttributes {
            get {
                return this.securityAttributesField;
            }
            set {
                this.securityAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class SecurityAttributeTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskLinkageTransfer {
        
        private int sourceRiskIDField;
        
        private int destinationRiskIDField;
        
        private short relationshipTypeField;
        
        /// <remarks/>
        public int SourceRiskID {
            get {
                return this.sourceRiskIDField;
            }
            set {
                this.sourceRiskIDField = value;
            }
        }
        
        /// <remarks/>
        public int DestinationRiskID {
            get {
                return this.destinationRiskIDField;
            }
            set {
                this.destinationRiskIDField = value;
            }
        }
        
        /// <remarks/>
        public short RelationshipType {
            get {
                return this.relationshipTypeField;
            }
            set {
                this.relationshipTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class CalendarExceptionTransfer {
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private short workingField;
        
        private System.Nullable<System.DateTime> fromTime1Field;
        
        private System.Nullable<System.DateTime> toTime1Field;
        
        private System.Nullable<System.DateTime> fromTime2Field;
        
        private System.Nullable<System.DateTime> toTime2Field;
        
        private System.Nullable<System.DateTime> fromTime3Field;
        
        private System.Nullable<System.DateTime> toTime3Field;
        
        private int totalDurationField;
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public short Working {
            get {
                return this.workingField;
            }
            set {
                this.workingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FromTime1 {
            get {
                return this.fromTime1Field;
            }
            set {
                this.fromTime1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToTime1 {
            get {
                return this.toTime1Field;
            }
            set {
                this.toTime1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FromTime2 {
            get {
                return this.fromTime2Field;
            }
            set {
                this.fromTime2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToTime2 {
            get {
                return this.toTime2Field;
            }
            set {
                this.toTime2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FromTime3 {
            get {
                return this.fromTime3Field;
            }
            set {
                this.fromTime3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToTime3 {
            get {
                return this.toTime3Field;
            }
            set {
                this.toTime3Field = value;
            }
        }
        
        /// <remarks/>
        public int TotalDuration {
            get {
                return this.totalDurationField;
            }
            set {
                this.totalDurationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class CalendarWorkingTimeTransfer {
        
        private ArmDayOfWeek dayOfWeekField;
        
        private short workingField;
        
        private System.Nullable<System.DateTime> fromTime1Field;
        
        private System.Nullable<System.DateTime> toTime1Field;
        
        private System.Nullable<System.DateTime> fromTime2Field;
        
        private System.Nullable<System.DateTime> toTime2Field;
        
        private System.Nullable<System.DateTime> fromTime3Field;
        
        private System.Nullable<System.DateTime> toTime3Field;
        
        private int totalDurationField;
        
        /// <remarks/>
        public ArmDayOfWeek DayOfWeek {
            get {
                return this.dayOfWeekField;
            }
            set {
                this.dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public short Working {
            get {
                return this.workingField;
            }
            set {
                this.workingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FromTime1 {
            get {
                return this.fromTime1Field;
            }
            set {
                this.fromTime1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToTime1 {
            get {
                return this.toTime1Field;
            }
            set {
                this.toTime1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FromTime2 {
            get {
                return this.fromTime2Field;
            }
            set {
                this.fromTime2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToTime2 {
            get {
                return this.toTime2Field;
            }
            set {
                this.toTime2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FromTime3 {
            get {
                return this.fromTime3Field;
            }
            set {
                this.fromTime3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToTime3 {
            get {
                return this.toTime3Field;
            }
            set {
                this.toTime3Field = value;
            }
        }
        
        /// <remarks/>
        public int TotalDuration {
            get {
                return this.totalDurationField;
            }
            set {
                this.totalDurationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum ArmDayOfWeek {
        
        /// <remarks/>
        Sunday,
        
        /// <remarks/>
        Monday,
        
        /// <remarks/>
        Tuesday,
        
        /// <remarks/>
        Wednesday,
        
        /// <remarks/>
        Thursday,
        
        /// <remarks/>
        Friday,
        
        /// <remarks/>
        Saturday,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class CalendarTransfer {
        
        private int calendarIDField;
        
        private string nameField;
        
        private double hoursPerDayField;
        
        private double hoursPerWeekField;
        
        private double hoursPerMonthField;
        
        private double hoursPerQuarterField;
        
        private double hoursPerYearField;
        
        private CalendarWorkingTimeTransfer[] workingTimesField;
        
        private CalendarExceptionTransfer[] exceptionsField;
        
        /// <remarks/>
        public int CalendarID {
            get {
                return this.calendarIDField;
            }
            set {
                this.calendarIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double HoursPerDay {
            get {
                return this.hoursPerDayField;
            }
            set {
                this.hoursPerDayField = value;
            }
        }
        
        /// <remarks/>
        public double HoursPerWeek {
            get {
                return this.hoursPerWeekField;
            }
            set {
                this.hoursPerWeekField = value;
            }
        }
        
        /// <remarks/>
        public double HoursPerMonth {
            get {
                return this.hoursPerMonthField;
            }
            set {
                this.hoursPerMonthField = value;
            }
        }
        
        /// <remarks/>
        public double HoursPerQuarter {
            get {
                return this.hoursPerQuarterField;
            }
            set {
                this.hoursPerQuarterField = value;
            }
        }
        
        /// <remarks/>
        public double HoursPerYear {
            get {
                return this.hoursPerYearField;
            }
            set {
                this.hoursPerYearField = value;
            }
        }
        
        /// <remarks/>
        public CalendarWorkingTimeTransfer[] WorkingTimes {
            get {
                return this.workingTimesField;
            }
            set {
                this.workingTimesField = value;
            }
        }
        
        /// <remarks/>
        public CalendarExceptionTransfer[] Exceptions {
            get {
                return this.exceptionsField;
            }
            set {
                this.exceptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ActivityDependencyTransfer {
        
        private int activityDependencyIDField;
        
        private int folderItemIDField;
        
        private int predecessorActivityItemIDField;
        
        private int successorActivityItemIDField;
        
        private ActivityDependencyLinkType linkTypeField;
        
        private int linkLagField;
        
        /// <remarks/>
        public int ActivityDependencyID {
            get {
                return this.activityDependencyIDField;
            }
            set {
                this.activityDependencyIDField = value;
            }
        }
        
        /// <remarks/>
        public int FolderItemID {
            get {
                return this.folderItemIDField;
            }
            set {
                this.folderItemIDField = value;
            }
        }
        
        /// <remarks/>
        public int PredecessorActivityItemID {
            get {
                return this.predecessorActivityItemIDField;
            }
            set {
                this.predecessorActivityItemIDField = value;
            }
        }
        
        /// <remarks/>
        public int SuccessorActivityItemID {
            get {
                return this.successorActivityItemIDField;
            }
            set {
                this.successorActivityItemIDField = value;
            }
        }
        
        /// <remarks/>
        public ActivityDependencyLinkType LinkType {
            get {
                return this.linkTypeField;
            }
            set {
                this.linkTypeField = value;
            }
        }
        
        /// <remarks/>
        public int LinkLag {
            get {
                return this.linkLagField;
            }
            set {
                this.linkLagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum ActivityDependencyLinkType {
        
        /// <remarks/>
        FinishToFinish,
        
        /// <remarks/>
        FinishToStart,
        
        /// <remarks/>
        StartToFinish,
        
        /// <remarks/>
        StartToStart,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ActivityScheduleTransfer {
        
        private int activityItemIDField;
        
        private int folderItemIDField;
        
        private ConstraintType constraintTypeField;
        
        private System.Nullable<System.DateTime> constraintDateField;
        
        private double actualDurationField;
        
        private System.Nullable<System.DateTime> actualStartDateField;
        
        private System.Nullable<System.DateTime> actualFinishDateField;
        
        private bool isCriticalField;
        
        private double remainingDurationField;
        
        /// <remarks/>
        public int ActivityItemID {
            get {
                return this.activityItemIDField;
            }
            set {
                this.activityItemIDField = value;
            }
        }
        
        /// <remarks/>
        public int FolderItemID {
            get {
                return this.folderItemIDField;
            }
            set {
                this.folderItemIDField = value;
            }
        }
        
        /// <remarks/>
        public ConstraintType ConstraintType {
            get {
                return this.constraintTypeField;
            }
            set {
                this.constraintTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ConstraintDate {
            get {
                return this.constraintDateField;
            }
            set {
                this.constraintDateField = value;
            }
        }
        
        /// <remarks/>
        public double ActualDuration {
            get {
                return this.actualDurationField;
            }
            set {
                this.actualDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualStartDate {
            get {
                return this.actualStartDateField;
            }
            set {
                this.actualStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualFinishDate {
            get {
                return this.actualFinishDateField;
            }
            set {
                this.actualFinishDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCritical {
            get {
                return this.isCriticalField;
            }
            set {
                this.isCriticalField = value;
            }
        }
        
        /// <remarks/>
        public double RemainingDuration {
            get {
                return this.remainingDurationField;
            }
            set {
                this.remainingDurationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum ConstraintType {
        
        /// <remarks/>
        AS_SOON_AS_POSSIBLE,
        
        /// <remarks/>
        AS_LATE_AS_POSSIBLE,
        
        /// <remarks/>
        MUST_START_ON,
        
        /// <remarks/>
        MUST_FINISH_ON,
        
        /// <remarks/>
        START_NO_EARLIER_THAN,
        
        /// <remarks/>
        START_NO_LATER_THAN,
        
        /// <remarks/>
        FINISH_NO_EARLIER_THAN,
        
        /// <remarks/>
        FINISH_NO_LATER_THAN,
        
        /// <remarks/>
        START_ON,
        
        /// <remarks/>
        FINISH_ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ActivityTransfer {
        
        private int itemIDField;
        
        private string nameField;
        
        private int managerIDField;
        
        private int packageIDField;
        
        private int scoringSchemeGroupIDField;
        
        private int classificationIDField;
        
        private int caveatIDField;
        
        private string descriptionField;
        
        private double costField;
        
        private string commentsField;
        
        private int configurationSetIDField;
        
        private decimal percentageCompleteField;
        
        private int statusIDField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> expectedCompletionDateField;
        
        private double budgetForTimeField;
        
        private double budgetForCostField;
        
        private int riskReviewPeriodField;
        
        private double minimumCostField;
        
        private double maximumCostField;
        
        private double expectedCostField;
        
        private double plannedCostField;
        
        private double minimumDurationField;
        
        private double maximumDurationField;
        
        private double expectedDurationField;
        
        private double plannedDurationField;
        
        private int distributionIDField;
        
        private short isSummaryField;
        
        private string wBSItemField;
        
        private int nodeStatusIDField;
        
        private short isMilestoneField;
        
        private int[] metaDataItemIdsField;
        
        private int currencyIdField;
        
        private int calendarIdField;
        
        private double actualDurationField;
        
        private System.Nullable<System.DateTime> actualStartDateField;
        
        private System.Nullable<System.DateTime> actualCompletionDateField;
        
        private bool isCriticalPathField;
        
        private double remainingDurationField;
        
        private int constraintTypeIdField;
        
        private System.Nullable<System.DateTime> constraintDateField;
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ManagerID {
            get {
                return this.managerIDField;
            }
            set {
                this.managerIDField = value;
            }
        }
        
        /// <remarks/>
        public int PackageID {
            get {
                return this.packageIDField;
            }
            set {
                this.packageIDField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeGroupID {
            get {
                return this.scoringSchemeGroupIDField;
            }
            set {
                this.scoringSchemeGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public int ClassificationID {
            get {
                return this.classificationIDField;
            }
            set {
                this.classificationIDField = value;
            }
        }
        
        /// <remarks/>
        public int CaveatID {
            get {
                return this.caveatIDField;
            }
            set {
                this.caveatIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int ConfigurationSetID {
            get {
                return this.configurationSetIDField;
            }
            set {
                this.configurationSetIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal PercentageComplete {
            get {
                return this.percentageCompleteField;
            }
            set {
                this.percentageCompleteField = value;
            }
        }
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpectedCompletionDate {
            get {
                return this.expectedCompletionDateField;
            }
            set {
                this.expectedCompletionDateField = value;
            }
        }
        
        /// <remarks/>
        public double BudgetForTime {
            get {
                return this.budgetForTimeField;
            }
            set {
                this.budgetForTimeField = value;
            }
        }
        
        /// <remarks/>
        public double BudgetForCost {
            get {
                return this.budgetForCostField;
            }
            set {
                this.budgetForCostField = value;
            }
        }
        
        /// <remarks/>
        public int RiskReviewPeriod {
            get {
                return this.riskReviewPeriodField;
            }
            set {
                this.riskReviewPeriodField = value;
            }
        }
        
        /// <remarks/>
        public double MinimumCost {
            get {
                return this.minimumCostField;
            }
            set {
                this.minimumCostField = value;
            }
        }
        
        /// <remarks/>
        public double MaximumCost {
            get {
                return this.maximumCostField;
            }
            set {
                this.maximumCostField = value;
            }
        }
        
        /// <remarks/>
        public double ExpectedCost {
            get {
                return this.expectedCostField;
            }
            set {
                this.expectedCostField = value;
            }
        }
        
        /// <remarks/>
        public double PlannedCost {
            get {
                return this.plannedCostField;
            }
            set {
                this.plannedCostField = value;
            }
        }
        
        /// <remarks/>
        public double MinimumDuration {
            get {
                return this.minimumDurationField;
            }
            set {
                this.minimumDurationField = value;
            }
        }
        
        /// <remarks/>
        public double MaximumDuration {
            get {
                return this.maximumDurationField;
            }
            set {
                this.maximumDurationField = value;
            }
        }
        
        /// <remarks/>
        public double ExpectedDuration {
            get {
                return this.expectedDurationField;
            }
            set {
                this.expectedDurationField = value;
            }
        }
        
        /// <remarks/>
        public double PlannedDuration {
            get {
                return this.plannedDurationField;
            }
            set {
                this.plannedDurationField = value;
            }
        }
        
        /// <remarks/>
        public int DistributionID {
            get {
                return this.distributionIDField;
            }
            set {
                this.distributionIDField = value;
            }
        }
        
        /// <remarks/>
        public short IsSummary {
            get {
                return this.isSummaryField;
            }
            set {
                this.isSummaryField = value;
            }
        }
        
        /// <remarks/>
        public string WBSItem {
            get {
                return this.wBSItemField;
            }
            set {
                this.wBSItemField = value;
            }
        }
        
        /// <remarks/>
        public int NodeStatusID {
            get {
                return this.nodeStatusIDField;
            }
            set {
                this.nodeStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public short IsMilestone {
            get {
                return this.isMilestoneField;
            }
            set {
                this.isMilestoneField = value;
            }
        }
        
        /// <remarks/>
        public int[] MetaDataItemIds {
            get {
                return this.metaDataItemIdsField;
            }
            set {
                this.metaDataItemIdsField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
        
        /// <remarks/>
        public int CalendarId {
            get {
                return this.calendarIdField;
            }
            set {
                this.calendarIdField = value;
            }
        }
        
        /// <remarks/>
        public double ActualDuration {
            get {
                return this.actualDurationField;
            }
            set {
                this.actualDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualStartDate {
            get {
                return this.actualStartDateField;
            }
            set {
                this.actualStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualCompletionDate {
            get {
                return this.actualCompletionDateField;
            }
            set {
                this.actualCompletionDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCriticalPath {
            get {
                return this.isCriticalPathField;
            }
            set {
                this.isCriticalPathField = value;
            }
        }
        
        /// <remarks/>
        public double RemainingDuration {
            get {
                return this.remainingDurationField;
            }
            set {
                this.remainingDurationField = value;
            }
        }
        
        /// <remarks/>
        public int ConstraintTypeId {
            get {
                return this.constraintTypeIdField;
            }
            set {
                this.constraintTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ConstraintDate {
            get {
                return this.constraintDateField;
            }
            set {
                this.constraintDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class FolderTransfer {
        
        private int itemIDField;
        
        private string nameField;
        
        private int managerIDField;
        
        private int packageIDField;
        
        private int scoringSchemeGroupIDField;
        
        private int classificationIDField;
        
        private int caveatIDField;
        
        private string descriptionField;
        
        private string commentsField;
        
        private int configurationSetIDField;
        
        private decimal percentageCompleteField;
        
        private int statusIDField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> expectedCompletionDateField;
        
        private double budgetForTimeField;
        
        private double budgetForCostField;
        
        private int riskReviewPeriodField;
        
        private double minimumCostField;
        
        private double maximumCostField;
        
        private double expectedCostField;
        
        private double minimumDurationField;
        
        private double maximumDurationField;
        
        private double expectedDurationField;
        
        private int distributionIDField;
        
        private short summaryField;
        
        private string wBSItemField;
        
        private int nodeStatusIDField;
        
        private int[] metaDataItemIdsField;
        
        private short isMilestoneField;
        
        private System.Nullable<System.DateTime> actualStartDateField;
        
        private System.Nullable<System.DateTime> actualCompletionDateField;
        
        private double actualTimeField;
        
        private double plannedCostField;
        
        private double plannedDurationField;
        
        private int currencyIdField;
        
        private string customProjectTextFieldField;
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ManagerID {
            get {
                return this.managerIDField;
            }
            set {
                this.managerIDField = value;
            }
        }
        
        /// <remarks/>
        public int PackageID {
            get {
                return this.packageIDField;
            }
            set {
                this.packageIDField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeGroupID {
            get {
                return this.scoringSchemeGroupIDField;
            }
            set {
                this.scoringSchemeGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public int ClassificationID {
            get {
                return this.classificationIDField;
            }
            set {
                this.classificationIDField = value;
            }
        }
        
        /// <remarks/>
        public int CaveatID {
            get {
                return this.caveatIDField;
            }
            set {
                this.caveatIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int ConfigurationSetID {
            get {
                return this.configurationSetIDField;
            }
            set {
                this.configurationSetIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal PercentageComplete {
            get {
                return this.percentageCompleteField;
            }
            set {
                this.percentageCompleteField = value;
            }
        }
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpectedCompletionDate {
            get {
                return this.expectedCompletionDateField;
            }
            set {
                this.expectedCompletionDateField = value;
            }
        }
        
        /// <remarks/>
        public double BudgetForTime {
            get {
                return this.budgetForTimeField;
            }
            set {
                this.budgetForTimeField = value;
            }
        }
        
        /// <remarks/>
        public double BudgetForCost {
            get {
                return this.budgetForCostField;
            }
            set {
                this.budgetForCostField = value;
            }
        }
        
        /// <remarks/>
        public int RiskReviewPeriod {
            get {
                return this.riskReviewPeriodField;
            }
            set {
                this.riskReviewPeriodField = value;
            }
        }
        
        /// <remarks/>
        public double MinimumCost {
            get {
                return this.minimumCostField;
            }
            set {
                this.minimumCostField = value;
            }
        }
        
        /// <remarks/>
        public double MaximumCost {
            get {
                return this.maximumCostField;
            }
            set {
                this.maximumCostField = value;
            }
        }
        
        /// <remarks/>
        public double ExpectedCost {
            get {
                return this.expectedCostField;
            }
            set {
                this.expectedCostField = value;
            }
        }
        
        /// <remarks/>
        public double MinimumDuration {
            get {
                return this.minimumDurationField;
            }
            set {
                this.minimumDurationField = value;
            }
        }
        
        /// <remarks/>
        public double MaximumDuration {
            get {
                return this.maximumDurationField;
            }
            set {
                this.maximumDurationField = value;
            }
        }
        
        /// <remarks/>
        public double ExpectedDuration {
            get {
                return this.expectedDurationField;
            }
            set {
                this.expectedDurationField = value;
            }
        }
        
        /// <remarks/>
        public int DistributionID {
            get {
                return this.distributionIDField;
            }
            set {
                this.distributionIDField = value;
            }
        }
        
        /// <remarks/>
        public short Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public string WBSItem {
            get {
                return this.wBSItemField;
            }
            set {
                this.wBSItemField = value;
            }
        }
        
        /// <remarks/>
        public int NodeStatusID {
            get {
                return this.nodeStatusIDField;
            }
            set {
                this.nodeStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public int[] MetaDataItemIds {
            get {
                return this.metaDataItemIdsField;
            }
            set {
                this.metaDataItemIdsField = value;
            }
        }
        
        /// <remarks/>
        public short IsMilestone {
            get {
                return this.isMilestoneField;
            }
            set {
                this.isMilestoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualStartDate {
            get {
                return this.actualStartDateField;
            }
            set {
                this.actualStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualCompletionDate {
            get {
                return this.actualCompletionDateField;
            }
            set {
                this.actualCompletionDateField = value;
            }
        }
        
        /// <remarks/>
        public double ActualTime {
            get {
                return this.actualTimeField;
            }
            set {
                this.actualTimeField = value;
            }
        }
        
        /// <remarks/>
        public double PlannedCost {
            get {
                return this.plannedCostField;
            }
            set {
                this.plannedCostField = value;
            }
        }
        
        /// <remarks/>
        public double PlannedDuration {
            get {
                return this.plannedDurationField;
            }
            set {
                this.plannedDurationField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomProjectTextField {
            get {
                return this.customProjectTextFieldField;
            }
            set {
                this.customProjectTextFieldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResourceGroupTransfer {
        
        private int idField;
        
        private System.Guid transientKeyField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransientKey {
            get {
                return this.transientKeyField;
            }
            set {
                this.transientKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactEscalationTransfer {
        
        private int businessAreaIdField;
        
        private int itemIdField;
        
        private int impactIdField;
        
        private string nameField;
        
        private int escalationAssignmentField;
        
        /// <remarks/>
        public int BusinessAreaId {
            get {
                return this.businessAreaIdField;
            }
            set {
                this.businessAreaIdField = value;
            }
        }
        
        /// <remarks/>
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public int ImpactId {
            get {
                return this.impactIdField;
            }
            set {
                this.impactIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int EscalationAssignment {
            get {
                return this.escalationAssignmentField;
            }
            set {
                this.escalationAssignmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class EscalationItemTransfer {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private ResourceTransfer ownerField;
        
        private int levelField;
        
        private bool hasLinkedDocsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public ResourceTransfer Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public bool HasLinkedDocs {
            get {
                return this.hasLinkedDocsField;
            }
            set {
                this.hasLinkedDocsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResourceTransfer {
        
        private int idField;
        
        private string nameField;
        
        private ResourceRoleTransfer roleField;
        
        private int defaultFilterIdField;
        
        private int[] groupIdsField;
        
        private string areaCodeField;
        
        private double blackFlagLimitField;
        
        private double costLimitField;
        
        private string countryCodeField;
        
        private int defaultBusinessAreaIdField;
        
        private string domainField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string jobTitleField;
        
        private int languageSetIdField;
        
        private string languageIdField;
        
        private System.DateTime lastLogonTimeField;
        
        private string lastNameField;
        
        private int managerIdField;
        
        private string phoneNumberField;
        
        private string userNameField;
        
        private int resourceTypeIdField;
        
        private bool isRetiredField;
        
        private bool alertDigestsField;
        
        private int currencyIdField;
        
        private string employeeRefField;
        
        private string locationField;
        
        private string commentsField;
        
        private bool licensedToARMDesktopField;
        
        private bool licensedToARMAppsField;
        
        private bool licensedToARMRiskExpressField;
        
        private bool licensedToARMUnpluggedField;
        
        private bool licensedToARMWebServiceApiField;
        
        private bool licensedToARMScheduleAnalysisField;
        
        private bool licensedToARMRiskVisualiserField;
        
        private bool licensedToARMMobileIncidentField;
        
        private bool licensedToARMBowTieField;
        
        private bool licensedToARMComplianceField;
        
        private bool licensedToARMDashboardField;
        
        private bool licensedToARMSurveysField;
        
        private bool useSystemDefaultLabelSetField;
        
        private bool securityDisclaimerAgreedField;
        
        private System.Nullable<System.DateTime> mobileRegisrationSentField;
        
        private System.Nullable<System.DateTime> mobileRegisteredDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public ResourceRoleTransfer Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultFilterId {
            get {
                return this.defaultFilterIdField;
            }
            set {
                this.defaultFilterIdField = value;
            }
        }
        
        /// <remarks/>
        public int[] GroupIds {
            get {
                return this.groupIdsField;
            }
            set {
                this.groupIdsField = value;
            }
        }
        
        /// <remarks/>
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public double BlackFlagLimit {
            get {
                return this.blackFlagLimitField;
            }
            set {
                this.blackFlagLimitField = value;
            }
        }
        
        /// <remarks/>
        public double CostLimit {
            get {
                return this.costLimitField;
            }
            set {
                this.costLimitField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultBusinessAreaId {
            get {
                return this.defaultBusinessAreaIdField;
            }
            set {
                this.defaultBusinessAreaIdField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        public int LanguageSetId {
            get {
                return this.languageSetIdField;
            }
            set {
                this.languageSetIdField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastLogonTime {
            get {
                return this.lastLogonTimeField;
            }
            set {
                this.lastLogonTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public int ManagerId {
            get {
                return this.managerIdField;
            }
            set {
                this.managerIdField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int ResourceTypeId {
            get {
                return this.resourceTypeIdField;
            }
            set {
                this.resourceTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRetired {
            get {
                return this.isRetiredField;
            }
            set {
                this.isRetiredField = value;
            }
        }
        
        /// <remarks/>
        public bool AlertDigests {
            get {
                return this.alertDigestsField;
            }
            set {
                this.alertDigestsField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
        
        /// <remarks/>
        public string EmployeeRef {
            get {
                return this.employeeRefField;
            }
            set {
                this.employeeRefField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMDesktop {
            get {
                return this.licensedToARMDesktopField;
            }
            set {
                this.licensedToARMDesktopField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMApps {
            get {
                return this.licensedToARMAppsField;
            }
            set {
                this.licensedToARMAppsField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMRiskExpress {
            get {
                return this.licensedToARMRiskExpressField;
            }
            set {
                this.licensedToARMRiskExpressField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMUnplugged {
            get {
                return this.licensedToARMUnpluggedField;
            }
            set {
                this.licensedToARMUnpluggedField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMWebServiceApi {
            get {
                return this.licensedToARMWebServiceApiField;
            }
            set {
                this.licensedToARMWebServiceApiField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMScheduleAnalysis {
            get {
                return this.licensedToARMScheduleAnalysisField;
            }
            set {
                this.licensedToARMScheduleAnalysisField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMRiskVisualiser {
            get {
                return this.licensedToARMRiskVisualiserField;
            }
            set {
                this.licensedToARMRiskVisualiserField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMMobileIncident {
            get {
                return this.licensedToARMMobileIncidentField;
            }
            set {
                this.licensedToARMMobileIncidentField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMBowTie {
            get {
                return this.licensedToARMBowTieField;
            }
            set {
                this.licensedToARMBowTieField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMCompliance {
            get {
                return this.licensedToARMComplianceField;
            }
            set {
                this.licensedToARMComplianceField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMDashboard {
            get {
                return this.licensedToARMDashboardField;
            }
            set {
                this.licensedToARMDashboardField = value;
            }
        }
        
        /// <remarks/>
        public bool LicensedToARMSurveys {
            get {
                return this.licensedToARMSurveysField;
            }
            set {
                this.licensedToARMSurveysField = value;
            }
        }
        
        /// <remarks/>
        public bool UseSystemDefaultLabelSet {
            get {
                return this.useSystemDefaultLabelSetField;
            }
            set {
                this.useSystemDefaultLabelSetField = value;
            }
        }
        
        /// <remarks/>
        public bool SecurityDisclaimerAgreed {
            get {
                return this.securityDisclaimerAgreedField;
            }
            set {
                this.securityDisclaimerAgreedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> MobileRegisrationSent {
            get {
                return this.mobileRegisrationSentField;
            }
            set {
                this.mobileRegisrationSentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> MobileRegisteredDate {
            get {
                return this.mobileRegisteredDateField;
            }
            set {
                this.mobileRegisteredDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResourceRoleTransfer {
        
        private int idField;
        
        private string nameField;
        
        private int[] permittedFunctionsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int[] PermittedFunctions {
            get {
                return this.permittedFunctionsField;
            }
            set {
                this.permittedFunctionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ChartSettingTransfer {
        
        private string keyField;
        
        private string valueField;
        
        private short chartTypeField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public short ChartType {
            get {
                return this.chartTypeField;
            }
            set {
                this.chartTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class SystemSettingTransfer {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseLikelihoodOfFailureQuestionTransfer {
        
        private int idField;
        
        private string textField;
        
        private int orderIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseNativeProcessTransfer {
        
        private int idField;
        
        private string nameField;
        
        private System.Nullable<int> parentIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseLikelihoodOfFailureTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseCustomDropDown1Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseStakeholderTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseReliantSystemsTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class AffectedSystemTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ServerInfoTransfer {
        
        private string timeZoneField;
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RatingAffectedAccountTransfer {
        
        private int idField;
        
        private string nameField;
        
        private System.Nullable<int> parentIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ConfigListItemTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ActivityStatusTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RequirementCustomList3Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RequirementCustomList2Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RequirementCustomList1Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class FieldConfigTransfer {
        
        private int fieldIDField;
        
        private string fieldNameField;
        
        private bool mandatoryField;
        
        private bool visibleField;
        
        private bool readOnlyField;
        
        private string defaultValueField;
        
        private int fieldConfigSetIdField;
        
        /// <remarks/>
        public int FieldID {
            get {
                return this.fieldIDField;
            }
            set {
                this.fieldIDField = value;
            }
        }
        
        /// <remarks/>
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Mandatory {
            get {
                return this.mandatoryField;
            }
            set {
                this.mandatoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public int FieldConfigSetId {
            get {
                return this.fieldConfigSetIdField;
            }
            set {
                this.fieldConfigSetIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class QuadSheetDefaultsTransfer {
        
        private bool truncateToFitField;
        
        private bool showScoreBandColoursField;
        
        private bool showPIDField;
        
        private short horizontalDividePercentageField;
        
        private short verticalDividePercentageField;
        
        private short fontSizeField;
        
        /// <remarks/>
        public bool TruncateToFit {
            get {
                return this.truncateToFitField;
            }
            set {
                this.truncateToFitField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowScoreBandColours {
            get {
                return this.showScoreBandColoursField;
            }
            set {
                this.showScoreBandColoursField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowPID {
            get {
                return this.showPIDField;
            }
            set {
                this.showPIDField = value;
            }
        }
        
        /// <remarks/>
        public short HorizontalDividePercentage {
            get {
                return this.horizontalDividePercentageField;
            }
            set {
                this.horizontalDividePercentageField = value;
            }
        }
        
        /// <remarks/>
        public short VerticalDividePercentage {
            get {
                return this.verticalDividePercentageField;
            }
            set {
                this.verticalDividePercentageField = value;
            }
        }
        
        /// <remarks/>
        public short FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class PIDChartDefaultsTransfer {
        
        private bool showBothSidesOfPIDField;
        
        /// <remarks/>
        public bool ShowBothSidesOfPID {
            get {
                return this.showBothSidesOfPIDField;
            }
            set {
                this.showBothSidesOfPIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class EvaluationTestConditionTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class EvaluationTestClassificationTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class EvaluationTestTypeTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ControlInfluenceTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class DesignResultTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class OperatingResultTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactCategoryTypeTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class MetaDataItemDTO {
        
        private System.Guid transientKeyField;
        
        private System.Nullable<int> idField;
        
        private string nameField;
        
        private System.Nullable<int> parentIDField;
        
        private System.Guid parentTransientKeyField;
        
        private bool checkedField;
        
        private string fullyQualifiedNameField;
        
        private System.Nullable<int> orderIDField;
        
        /// <remarks/>
        public System.Guid TransientKey {
            get {
                return this.transientKeyField;
            }
            set {
                this.transientKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ParentTransientKey {
            get {
                return this.parentTransientKeyField;
            }
            set {
                this.parentTransientKeyField = value;
            }
        }
        
        /// <remarks/>
        public bool Checked {
            get {
                return this.checkedField;
            }
            set {
                this.checkedField = value;
            }
        }
        
        /// <remarks/>
        public string FullyQualifiedName {
            get {
                return this.fullyQualifiedNameField;
            }
            set {
                this.fullyQualifiedNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class CaveatTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ClassificationTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ScoreBandTransfer {
        
        private int idField;
        
        private int pidIDField;
        
        private string descriptionField;
        
        private short scoreBandTypeField;
        
        private int colourIDField;
        
        private double ratingField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int PidID {
            get {
                return this.pidIDField;
            }
            set {
                this.pidIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public short ScoreBandType {
            get {
                return this.scoreBandTypeField;
            }
            set {
                this.scoreBandTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ColourID {
            get {
                return this.colourIDField;
            }
            set {
                this.colourIDField = value;
            }
        }
        
        /// <remarks/>
        public double Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class PidTransfer {
        
        private int idField;
        
        private string nameField;
        
        private int pidSideField;
        
        private bool impactOnlyField;
        
        private ScoreBandTransfer[] scoreBandsField;
        
        private RiskLevelTransfer[] riskLevelsField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int PidSide {
            get {
                return this.pidSideField;
            }
            set {
                this.pidSideField = value;
            }
        }
        
        /// <remarks/>
        public bool ImpactOnly {
            get {
                return this.impactOnlyField;
            }
            set {
                this.impactOnlyField = value;
            }
        }
        
        /// <remarks/>
        public ScoreBandTransfer[] ScoreBands {
            get {
                return this.scoreBandsField;
            }
            set {
                this.scoreBandsField = value;
            }
        }
        
        /// <remarks/>
        public RiskLevelTransfer[] RiskLevels {
            get {
                return this.riskLevelsField;
            }
            set {
                this.riskLevelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskLevelTransfer {
        
        private double scoreField;
        
        private int pIDBandIdField;
        
        private int impactBandIdField;
        
        private int probabilityBandIdField;
        
        private int pidIdField;
        
        /// <remarks/>
        public double Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public int PIDBandId {
            get {
                return this.pIDBandIdField;
            }
            set {
                this.pIDBandIdField = value;
            }
        }
        
        /// <remarks/>
        public int ImpactBandId {
            get {
                return this.impactBandIdField;
            }
            set {
                this.impactBandIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProbabilityBandId {
            get {
                return this.probabilityBandIdField;
            }
            set {
                this.probabilityBandIdField = value;
            }
        }
        
        /// <remarks/>
        public int PidId {
            get {
                return this.pidIdField;
            }
            set {
                this.pidIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ScheduleUnitTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        private double maxValueField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double MaxValue {
            get {
                return this.maxValueField;
            }
            set {
                this.maxValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class BusinessAreaParametersTransfer {
        
        private int idField;
        
        private TreeItemTransfer itemField;
        
        private short riskApprovalTypeField;
        
        private short numericFieldPrecisionField;
        
        private short costFieldPrecisionField;
        
        private short reviewPeriodTypeField;
        
        private bool enableInherentScoreCommentsField;
        
        private bool enableCurrentScoreCommentsField;
        
        private bool enableTargetScoreCommentsField;
        
        private bool enableRiskStatusCommentsField;
        
        private System.Nullable<bool> enableFrequencyField;
        
        private System.Nullable<short> thresholdField;
        
        private System.Nullable<short> formatTypeField;
        
        private bool enableAdvancedMitigationField;
        
        private bool enableReductionWarningField;
        
        private bool enableObligationComplianceStatusCommentsField;
        
        private bool enableObligationApprovalStatusCommentsField;
        
        private bool enableEvidenceStatusCommentsField;
        
        private bool enableEscalationCommentsField;
        
        private ScheduleUnitTransfer scheduleUnitField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public TreeItemTransfer Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public short RiskApprovalType {
            get {
                return this.riskApprovalTypeField;
            }
            set {
                this.riskApprovalTypeField = value;
            }
        }
        
        /// <remarks/>
        public short NumericFieldPrecision {
            get {
                return this.numericFieldPrecisionField;
            }
            set {
                this.numericFieldPrecisionField = value;
            }
        }
        
        /// <remarks/>
        public short CostFieldPrecision {
            get {
                return this.costFieldPrecisionField;
            }
            set {
                this.costFieldPrecisionField = value;
            }
        }
        
        /// <remarks/>
        public short ReviewPeriodType {
            get {
                return this.reviewPeriodTypeField;
            }
            set {
                this.reviewPeriodTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableInherentScoreComments {
            get {
                return this.enableInherentScoreCommentsField;
            }
            set {
                this.enableInherentScoreCommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableCurrentScoreComments {
            get {
                return this.enableCurrentScoreCommentsField;
            }
            set {
                this.enableCurrentScoreCommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableTargetScoreComments {
            get {
                return this.enableTargetScoreCommentsField;
            }
            set {
                this.enableTargetScoreCommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableRiskStatusComments {
            get {
                return this.enableRiskStatusCommentsField;
            }
            set {
                this.enableRiskStatusCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> EnableFrequency {
            get {
                return this.enableFrequencyField;
            }
            set {
                this.enableFrequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> FormatType {
            get {
                return this.formatTypeField;
            }
            set {
                this.formatTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableAdvancedMitigation {
            get {
                return this.enableAdvancedMitigationField;
            }
            set {
                this.enableAdvancedMitigationField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableReductionWarning {
            get {
                return this.enableReductionWarningField;
            }
            set {
                this.enableReductionWarningField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableObligationComplianceStatusComments {
            get {
                return this.enableObligationComplianceStatusCommentsField;
            }
            set {
                this.enableObligationComplianceStatusCommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableObligationApprovalStatusComments {
            get {
                return this.enableObligationApprovalStatusCommentsField;
            }
            set {
                this.enableObligationApprovalStatusCommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableEvidenceStatusComments {
            get {
                return this.enableEvidenceStatusCommentsField;
            }
            set {
                this.enableEvidenceStatusCommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableEscalationComments {
            get {
                return this.enableEscalationCommentsField;
            }
            set {
                this.enableEscalationCommentsField = value;
            }
        }
        
        /// <remarks/>
        public ScheduleUnitTransfer ScheduleUnit {
            get {
                return this.scheduleUnitField;
            }
            set {
                this.scheduleUnitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class TreeItemTransfer {
        
        private int idField;
        
        private string nameField;
        
        private short accessRightField;
        
        private TreeItemTransfer[] childItemsField;
        
        private int configurationSetIDField;
        
        private string descriptionField;
        
        private int scoringSchemeGroupIDField;
        
        private short treeLevelField;
        
        private short treeTypeField;
        
        private short itemTypeField;
        
        private bool hasChildrenField;
        
        private int currencyIDField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public short AccessRight {
            get {
                return this.accessRightField;
            }
            set {
                this.accessRightField = value;
            }
        }
        
        /// <remarks/>
        public TreeItemTransfer[] ChildItems {
            get {
                return this.childItemsField;
            }
            set {
                this.childItemsField = value;
            }
        }
        
        /// <remarks/>
        public int ConfigurationSetID {
            get {
                return this.configurationSetIDField;
            }
            set {
                this.configurationSetIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeGroupID {
            get {
                return this.scoringSchemeGroupIDField;
            }
            set {
                this.scoringSchemeGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public short TreeLevel {
            get {
                return this.treeLevelField;
            }
            set {
                this.treeLevelField = value;
            }
        }
        
        /// <remarks/>
        public short TreeType {
            get {
                return this.treeTypeField;
            }
            set {
                this.treeTypeField = value;
            }
        }
        
        /// <remarks/>
        public short ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool HasChildren {
            get {
                return this.hasChildrenField;
            }
            set {
                this.hasChildrenField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyID {
            get {
                return this.currencyIDField;
            }
            set {
                this.currencyIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class SecurityTransfer {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ConfigurationSetTransfer {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private int[] riskSourcesField;
        
        private int[] impactGroupsField;
        
        private int[] projectStagesField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int[] RiskSources {
            get {
                return this.riskSourcesField;
            }
            set {
                this.riskSourcesField = value;
            }
        }
        
        /// <remarks/>
        public int[] ImpactGroups {
            get {
                return this.impactGroupsField;
            }
            set {
                this.impactGroupsField = value;
            }
        }
        
        /// <remarks/>
        public int[] ProjectStages {
            get {
                return this.projectStagesField;
            }
            set {
                this.projectStagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class PlanStrategyTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        private bool isMitigatingField;
        
        private bool isInUseField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMitigating {
            get {
                return this.isMitigatingField;
            }
            set {
                this.isMitigatingField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInUse {
            get {
                return this.isInUseField;
            }
            set {
                this.isInUseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactCustomList2Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactCustomList1Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ScoringSchemeGroupTransfer {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private int[] scoringSchemeIdsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int[] ScoringSchemeIds {
            get {
                return this.scoringSchemeIdsField;
            }
            set {
                this.scoringSchemeIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskCustomMultiList1Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskCustomList3Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskCustomList2Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskCustomList1Transfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseTypeConfigTransfer {
        
        private int recordTypeIDField;
        
        private int responseTypeIDField;
        
        private int fieldIDField;
        
        private bool mandatoryField;
        
        private bool visibleField;
        
        private bool readOnlyField;
        
        private string defaultValueField;
        
        /// <remarks/>
        public int RecordTypeID {
            get {
                return this.recordTypeIDField;
            }
            set {
                this.recordTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int ResponseTypeID {
            get {
                return this.responseTypeIDField;
            }
            set {
                this.responseTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int FieldID {
            get {
                return this.fieldIDField;
            }
            set {
                this.fieldIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Mandatory {
            get {
                return this.mandatoryField;
            }
            set {
                this.mandatoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class FieldTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class CurrencyTransfer {
        
        private int idField;
        
        private string codeField;
        
        private string symbolField;
        
        private string nameField;
        
        private decimal exchangeRateField;
        
        private bool isBaseCurrencyField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal ExchangeRate {
            get {
                return this.exchangeRateField;
            }
            set {
                this.exchangeRateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBaseCurrency {
            get {
                return this.isBaseCurrencyField;
            }
            set {
                this.isBaseCurrencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class BusinessImpactAreaTransfer {
        
        private System.Nullable<int> parentIdField;
        
        private int orderIdField;
        
        private string nameField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ProjectStageTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class StaticDataTransfer {
        
        private int staticDataVersionField;
        
        private System.DateTime dateTimeRetrievedField;
        
        private System.DateTime dateTimeExpiresField;
        
        private ProjectStageTransfer[] projectStagesField;
        
        private BusinessImpactAreaTransfer[] businessImpactAreasField;
        
        private CurrencyTransfer[] currenciesField;
        
        private TestFrequencyTransfer[] testFrequenciesField;
        
        private DesignEffectivenessTransfer[] designEffectivenessesField;
        
        private ControlClassificationTransfer[] controlClassificationsField;
        
        private ControlTypeTransfer[] controlTypesField;
        
        private ControlAssertionTransfer[] controlAssertionsField;
        
        private ControlConditionTransfer[] controlConditionsField;
        
        private RiskStatusTransfer[] riskStatusesField;
        
        private RiskCategoryTransfer[] riskCategoriesField;
        
        private FieldTransfer[] fieldsField;
        
        private RecordTypeTransfer[] recordTypesField;
        
        private ResponseTypeConfigTransfer[] responseTypeConfigsField;
        
        private RiskPhaseTransfer[] riskPhasesField;
        
        private RiskCustomList1Transfer[] riskCustomList1Field;
        
        private RiskCustomList2Transfer[] riskCustomList2Field;
        
        private RiskCustomList3Transfer[] riskCustomList3Field;
        
        private RiskCustomMultiList1Transfer[] riskCustomMultiList1Field;
        
        private RiskSourceTransfer[] riskSourcesField;
        
        private ImpactGroupTransfer[] impactGroupsField;
        
        private DistributionTransfer[] distributionsField;
        
        private BlackFlagTypeTransfer[] blackFlagTypesField;
        
        private ImpactCategoryTransfer[] impactCategoriesField;
        
        private ScoringSchemeTransfer[] scoringSchemesField;
        
        private ScoringSchemeGroupTransfer[] scoringSchemeGroupsField;
        
        private ImpactCustomList1Transfer[] impactCustomList1Field;
        
        private ImpactCustomList2Transfer[] impactCustomList2Field;
        
        private ColourTransfer[] coloursField;
        
        private PlanStrategyTransfer[] planStrategiesField;
        
        private ResponseStatusTransfer[] responseStatusField;
        
        private ResponsePriorityTransfer[] responsePrioritiesField;
        
        private ResponseEffectivenessTransfer[] responseEffectivenessesField;
        
        private ConfigurationSetTransfer[] configurationSetsField;
        
        private ResourceTransfer[] resourcesField;
        
        private FunctionTransfer[] functionsField;
        
        private LanguageSetTransfer languageSetField;
        
        private SecurityTransfer securityField;
        
        private BusinessAreaParametersTransfer businessAreaParametersField;
        
        private PidTransfer[] pidsField;
        
        private SecurityAttributeTransfer[] securityAttributesField;
        
        private ClassificationTransfer[] classificationsField;
        
        private CaveatTransfer[] caveatsField;
        
        private MetaDataItemDTO[] metaDataHeirarchyField;
        
        private ImpactCategoryTypeTransfer[] impactCategoryTypesField;
        
        private OperatingResultTransfer[] operatingResultField;
        
        private DesignResultTransfer[] designResultField;
        
        private ControlInfluenceTransfer[] controlInfluenceField;
        
        private EvaluationTestTypeTransfer[] evaluationTestTypeField;
        
        private EvaluationTestClassificationTransfer[] evaluationTestClassificationField;
        
        private EvaluationTestConditionTransfer[] evaluationTestConditionField;
        
        private PIDChartDefaultsTransfer aggregatePIDChartDefaultsField;
        
        private PIDChartDefaultsTransfer pIDChartDefaultsField;
        
        private QuadSheetDefaultsTransfer quadSheetDefaultsField;
        
        private FieldConfigTransfer[] requirementCustomFieldConfigField;
        
        private RequirementCustomList1Transfer[] requirementCustomList1Field;
        
        private RequirementCustomList2Transfer[] requirementCustomList2Field;
        
        private RequirementCustomList3Transfer[] requirementCustomList3Field;
        
        private ActivityStatusTransfer[] activityStatusesField;
        
        private ConfigListItemTransfer[] deficiencyStatusesField;
        
        private ConfigListItemTransfer[] deficiencyIdentifiedByField;
        
        private ConfigListItemTransfer[] deficiencyTypesField;
        
        private ConfigListItemTransfer[] deficiencyControlComponentsField;
        
        private ConfigListItemTransfer[] ratingSignificanceOfMisstatementField;
        
        private ConfigListItemTransfer[] ratingLikelihoodOfMisstatementField;
        
        private ConfigListItemTransfer[] ratingSeverityOfDeficiencyField;
        
        private RatingAffectedAccountTransfer[] ratingAffectedAccountsField;
        
        private ServerInfoTransfer serverInfoField;
        
        private AffectedSystemTransfer[] affectedSystemsField;
        
        private ResponseReliantSystemsTransfer[] responseReliantSystemsField;
        
        private ResponseStakeholderTransfer[] responseStakeholdersField;
        
        private ResponseCustomDropDown1Transfer[] responseCustomDropDown1Field;
        
        private ResponseLikelihoodOfFailureTransfer[] responseLikelihoodOfFailureField;
        
        private ResponseNativeProcessTransfer[] responseNativeProcessField;
        
        private ResponseLikelihoodOfFailureQuestionTransfer[] responseLikelihoodOfFailureQuestionField;
        
        private SystemSettingTransfer[] systemSettingsField;
        
        private ChartSettingTransfer[] chartSettingsField;
        
        /// <remarks/>
        public int StaticDataVersion {
            get {
                return this.staticDataVersionField;
            }
            set {
                this.staticDataVersionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeRetrieved {
            get {
                return this.dateTimeRetrievedField;
            }
            set {
                this.dateTimeRetrievedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeExpires {
            get {
                return this.dateTimeExpiresField;
            }
            set {
                this.dateTimeExpiresField = value;
            }
        }
        
        /// <remarks/>
        public ProjectStageTransfer[] ProjectStages {
            get {
                return this.projectStagesField;
            }
            set {
                this.projectStagesField = value;
            }
        }
        
        /// <remarks/>
        public BusinessImpactAreaTransfer[] BusinessImpactAreas {
            get {
                return this.businessImpactAreasField;
            }
            set {
                this.businessImpactAreasField = value;
            }
        }
        
        /// <remarks/>
        public CurrencyTransfer[] Currencies {
            get {
                return this.currenciesField;
            }
            set {
                this.currenciesField = value;
            }
        }
        
        /// <remarks/>
        public TestFrequencyTransfer[] TestFrequencies {
            get {
                return this.testFrequenciesField;
            }
            set {
                this.testFrequenciesField = value;
            }
        }
        
        /// <remarks/>
        public DesignEffectivenessTransfer[] DesignEffectivenesses {
            get {
                return this.designEffectivenessesField;
            }
            set {
                this.designEffectivenessesField = value;
            }
        }
        
        /// <remarks/>
        public ControlClassificationTransfer[] ControlClassifications {
            get {
                return this.controlClassificationsField;
            }
            set {
                this.controlClassificationsField = value;
            }
        }
        
        /// <remarks/>
        public ControlTypeTransfer[] ControlTypes {
            get {
                return this.controlTypesField;
            }
            set {
                this.controlTypesField = value;
            }
        }
        
        /// <remarks/>
        public ControlAssertionTransfer[] ControlAssertions {
            get {
                return this.controlAssertionsField;
            }
            set {
                this.controlAssertionsField = value;
            }
        }
        
        /// <remarks/>
        public ControlConditionTransfer[] ControlConditions {
            get {
                return this.controlConditionsField;
            }
            set {
                this.controlConditionsField = value;
            }
        }
        
        /// <remarks/>
        public RiskStatusTransfer[] RiskStatuses {
            get {
                return this.riskStatusesField;
            }
            set {
                this.riskStatusesField = value;
            }
        }
        
        /// <remarks/>
        public RiskCategoryTransfer[] RiskCategories {
            get {
                return this.riskCategoriesField;
            }
            set {
                this.riskCategoriesField = value;
            }
        }
        
        /// <remarks/>
        public FieldTransfer[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
        
        /// <remarks/>
        public RecordTypeTransfer[] RecordTypes {
            get {
                return this.recordTypesField;
            }
            set {
                this.recordTypesField = value;
            }
        }
        
        /// <remarks/>
        public ResponseTypeConfigTransfer[] ResponseTypeConfigs {
            get {
                return this.responseTypeConfigsField;
            }
            set {
                this.responseTypeConfigsField = value;
            }
        }
        
        /// <remarks/>
        public RiskPhaseTransfer[] RiskPhases {
            get {
                return this.riskPhasesField;
            }
            set {
                this.riskPhasesField = value;
            }
        }
        
        /// <remarks/>
        public RiskCustomList1Transfer[] RiskCustomList1 {
            get {
                return this.riskCustomList1Field;
            }
            set {
                this.riskCustomList1Field = value;
            }
        }
        
        /// <remarks/>
        public RiskCustomList2Transfer[] RiskCustomList2 {
            get {
                return this.riskCustomList2Field;
            }
            set {
                this.riskCustomList2Field = value;
            }
        }
        
        /// <remarks/>
        public RiskCustomList3Transfer[] RiskCustomList3 {
            get {
                return this.riskCustomList3Field;
            }
            set {
                this.riskCustomList3Field = value;
            }
        }
        
        /// <remarks/>
        public RiskCustomMultiList1Transfer[] RiskCustomMultiList1 {
            get {
                return this.riskCustomMultiList1Field;
            }
            set {
                this.riskCustomMultiList1Field = value;
            }
        }
        
        /// <remarks/>
        public RiskSourceTransfer[] RiskSources {
            get {
                return this.riskSourcesField;
            }
            set {
                this.riskSourcesField = value;
            }
        }
        
        /// <remarks/>
        public ImpactGroupTransfer[] ImpactGroups {
            get {
                return this.impactGroupsField;
            }
            set {
                this.impactGroupsField = value;
            }
        }
        
        /// <remarks/>
        public DistributionTransfer[] Distributions {
            get {
                return this.distributionsField;
            }
            set {
                this.distributionsField = value;
            }
        }
        
        /// <remarks/>
        public BlackFlagTypeTransfer[] BlackFlagTypes {
            get {
                return this.blackFlagTypesField;
            }
            set {
                this.blackFlagTypesField = value;
            }
        }
        
        /// <remarks/>
        public ImpactCategoryTransfer[] ImpactCategories {
            get {
                return this.impactCategoriesField;
            }
            set {
                this.impactCategoriesField = value;
            }
        }
        
        /// <remarks/>
        public ScoringSchemeTransfer[] ScoringSchemes {
            get {
                return this.scoringSchemesField;
            }
            set {
                this.scoringSchemesField = value;
            }
        }
        
        /// <remarks/>
        public ScoringSchemeGroupTransfer[] ScoringSchemeGroups {
            get {
                return this.scoringSchemeGroupsField;
            }
            set {
                this.scoringSchemeGroupsField = value;
            }
        }
        
        /// <remarks/>
        public ImpactCustomList1Transfer[] ImpactCustomList1 {
            get {
                return this.impactCustomList1Field;
            }
            set {
                this.impactCustomList1Field = value;
            }
        }
        
        /// <remarks/>
        public ImpactCustomList2Transfer[] ImpactCustomList2 {
            get {
                return this.impactCustomList2Field;
            }
            set {
                this.impactCustomList2Field = value;
            }
        }
        
        /// <remarks/>
        public ColourTransfer[] Colours {
            get {
                return this.coloursField;
            }
            set {
                this.coloursField = value;
            }
        }
        
        /// <remarks/>
        public PlanStrategyTransfer[] PlanStrategies {
            get {
                return this.planStrategiesField;
            }
            set {
                this.planStrategiesField = value;
            }
        }
        
        /// <remarks/>
        public ResponseStatusTransfer[] ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        public ResponsePriorityTransfer[] ResponsePriorities {
            get {
                return this.responsePrioritiesField;
            }
            set {
                this.responsePrioritiesField = value;
            }
        }
        
        /// <remarks/>
        public ResponseEffectivenessTransfer[] ResponseEffectivenesses {
            get {
                return this.responseEffectivenessesField;
            }
            set {
                this.responseEffectivenessesField = value;
            }
        }
        
        /// <remarks/>
        public ConfigurationSetTransfer[] ConfigurationSets {
            get {
                return this.configurationSetsField;
            }
            set {
                this.configurationSetsField = value;
            }
        }
        
        /// <remarks/>
        public ResourceTransfer[] Resources {
            get {
                return this.resourcesField;
            }
            set {
                this.resourcesField = value;
            }
        }
        
        /// <remarks/>
        public FunctionTransfer[] Functions {
            get {
                return this.functionsField;
            }
            set {
                this.functionsField = value;
            }
        }
        
        /// <remarks/>
        public LanguageSetTransfer LanguageSet {
            get {
                return this.languageSetField;
            }
            set {
                this.languageSetField = value;
            }
        }
        
        /// <remarks/>
        public SecurityTransfer Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public BusinessAreaParametersTransfer BusinessAreaParameters {
            get {
                return this.businessAreaParametersField;
            }
            set {
                this.businessAreaParametersField = value;
            }
        }
        
        /// <remarks/>
        public PidTransfer[] Pids {
            get {
                return this.pidsField;
            }
            set {
                this.pidsField = value;
            }
        }
        
        /// <remarks/>
        public SecurityAttributeTransfer[] SecurityAttributes {
            get {
                return this.securityAttributesField;
            }
            set {
                this.securityAttributesField = value;
            }
        }
        
        /// <remarks/>
        public ClassificationTransfer[] Classifications {
            get {
                return this.classificationsField;
            }
            set {
                this.classificationsField = value;
            }
        }
        
        /// <remarks/>
        public CaveatTransfer[] Caveats {
            get {
                return this.caveatsField;
            }
            set {
                this.caveatsField = value;
            }
        }
        
        /// <remarks/>
        public MetaDataItemDTO[] MetaDataHeirarchy {
            get {
                return this.metaDataHeirarchyField;
            }
            set {
                this.metaDataHeirarchyField = value;
            }
        }
        
        /// <remarks/>
        public ImpactCategoryTypeTransfer[] ImpactCategoryTypes {
            get {
                return this.impactCategoryTypesField;
            }
            set {
                this.impactCategoryTypesField = value;
            }
        }
        
        /// <remarks/>
        public OperatingResultTransfer[] OperatingResult {
            get {
                return this.operatingResultField;
            }
            set {
                this.operatingResultField = value;
            }
        }
        
        /// <remarks/>
        public DesignResultTransfer[] DesignResult {
            get {
                return this.designResultField;
            }
            set {
                this.designResultField = value;
            }
        }
        
        /// <remarks/>
        public ControlInfluenceTransfer[] ControlInfluence {
            get {
                return this.controlInfluenceField;
            }
            set {
                this.controlInfluenceField = value;
            }
        }
        
        /// <remarks/>
        public EvaluationTestTypeTransfer[] EvaluationTestType {
            get {
                return this.evaluationTestTypeField;
            }
            set {
                this.evaluationTestTypeField = value;
            }
        }
        
        /// <remarks/>
        public EvaluationTestClassificationTransfer[] EvaluationTestClassification {
            get {
                return this.evaluationTestClassificationField;
            }
            set {
                this.evaluationTestClassificationField = value;
            }
        }
        
        /// <remarks/>
        public EvaluationTestConditionTransfer[] EvaluationTestCondition {
            get {
                return this.evaluationTestConditionField;
            }
            set {
                this.evaluationTestConditionField = value;
            }
        }
        
        /// <remarks/>
        public PIDChartDefaultsTransfer AggregatePIDChartDefaults {
            get {
                return this.aggregatePIDChartDefaultsField;
            }
            set {
                this.aggregatePIDChartDefaultsField = value;
            }
        }
        
        /// <remarks/>
        public PIDChartDefaultsTransfer PIDChartDefaults {
            get {
                return this.pIDChartDefaultsField;
            }
            set {
                this.pIDChartDefaultsField = value;
            }
        }
        
        /// <remarks/>
        public QuadSheetDefaultsTransfer QuadSheetDefaults {
            get {
                return this.quadSheetDefaultsField;
            }
            set {
                this.quadSheetDefaultsField = value;
            }
        }
        
        /// <remarks/>
        public FieldConfigTransfer[] RequirementCustomFieldConfig {
            get {
                return this.requirementCustomFieldConfigField;
            }
            set {
                this.requirementCustomFieldConfigField = value;
            }
        }
        
        /// <remarks/>
        public RequirementCustomList1Transfer[] RequirementCustomList1 {
            get {
                return this.requirementCustomList1Field;
            }
            set {
                this.requirementCustomList1Field = value;
            }
        }
        
        /// <remarks/>
        public RequirementCustomList2Transfer[] RequirementCustomList2 {
            get {
                return this.requirementCustomList2Field;
            }
            set {
                this.requirementCustomList2Field = value;
            }
        }
        
        /// <remarks/>
        public RequirementCustomList3Transfer[] RequirementCustomList3 {
            get {
                return this.requirementCustomList3Field;
            }
            set {
                this.requirementCustomList3Field = value;
            }
        }
        
        /// <remarks/>
        public ActivityStatusTransfer[] ActivityStatuses {
            get {
                return this.activityStatusesField;
            }
            set {
                this.activityStatusesField = value;
            }
        }
        
        /// <remarks/>
        public ConfigListItemTransfer[] DeficiencyStatuses {
            get {
                return this.deficiencyStatusesField;
            }
            set {
                this.deficiencyStatusesField = value;
            }
        }
        
        /// <remarks/>
        public ConfigListItemTransfer[] DeficiencyIdentifiedBy {
            get {
                return this.deficiencyIdentifiedByField;
            }
            set {
                this.deficiencyIdentifiedByField = value;
            }
        }
        
        /// <remarks/>
        public ConfigListItemTransfer[] DeficiencyTypes {
            get {
                return this.deficiencyTypesField;
            }
            set {
                this.deficiencyTypesField = value;
            }
        }
        
        /// <remarks/>
        public ConfigListItemTransfer[] DeficiencyControlComponents {
            get {
                return this.deficiencyControlComponentsField;
            }
            set {
                this.deficiencyControlComponentsField = value;
            }
        }
        
        /// <remarks/>
        public ConfigListItemTransfer[] RatingSignificanceOfMisstatement {
            get {
                return this.ratingSignificanceOfMisstatementField;
            }
            set {
                this.ratingSignificanceOfMisstatementField = value;
            }
        }
        
        /// <remarks/>
        public ConfigListItemTransfer[] RatingLikelihoodOfMisstatement {
            get {
                return this.ratingLikelihoodOfMisstatementField;
            }
            set {
                this.ratingLikelihoodOfMisstatementField = value;
            }
        }
        
        /// <remarks/>
        public ConfigListItemTransfer[] RatingSeverityOfDeficiency {
            get {
                return this.ratingSeverityOfDeficiencyField;
            }
            set {
                this.ratingSeverityOfDeficiencyField = value;
            }
        }
        
        /// <remarks/>
        public RatingAffectedAccountTransfer[] RatingAffectedAccounts {
            get {
                return this.ratingAffectedAccountsField;
            }
            set {
                this.ratingAffectedAccountsField = value;
            }
        }
        
        /// <remarks/>
        public ServerInfoTransfer ServerInfo {
            get {
                return this.serverInfoField;
            }
            set {
                this.serverInfoField = value;
            }
        }
        
        /// <remarks/>
        public AffectedSystemTransfer[] AffectedSystems {
            get {
                return this.affectedSystemsField;
            }
            set {
                this.affectedSystemsField = value;
            }
        }
        
        /// <remarks/>
        public ResponseReliantSystemsTransfer[] ResponseReliantSystems {
            get {
                return this.responseReliantSystemsField;
            }
            set {
                this.responseReliantSystemsField = value;
            }
        }
        
        /// <remarks/>
        public ResponseStakeholderTransfer[] ResponseStakeholders {
            get {
                return this.responseStakeholdersField;
            }
            set {
                this.responseStakeholdersField = value;
            }
        }
        
        /// <remarks/>
        public ResponseCustomDropDown1Transfer[] ResponseCustomDropDown1 {
            get {
                return this.responseCustomDropDown1Field;
            }
            set {
                this.responseCustomDropDown1Field = value;
            }
        }
        
        /// <remarks/>
        public ResponseLikelihoodOfFailureTransfer[] ResponseLikelihoodOfFailure {
            get {
                return this.responseLikelihoodOfFailureField;
            }
            set {
                this.responseLikelihoodOfFailureField = value;
            }
        }
        
        /// <remarks/>
        public ResponseNativeProcessTransfer[] ResponseNativeProcess {
            get {
                return this.responseNativeProcessField;
            }
            set {
                this.responseNativeProcessField = value;
            }
        }
        
        /// <remarks/>
        public ResponseLikelihoodOfFailureQuestionTransfer[] ResponseLikelihoodOfFailureQuestion {
            get {
                return this.responseLikelihoodOfFailureQuestionField;
            }
            set {
                this.responseLikelihoodOfFailureQuestionField = value;
            }
        }
        
        /// <remarks/>
        public SystemSettingTransfer[] SystemSettings {
            get {
                return this.systemSettingsField;
            }
            set {
                this.systemSettingsField = value;
            }
        }
        
        /// <remarks/>
        public ChartSettingTransfer[] ChartSettings {
            get {
                return this.chartSettingsField;
            }
            set {
                this.chartSettingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class TestFrequencyTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class DesignEffectivenessTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ControlClassificationTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ControlTypeTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ControlAssertionTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ControlConditionTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskStatusTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        private short orderIDField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public short OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskCategoryTransfer {
        
        private int idField;
        
        private string nameField;
        
        private int parentIDField;
        
        private int typeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RecordTypeTransfer {
        
        private int idField;
        
        private string nameField;
        
        private int[] riskStatusesField;
        
        private ConfiguredFieldTransfer[] fieldsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int[] RiskStatuses {
            get {
                return this.riskStatusesField;
            }
            set {
                this.riskStatusesField = value;
            }
        }
        
        /// <remarks/>
        public ConfiguredFieldTransfer[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ConfiguredFieldTransfer {
        
        private int recordTypeIDField;
        
        private int fieldIDField;
        
        private string fieldNameField;
        
        private bool mandatoryField;
        
        private bool visibleField;
        
        private bool readOnlyField;
        
        private string defaultValueField;
        
        /// <remarks/>
        public int RecordTypeID {
            get {
                return this.recordTypeIDField;
            }
            set {
                this.recordTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int FieldID {
            get {
                return this.fieldIDField;
            }
            set {
                this.fieldIDField = value;
            }
        }
        
        /// <remarks/>
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Mandatory {
            get {
                return this.mandatoryField;
            }
            set {
                this.mandatoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskPhaseTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskSourceTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactGroupTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class DistributionTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class BlackFlagTypeTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactCategoryTransfer {
        
        private int idField;
        
        private string nameField;
        
        private string unitsField;
        
        private bool aggregateField;
        
        private int impactCategoryTypeIDField;
        
        private bool isCostCategoryField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public bool Aggregate {
            get {
                return this.aggregateField;
            }
            set {
                this.aggregateField = value;
            }
        }
        
        /// <remarks/>
        public int ImpactCategoryTypeID {
            get {
                return this.impactCategoryTypeIDField;
            }
            set {
                this.impactCategoryTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCostCategory {
            get {
                return this.isCostCategoryField;
            }
            set {
                this.isCostCategoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ScoringSchemeTransfer {
        
        private int idField;
        
        private string nameField;
        
        private short assessmentFlagField;
        
        private string descriptionField;
        
        private ScoringCriteriaTransfer[] scoringCriteriaField;
        
        private ImpactCategoryForSchemeTransfer[] impactCategoriesForSchemeField;
        
        private int[] weightTypeIdsField;
        
        private int pidIdField;
        
        private int currencyIdField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public short AssessmentFlag {
            get {
                return this.assessmentFlagField;
            }
            set {
                this.assessmentFlagField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public ScoringCriteriaTransfer[] ScoringCriteria {
            get {
                return this.scoringCriteriaField;
            }
            set {
                this.scoringCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public ImpactCategoryForSchemeTransfer[] ImpactCategoriesForScheme {
            get {
                return this.impactCategoriesForSchemeField;
            }
            set {
                this.impactCategoriesForSchemeField = value;
            }
        }
        
        /// <remarks/>
        public int[] WeightTypeIds {
            get {
                return this.weightTypeIdsField;
            }
            set {
                this.weightTypeIdsField = value;
            }
        }
        
        /// <remarks/>
        public int PidId {
            get {
                return this.pidIdField;
            }
            set {
                this.pidIdField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ScoringCriteriaTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        private double maxValueField;
        
        private double minValueField;
        
        private int scoreBandIDField;
        
        private int pidIDField;
        
        private int impactCategoryIDField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double MaxValue {
            get {
                return this.maxValueField;
            }
            set {
                this.maxValueField = value;
            }
        }
        
        /// <remarks/>
        public double MinValue {
            get {
                return this.minValueField;
            }
            set {
                this.minValueField = value;
            }
        }
        
        /// <remarks/>
        public int ScoreBandID {
            get {
                return this.scoreBandIDField;
            }
            set {
                this.scoreBandIDField = value;
            }
        }
        
        /// <remarks/>
        public int PidID {
            get {
                return this.pidIDField;
            }
            set {
                this.pidIDField = value;
            }
        }
        
        /// <remarks/>
        public int ImpactCategoryID {
            get {
                return this.impactCategoryIDField;
            }
            set {
                this.impactCategoryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactCategoryForSchemeTransfer {
        
        private bool isDefaultField;
        
        private bool isMandatoryField;
        
        private string descriptionField;
        
        private int categoryIDField;
        
        private int orderIDField;
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMandatory {
            get {
                return this.isMandatoryField;
            }
            set {
                this.isMandatoryField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ColourTransfer {
        
        private int idField;
        
        private string colourRefField;
        
        private string colourDecimalField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ColourRef {
            get {
                return this.colourRefField;
            }
            set {
                this.colourRefField = value;
            }
        }
        
        /// <remarks/>
        public string ColourDecimal {
            get {
                return this.colourDecimalField;
            }
            set {
                this.colourDecimalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseStatusTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponsePriorityTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseEffectivenessTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class FunctionTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class LanguageSetTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        private SpecialisedStringTransfer[] specialisedStringsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public SpecialisedStringTransfer[] SpecialisedStrings {
            get {
                return this.specialisedStringsField;
            }
            set {
                this.specialisedStringsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class SpecialisedStringTransfer {
        
        private string keyField;
        
        private int labelSetIdField;
        
        private string languageIdField;
        
        private string valueField;
        
        private string descriptionField;
        
        private int areaIdField;
        
        private int sequenceNoField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public int LabelSetId {
            get {
                return this.labelSetIdField;
            }
            set {
                this.labelSetIdField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int AreaId {
            get {
                return this.areaIdField;
            }
            set {
                this.areaIdField = value;
            }
        }
        
        /// <remarks/>
        public int SequenceNo {
            get {
                return this.sequenceNoField;
            }
            set {
                this.sequenceNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class UserProfileTransfer {
        
        private ResourceTransfer userField;
        
        private LanguageSetTransfer languageSetField;
        
        private FunctionTransfer[] permittedFunctionsField;
        
        /// <remarks/>
        public ResourceTransfer User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public LanguageSetTransfer LanguageSet {
            get {
                return this.languageSetField;
            }
            set {
                this.languageSetField = value;
            }
        }
        
        /// <remarks/>
        public FunctionTransfer[] PermittedFunctions {
            get {
                return this.permittedFunctionsField;
            }
            set {
                this.permittedFunctionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ModuleTransfer {
        
        private int itemIDField;
        
        private string nameField;
        
        private int ownerIDField;
        
        private int packageIDField;
        
        private int scoringSchemeGroupIDField;
        
        private int classificationIDField;
        
        private int caveatIDField;
        
        private string descriptionField;
        
        private string businessObjectivesField;
        
        private string commentsField;
        
        private int configurationSetIDField;
        
        private int currencyIDField;
        
        private int distributionIdField;
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerID {
            get {
                return this.ownerIDField;
            }
            set {
                this.ownerIDField = value;
            }
        }
        
        /// <remarks/>
        public int PackageID {
            get {
                return this.packageIDField;
            }
            set {
                this.packageIDField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeGroupID {
            get {
                return this.scoringSchemeGroupIDField;
            }
            set {
                this.scoringSchemeGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public int ClassificationID {
            get {
                return this.classificationIDField;
            }
            set {
                this.classificationIDField = value;
            }
        }
        
        /// <remarks/>
        public int CaveatID {
            get {
                return this.caveatIDField;
            }
            set {
                this.caveatIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessObjectives {
            get {
                return this.businessObjectivesField;
            }
            set {
                this.businessObjectivesField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int ConfigurationSetID {
            get {
                return this.configurationSetIDField;
            }
            set {
                this.configurationSetIDField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyID {
            get {
                return this.currencyIDField;
            }
            set {
                this.currencyIDField = value;
            }
        }
        
        /// <remarks/>
        public int DistributionId {
            get {
                return this.distributionIdField;
            }
            set {
                this.distributionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class FilterTransfer {
        
        private int idField;
        
        private string nameField;
        
        private object filterCriteriaField;
        
        private int filterTypeField;
        
        private int filterScopeField;
        
        private bool excludeAssociatedRecordsField;
        
        private int[] groupsField;
        
        private int treeTypeField;
        
        private int[] itemsField;
        
        private int reassessmentScoringSchemeField;
        
        private int ownerIdField;
        
        private int includeChildrenToDepthField;
        
        private int nodeStatusField;
        
        private int elementTypeField;
        
        private string sortProperty1Field;
        
        private string sortProperty2Field;
        
        private string sortProperty3Field;
        
        private int sortOrder1Field;
        
        private int sortOrder2Field;
        
        private int sortOrder3Field;
        
        private int topNRecordsField;
        
        private bool blackFlagFirstField;
        
        private bool absoluteScoreField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public object FilterCriteria {
            get {
                return this.filterCriteriaField;
            }
            set {
                this.filterCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public int FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        public int FilterScope {
            get {
                return this.filterScopeField;
            }
            set {
                this.filterScopeField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeAssociatedRecords {
            get {
                return this.excludeAssociatedRecordsField;
            }
            set {
                this.excludeAssociatedRecordsField = value;
            }
        }
        
        /// <remarks/>
        public int[] Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public int TreeType {
            get {
                return this.treeTypeField;
            }
            set {
                this.treeTypeField = value;
            }
        }
        
        /// <remarks/>
        public int[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        public int ReassessmentScoringScheme {
            get {
                return this.reassessmentScoringSchemeField;
            }
            set {
                this.reassessmentScoringSchemeField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public int IncludeChildrenToDepth {
            get {
                return this.includeChildrenToDepthField;
            }
            set {
                this.includeChildrenToDepthField = value;
            }
        }
        
        /// <remarks/>
        public int NodeStatus {
            get {
                return this.nodeStatusField;
            }
            set {
                this.nodeStatusField = value;
            }
        }
        
        /// <remarks/>
        public int ElementType {
            get {
                return this.elementTypeField;
            }
            set {
                this.elementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SortProperty1 {
            get {
                return this.sortProperty1Field;
            }
            set {
                this.sortProperty1Field = value;
            }
        }
        
        /// <remarks/>
        public string SortProperty2 {
            get {
                return this.sortProperty2Field;
            }
            set {
                this.sortProperty2Field = value;
            }
        }
        
        /// <remarks/>
        public string SortProperty3 {
            get {
                return this.sortProperty3Field;
            }
            set {
                this.sortProperty3Field = value;
            }
        }
        
        /// <remarks/>
        public int SortOrder1 {
            get {
                return this.sortOrder1Field;
            }
            set {
                this.sortOrder1Field = value;
            }
        }
        
        /// <remarks/>
        public int SortOrder2 {
            get {
                return this.sortOrder2Field;
            }
            set {
                this.sortOrder2Field = value;
            }
        }
        
        /// <remarks/>
        public int SortOrder3 {
            get {
                return this.sortOrder3Field;
            }
            set {
                this.sortOrder3Field = value;
            }
        }
        
        /// <remarks/>
        public int TopNRecords {
            get {
                return this.topNRecordsField;
            }
            set {
                this.topNRecordsField = value;
            }
        }
        
        /// <remarks/>
        public bool BlackFlagFirst {
            get {
                return this.blackFlagFirstField;
            }
            set {
                this.blackFlagFirstField = value;
            }
        }
        
        /// <remarks/>
        public bool AbsoluteScore {
            get {
                return this.absoluteScoreField;
            }
            set {
                this.absoluteScoreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class PlannedRiskLevelTransfer {
        
        private System.Nullable<System.DateTime> dueDateField;
        
        private double targetRiskLevelField;
        
        private int responseIDField;
        
        private string responseNameField;
        
        private string actioneeNameField;
        
        private short responseTypeField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private ResponseStatusTransfer responseStatusField;
        
        private string customResponseRefField;
        
        private System.Nullable<decimal> percentageCompleteField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> baselineDueDateField;
        
        private string linkedActivityIDField;
        
        private System.Nullable<System.DateTime> backOnTrackDateField;
        
        private string pPProjectIDField;
        
        private int completionAuditIDField;
        
        private ImpactCategoryScoreTransfer[] impactCategoryScoresField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        public double TargetRiskLevel {
            get {
                return this.targetRiskLevelField;
            }
            set {
                this.targetRiskLevelField = value;
            }
        }
        
        /// <remarks/>
        public int ResponseID {
            get {
                return this.responseIDField;
            }
            set {
                this.responseIDField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseName {
            get {
                return this.responseNameField;
            }
            set {
                this.responseNameField = value;
            }
        }
        
        /// <remarks/>
        public string ActioneeName {
            get {
                return this.actioneeNameField;
            }
            set {
                this.actioneeNameField = value;
            }
        }
        
        /// <remarks/>
        public short ResponseType {
            get {
                return this.responseTypeField;
            }
            set {
                this.responseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public ResponseStatusTransfer ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CustomResponseRef {
            get {
                return this.customResponseRefField;
            }
            set {
                this.customResponseRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> PercentageComplete {
            get {
                return this.percentageCompleteField;
            }
            set {
                this.percentageCompleteField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BaselineDueDate {
            get {
                return this.baselineDueDateField;
            }
            set {
                this.baselineDueDateField = value;
            }
        }
        
        /// <remarks/>
        public string LinkedActivityID {
            get {
                return this.linkedActivityIDField;
            }
            set {
                this.linkedActivityIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BackOnTrackDate {
            get {
                return this.backOnTrackDateField;
            }
            set {
                this.backOnTrackDateField = value;
            }
        }
        
        /// <remarks/>
        public string PPProjectID {
            get {
                return this.pPProjectIDField;
            }
            set {
                this.pPProjectIDField = value;
            }
        }
        
        /// <remarks/>
        public int CompletionAuditID {
            get {
                return this.completionAuditIDField;
            }
            set {
                this.completionAuditIDField = value;
            }
        }
        
        /// <remarks/>
        public ImpactCategoryScoreTransfer[] ImpactCategoryScores {
            get {
                return this.impactCategoryScoresField;
            }
            set {
                this.impactCategoryScoresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactCategoryScoreTransfer {
        
        private System.Nullable<int> categoryIdField;
        
        private string categoryDescriptionField;
        
        private System.Nullable<double> scoreField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryDescription {
            get {
                return this.categoryDescriptionField;
            }
            set {
                this.categoryDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class WaterfallHistoryEntryTransfer {
        
        private int historyIdField;
        
        private System.DateTime effectiveDateField;
        
        private double effectiveScoreField;
        
        private string historyCommentsField;
        
        private string functionDescriptionField;
        
        private ImpactCategoryScoreTransfer[] impactCategoryScoresField;
        
        /// <remarks/>
        public int HistoryId {
            get {
                return this.historyIdField;
            }
            set {
                this.historyIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        public double EffectiveScore {
            get {
                return this.effectiveScoreField;
            }
            set {
                this.effectiveScoreField = value;
            }
        }
        
        /// <remarks/>
        public string HistoryComments {
            get {
                return this.historyCommentsField;
            }
            set {
                this.historyCommentsField = value;
            }
        }
        
        /// <remarks/>
        public string FunctionDescription {
            get {
                return this.functionDescriptionField;
            }
            set {
                this.functionDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public ImpactCategoryScoreTransfer[] ImpactCategoryScores {
            get {
                return this.impactCategoryScoresField;
            }
            set {
                this.impactCategoryScoresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class WaterfallDataTransfer {
        
        private double targetRiskLevelField;
        
        private System.Nullable<System.DateTime> targetResolutionDateField;
        
        private int planIDField;
        
        private string planNameField;
        
        private string riskOwnerNameField;
        
        private System.Nullable<System.DateTime> planStartDateField;
        
        private System.Nullable<System.DateTime> planCompletionDateField;
        
        private bool showColoursField;
        
        private double currentRiskLevelField;
        
        private WaterfallHistoryEntryTransfer[] actualHistoryField;
        
        private PlannedRiskLevelTransfer[] plannedLevelsField;
        
        /// <remarks/>
        public double TargetRiskLevel {
            get {
                return this.targetRiskLevelField;
            }
            set {
                this.targetRiskLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TargetResolutionDate {
            get {
                return this.targetResolutionDateField;
            }
            set {
                this.targetResolutionDateField = value;
            }
        }
        
        /// <remarks/>
        public int PlanID {
            get {
                return this.planIDField;
            }
            set {
                this.planIDField = value;
            }
        }
        
        /// <remarks/>
        public string PlanName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
            }
        }
        
        /// <remarks/>
        public string RiskOwnerName {
            get {
                return this.riskOwnerNameField;
            }
            set {
                this.riskOwnerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PlanStartDate {
            get {
                return this.planStartDateField;
            }
            set {
                this.planStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PlanCompletionDate {
            get {
                return this.planCompletionDateField;
            }
            set {
                this.planCompletionDateField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowColours {
            get {
                return this.showColoursField;
            }
            set {
                this.showColoursField = value;
            }
        }
        
        /// <remarks/>
        public double CurrentRiskLevel {
            get {
                return this.currentRiskLevelField;
            }
            set {
                this.currentRiskLevelField = value;
            }
        }
        
        /// <remarks/>
        public WaterfallHistoryEntryTransfer[] ActualHistory {
            get {
                return this.actualHistoryField;
            }
            set {
                this.actualHistoryField = value;
            }
        }
        
        /// <remarks/>
        public PlannedRiskLevelTransfer[] PlannedLevels {
            get {
                return this.plannedLevelsField;
            }
            set {
                this.plannedLevelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class PIDPointsTransfer {
        
        private System.Nullable<double> currentProbabilityIndexField;
        
        private System.Nullable<double> currentScoreIndexField;
        
        private System.Nullable<double> targetProbabilityIndexField;
        
        private System.Nullable<double> targetScoreIndexField;
        
        private ShowScoreBandType showScoreBandTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> CurrentProbabilityIndex {
            get {
                return this.currentProbabilityIndexField;
            }
            set {
                this.currentProbabilityIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> CurrentScoreIndex {
            get {
                return this.currentScoreIndexField;
            }
            set {
                this.currentScoreIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TargetProbabilityIndex {
            get {
                return this.targetProbabilityIndexField;
            }
            set {
                this.targetProbabilityIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TargetScoreIndex {
            get {
                return this.targetScoreIndexField;
            }
            set {
                this.targetScoreIndexField = value;
            }
        }
        
        /// <remarks/>
        public ShowScoreBandType ShowScoreBandType {
            get {
                return this.showScoreBandTypeField;
            }
            set {
                this.showScoreBandTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum ShowScoreBandType {
        
        /// <remarks/>
        Both,
        
        /// <remarks/>
        Threat,
        
        /// <remarks/>
        Opportunity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ItemTransfer {
        
        private int idField;
        
        private string nameField;
        
        private short accessRightField;
        
        private int configurationSetIDField;
        
        private string descriptionField;
        
        private int scoringSchemeGroupIDField;
        
        private short itemTypeField;
        
        private int managerIDField;
        
        private int classificationIDField;
        
        private int caveatIDField;
        
        private string commentsField;
        
        private int[] metaDataItemIdsField;
        
        private int currencyIdField;
        
        private int packageIDField;
        
        private int nodeStatusField;
        
        private int calendarIdField;
        
        private string customProjectTextFieldField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public short AccessRight {
            get {
                return this.accessRightField;
            }
            set {
                this.accessRightField = value;
            }
        }
        
        /// <remarks/>
        public int ConfigurationSetID {
            get {
                return this.configurationSetIDField;
            }
            set {
                this.configurationSetIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeGroupID {
            get {
                return this.scoringSchemeGroupIDField;
            }
            set {
                this.scoringSchemeGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public short ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ManagerID {
            get {
                return this.managerIDField;
            }
            set {
                this.managerIDField = value;
            }
        }
        
        /// <remarks/>
        public int ClassificationID {
            get {
                return this.classificationIDField;
            }
            set {
                this.classificationIDField = value;
            }
        }
        
        /// <remarks/>
        public int CaveatID {
            get {
                return this.caveatIDField;
            }
            set {
                this.caveatIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int[] MetaDataItemIds {
            get {
                return this.metaDataItemIdsField;
            }
            set {
                this.metaDataItemIdsField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
        
        /// <remarks/>
        public int PackageID {
            get {
                return this.packageIDField;
            }
            set {
                this.packageIDField = value;
            }
        }
        
        /// <remarks/>
        public int NodeStatus {
            get {
                return this.nodeStatusField;
            }
            set {
                this.nodeStatusField = value;
            }
        }
        
        /// <remarks/>
        public int CalendarId {
            get {
                return this.calendarIdField;
            }
            set {
                this.calendarIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomProjectTextField {
            get {
                return this.customProjectTextFieldField;
            }
            set {
                this.customProjectTextFieldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class DocumentDTO {
        
        private int keyField;
        
        private string nameField;
        
        private string locationField;
        
        private int documentTypeField;
        
        private System.Nullable<System.DateTime> uploadedDateField;
        
        private string formattedUploadedDateField;
        
        private string uploadedByField;
        
        private long documentSizeField;
        
        private string formattedDocumentSizeField;
        
        private int itemLinkCountField;
        
        /// <remarks/>
        public int Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UploadedDate {
            get {
                return this.uploadedDateField;
            }
            set {
                this.uploadedDateField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedUploadedDate {
            get {
                return this.formattedUploadedDateField;
            }
            set {
                this.formattedUploadedDateField = value;
            }
        }
        
        /// <remarks/>
        public string UploadedBy {
            get {
                return this.uploadedByField;
            }
            set {
                this.uploadedByField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentSize {
            get {
                return this.documentSizeField;
            }
            set {
                this.documentSizeField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedDocumentSize {
            get {
                return this.formattedDocumentSizeField;
            }
            set {
                this.formattedDocumentSizeField = value;
            }
        }
        
        /// <remarks/>
        public int ItemLinkCount {
            get {
                return this.itemLinkCountField;
            }
            set {
                this.itemLinkCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseLikelihoodOfFailureAnswerTransfer {
        
        private int questionIdField;
        
        private int businessAreaIdField;
        
        private int actionIdField;
        
        private int answerIdField;
        
        /// <remarks/>
        public int QuestionId {
            get {
                return this.questionIdField;
            }
            set {
                this.questionIdField = value;
            }
        }
        
        /// <remarks/>
        public int BusinessAreaId {
            get {
                return this.businessAreaIdField;
            }
            set {
                this.businessAreaIdField = value;
            }
        }
        
        /// <remarks/>
        public int ActionId {
            get {
                return this.actionIdField;
            }
            set {
                this.actionIdField = value;
            }
        }
        
        /// <remarks/>
        public int AnswerId {
            get {
                return this.answerIdField;
            }
            set {
                this.answerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ResponseTransfer {
        
        private int idField;
        
        private string activityNameField;
        
        private System.Nullable<System.DateTime> backOnTrackDateField;
        
        private System.Nullable<System.DateTime> baselineDueDateField;
        
        private string commentsField;
        
        private int completionAuditIDField;
        
        private System.Nullable<System.DateTime> completionDateField;
        
        private double costField;
        
        private string customField1Field;
        
        private string customField2Field;
        
        private string customField3Field;
        
        private string customField4Field;
        
        private string customResponseRefField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> dueDateField;
        
        private System.Nullable<System.DateTime> reviewDateField;
        
        private int effectivenessIdField;
        
        private string nameField;
        
        private int ownerIdField;
        
        private int reviewerIdField;
        
        private System.Nullable<decimal> percentageCompleteField;
        
        private int priorityIdField;
        
        private string projectNameField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private int statusIdField;
        
        private ResponseType typeField;
        
        private int versionNumberField;
        
        private bool fundedFromReserveField;
        
        private System.Nullable<decimal> actualCostField;
        
        private System.Nullable<decimal> costThreatField;
        
        private System.Nullable<decimal> expectedCostField;
        
        private System.Nullable<double> targetRiskLevelField;
        
        private string targetRiskLevelDescField;
        
        private int testFrequencyIdField;
        
        private int designEffectivenessIdField;
        
        private int controlClassificationIdField;
        
        private int controlTypeIdField;
        
        private int controlAssertionIdField;
        
        private int controlConditionIdField;
        
        private bool hasLinkedDocumentsField;
        
        private string linkedActivityIdField;
        
        private System.Nullable<double> achievedScoreField;
        
        private bool isLinkedToMoreThanOnePlanField;
        
        private int[] evaluationIdsField;
        
        private int currencyIdField;
        
        private int[] affectedSystemsIdsField;
        
        private int[] customDropDown1IdsField;
        
        private int[] stakeholderIdsField;
        
        private int[] responseReliantSystemsIdsField;
        
        private string likelihoodOfFailureNoteField;
        
        private System.Nullable<System.DateTime> lastUpdateOfLikelihoodOfFailureField;
        
        private string applicableSpreadsheetsField;
        
        private string customField5Field;
        
        private string customField6Field;
        
        private int nativeProcessIdField;
        
        private int responseLikelihoodOfFailureIdField;
        
        private ResponseLikelihoodOfFailureAnswerTransfer[] responseLikelihoodOfFailureAnswerField;
        
        private string owningItemField;
        
        private bool hasOwningPlanField;
        
        private int incidentResponseCustomList1IdField;
        
        private DocumentDTO[] linkedDocumentsField;
        
        private int[] deficiencyIdsField;
        
        private System.Nullable<System.DateTime> lastUpdatedField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityName {
            get {
                return this.activityNameField;
            }
            set {
                this.activityNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BackOnTrackDate {
            get {
                return this.backOnTrackDateField;
            }
            set {
                this.backOnTrackDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BaselineDueDate {
            get {
                return this.baselineDueDateField;
            }
            set {
                this.baselineDueDateField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int CompletionAuditID {
            get {
                return this.completionAuditIDField;
            }
            set {
                this.completionAuditIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CompletionDate {
            get {
                return this.completionDateField;
            }
            set {
                this.completionDateField = value;
            }
        }
        
        /// <remarks/>
        public double Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public string CustomField1 {
            get {
                return this.customField1Field;
            }
            set {
                this.customField1Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField2 {
            get {
                return this.customField2Field;
            }
            set {
                this.customField2Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField3 {
            get {
                return this.customField3Field;
            }
            set {
                this.customField3Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField4 {
            get {
                return this.customField4Field;
            }
            set {
                this.customField4Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomResponseRef {
            get {
                return this.customResponseRefField;
            }
            set {
                this.customResponseRefField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReviewDate {
            get {
                return this.reviewDateField;
            }
            set {
                this.reviewDateField = value;
            }
        }
        
        /// <remarks/>
        public int EffectivenessId {
            get {
                return this.effectivenessIdField;
            }
            set {
                this.effectivenessIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReviewerId {
            get {
                return this.reviewerIdField;
            }
            set {
                this.reviewerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> PercentageComplete {
            get {
                return this.percentageCompleteField;
            }
            set {
                this.percentageCompleteField = value;
            }
        }
        
        /// <remarks/>
        public int PriorityId {
            get {
                return this.priorityIdField;
            }
            set {
                this.priorityIdField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public int StatusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
            }
        }
        
        /// <remarks/>
        public ResponseType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool FundedFromReserve {
            get {
                return this.fundedFromReserveField;
            }
            set {
                this.fundedFromReserveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ActualCost {
            get {
                return this.actualCostField;
            }
            set {
                this.actualCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> CostThreat {
            get {
                return this.costThreatField;
            }
            set {
                this.costThreatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ExpectedCost {
            get {
                return this.expectedCostField;
            }
            set {
                this.expectedCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TargetRiskLevel {
            get {
                return this.targetRiskLevelField;
            }
            set {
                this.targetRiskLevelField = value;
            }
        }
        
        /// <remarks/>
        public string TargetRiskLevelDesc {
            get {
                return this.targetRiskLevelDescField;
            }
            set {
                this.targetRiskLevelDescField = value;
            }
        }
        
        /// <remarks/>
        public int TestFrequencyId {
            get {
                return this.testFrequencyIdField;
            }
            set {
                this.testFrequencyIdField = value;
            }
        }
        
        /// <remarks/>
        public int DesignEffectivenessId {
            get {
                return this.designEffectivenessIdField;
            }
            set {
                this.designEffectivenessIdField = value;
            }
        }
        
        /// <remarks/>
        public int ControlClassificationId {
            get {
                return this.controlClassificationIdField;
            }
            set {
                this.controlClassificationIdField = value;
            }
        }
        
        /// <remarks/>
        public int ControlTypeId {
            get {
                return this.controlTypeIdField;
            }
            set {
                this.controlTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int ControlAssertionId {
            get {
                return this.controlAssertionIdField;
            }
            set {
                this.controlAssertionIdField = value;
            }
        }
        
        /// <remarks/>
        public int ControlConditionId {
            get {
                return this.controlConditionIdField;
            }
            set {
                this.controlConditionIdField = value;
            }
        }
        
        /// <remarks/>
        public bool HasLinkedDocuments {
            get {
                return this.hasLinkedDocumentsField;
            }
            set {
                this.hasLinkedDocumentsField = value;
            }
        }
        
        /// <remarks/>
        public string LinkedActivityId {
            get {
                return this.linkedActivityIdField;
            }
            set {
                this.linkedActivityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> AchievedScore {
            get {
                return this.achievedScoreField;
            }
            set {
                this.achievedScoreField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLinkedToMoreThanOnePlan {
            get {
                return this.isLinkedToMoreThanOnePlanField;
            }
            set {
                this.isLinkedToMoreThanOnePlanField = value;
            }
        }
        
        /// <remarks/>
        public int[] EvaluationIds {
            get {
                return this.evaluationIdsField;
            }
            set {
                this.evaluationIdsField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
        
        /// <remarks/>
        public int[] AffectedSystemsIds {
            get {
                return this.affectedSystemsIdsField;
            }
            set {
                this.affectedSystemsIdsField = value;
            }
        }
        
        /// <remarks/>
        public int[] CustomDropDown1Ids {
            get {
                return this.customDropDown1IdsField;
            }
            set {
                this.customDropDown1IdsField = value;
            }
        }
        
        /// <remarks/>
        public int[] StakeholderIds {
            get {
                return this.stakeholderIdsField;
            }
            set {
                this.stakeholderIdsField = value;
            }
        }
        
        /// <remarks/>
        public int[] ResponseReliantSystemsIds {
            get {
                return this.responseReliantSystemsIdsField;
            }
            set {
                this.responseReliantSystemsIdsField = value;
            }
        }
        
        /// <remarks/>
        public string LikelihoodOfFailureNote {
            get {
                return this.likelihoodOfFailureNoteField;
            }
            set {
                this.likelihoodOfFailureNoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdateOfLikelihoodOfFailure {
            get {
                return this.lastUpdateOfLikelihoodOfFailureField;
            }
            set {
                this.lastUpdateOfLikelihoodOfFailureField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicableSpreadsheets {
            get {
                return this.applicableSpreadsheetsField;
            }
            set {
                this.applicableSpreadsheetsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomField5 {
            get {
                return this.customField5Field;
            }
            set {
                this.customField5Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomField6 {
            get {
                return this.customField6Field;
            }
            set {
                this.customField6Field = value;
            }
        }
        
        /// <remarks/>
        public int NativeProcessId {
            get {
                return this.nativeProcessIdField;
            }
            set {
                this.nativeProcessIdField = value;
            }
        }
        
        /// <remarks/>
        public int ResponseLikelihoodOfFailureId {
            get {
                return this.responseLikelihoodOfFailureIdField;
            }
            set {
                this.responseLikelihoodOfFailureIdField = value;
            }
        }
        
        /// <remarks/>
        public ResponseLikelihoodOfFailureAnswerTransfer[] ResponseLikelihoodOfFailureAnswer {
            get {
                return this.responseLikelihoodOfFailureAnswerField;
            }
            set {
                this.responseLikelihoodOfFailureAnswerField = value;
            }
        }
        
        /// <remarks/>
        public string OwningItem {
            get {
                return this.owningItemField;
            }
            set {
                this.owningItemField = value;
            }
        }
        
        /// <remarks/>
        public bool HasOwningPlan {
            get {
                return this.hasOwningPlanField;
            }
            set {
                this.hasOwningPlanField = value;
            }
        }
        
        /// <remarks/>
        public int IncidentResponseCustomList1Id {
            get {
                return this.incidentResponseCustomList1IdField;
            }
            set {
                this.incidentResponseCustomList1IdField = value;
            }
        }
        
        /// <remarks/>
        public DocumentDTO[] LinkedDocuments {
            get {
                return this.linkedDocumentsField;
            }
            set {
                this.linkedDocumentsField = value;
            }
        }
        
        /// <remarks/>
        public int[] DeficiencyIds {
            get {
                return this.deficiencyIdsField;
            }
            set {
                this.deficiencyIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum ResponseType {
        
        /// <remarks/>
        Action,
        
        /// <remarks/>
        Control,
        
        /// <remarks/>
        Fallback,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class PlanTransfer {
        
        private int idField;
        
        private System.Nullable<System.DateTime> approvalDateField;
        
        private System.Nullable<System.DateTime> completionDateField;
        
        private System.Nullable<System.DateTime> lastUpdatedField;
        
        private double costField;
        
        private double actualCostField;
        
        private string customPlanRefField;
        
        private string fallbackPlanDescriptionField;
        
        private string highLevelDescriptionField;
        
        private string nameField;
        
        private int ownerIdField;
        
        private int[] responseIdsField;
        
        private int strategyIdField;
        
        private int planEffectivenessIdField;
        
        private int versionNumberField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApprovalDate {
            get {
                return this.approvalDateField;
            }
            set {
                this.approvalDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CompletionDate {
            get {
                return this.completionDateField;
            }
            set {
                this.completionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public double Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public double ActualCost {
            get {
                return this.actualCostField;
            }
            set {
                this.actualCostField = value;
            }
        }
        
        /// <remarks/>
        public string CustomPlanRef {
            get {
                return this.customPlanRefField;
            }
            set {
                this.customPlanRefField = value;
            }
        }
        
        /// <remarks/>
        public string FallbackPlanDescription {
            get {
                return this.fallbackPlanDescriptionField;
            }
            set {
                this.fallbackPlanDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string HighLevelDescription {
            get {
                return this.highLevelDescriptionField;
            }
            set {
                this.highLevelDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public int[] ResponseIds {
            get {
                return this.responseIdsField;
            }
            set {
                this.responseIdsField = value;
            }
        }
        
        /// <remarks/>
        public int StrategyId {
            get {
                return this.strategyIdField;
            }
            set {
                this.strategyIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlanEffectivenessId {
            get {
                return this.planEffectivenessIdField;
            }
            set {
                this.planEffectivenessIdField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class RiskTransfer {
        
        private int[] businessImpactAreaIdsField;
        
        private int[] projectStageIdsField;
        
        private int[] categoryIdsField;
        
        private string customRiskRefField;
        
        private int[] interestedPartyIdsField;
        
        private string nameField;
        
        private int ownerIdField;
        
        private int phaseIdField;
        
        private int raisedByIdField;
        
        private int reviewedByIdField;
        
        private int riskTypeIdField;
        
        private int sourceIdField;
        
        private int statusIdField;
        
        private int idField;
        
        private string titleField;
        
        private System.Nullable<System.DateTime> approvalDateField;
        
        private System.Nullable<System.DateTime> assessmentDateField;
        
        private string backgroundField;
        
        private string causeField;
        
        private string commentsField;
        
        private double costField;
        
        private string descriptionField;
        
        private string effectField;
        
        private System.Nullable<System.DateTime> initiationDateField;
        
        private System.Nullable<System.DateTime> lastReviewDateField;
        
        private string lastReviewNoteField;
        
        private bool securityEnabledField;
        
        private int versionNumberField;
        
        private System.Nullable<double> actualCostField;
        
        private int feedbackByIdField;
        
        private System.Nullable<System.DateTime> lastFeedbackDateField;
        
        private string lastFeedbackCommentField;
        
        private string externalIdField;
        
        private string externalApplicationField;
        
        private string owningItemField;
        
        private string notesField;
        
        private string riskCustomText1Field;
        
        private string riskCustomText2Field;
        
        private string riskCustomText3Field;
        
        private string riskCustomText4Field;
        
        private System.Nullable<System.DateTime> riskCustomDate1Field;
        
        private System.Nullable<System.DateTime> riskCustomDate2Field;
        
        private System.Nullable<System.DateTime> riskCustomDate3Field;
        
        private System.Nullable<System.DateTime> riskCustomDate4Field;
        
        private int riskCustomResource1IdField;
        
        private int riskCustomResource2IdField;
        
        private int riskCustomResource3IdField;
        
        private int riskCustomResource4IdField;
        
        private int riskCustomList1IdField;
        
        private int riskCustomList2IdField;
        
        private int riskCustomList3IdField;
        
        private int[] riskCustomMultiList1IdField;
        
        private System.Nullable<System.DateTime> lastUpdatedField;
        
        private System.Nullable<System.DateTime> lastImportedField;
        
        /// <remarks/>
        public int[] BusinessImpactAreaIds {
            get {
                return this.businessImpactAreaIdsField;
            }
            set {
                this.businessImpactAreaIdsField = value;
            }
        }
        
        /// <remarks/>
        public int[] ProjectStageIds {
            get {
                return this.projectStageIdsField;
            }
            set {
                this.projectStageIdsField = value;
            }
        }
        
        /// <remarks/>
        public int[] CategoryIds {
            get {
                return this.categoryIdsField;
            }
            set {
                this.categoryIdsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomRiskRef {
            get {
                return this.customRiskRefField;
            }
            set {
                this.customRiskRefField = value;
            }
        }
        
        /// <remarks/>
        public int[] InterestedPartyIds {
            get {
                return this.interestedPartyIdsField;
            }
            set {
                this.interestedPartyIdsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public int PhaseId {
            get {
                return this.phaseIdField;
            }
            set {
                this.phaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int RaisedById {
            get {
                return this.raisedByIdField;
            }
            set {
                this.raisedByIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReviewedById {
            get {
                return this.reviewedByIdField;
            }
            set {
                this.reviewedByIdField = value;
            }
        }
        
        /// <remarks/>
        public int RiskTypeId {
            get {
                return this.riskTypeIdField;
            }
            set {
                this.riskTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int SourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        public int StatusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApprovalDate {
            get {
                return this.approvalDateField;
            }
            set {
                this.approvalDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AssessmentDate {
            get {
                return this.assessmentDateField;
            }
            set {
                this.assessmentDateField = value;
            }
        }
        
        /// <remarks/>
        public string Background {
            get {
                return this.backgroundField;
            }
            set {
                this.backgroundField = value;
            }
        }
        
        /// <remarks/>
        public string Cause {
            get {
                return this.causeField;
            }
            set {
                this.causeField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public double Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Effect {
            get {
                return this.effectField;
            }
            set {
                this.effectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InitiationDate {
            get {
                return this.initiationDateField;
            }
            set {
                this.initiationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastReviewDate {
            get {
                return this.lastReviewDateField;
            }
            set {
                this.lastReviewDateField = value;
            }
        }
        
        /// <remarks/>
        public string LastReviewNote {
            get {
                return this.lastReviewNoteField;
            }
            set {
                this.lastReviewNoteField = value;
            }
        }
        
        /// <remarks/>
        public bool SecurityEnabled {
            get {
                return this.securityEnabledField;
            }
            set {
                this.securityEnabledField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ActualCost {
            get {
                return this.actualCostField;
            }
            set {
                this.actualCostField = value;
            }
        }
        
        /// <remarks/>
        public int FeedbackById {
            get {
                return this.feedbackByIdField;
            }
            set {
                this.feedbackByIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastFeedbackDate {
            get {
                return this.lastFeedbackDateField;
            }
            set {
                this.lastFeedbackDateField = value;
            }
        }
        
        /// <remarks/>
        public string LastFeedbackComment {
            get {
                return this.lastFeedbackCommentField;
            }
            set {
                this.lastFeedbackCommentField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalApplication {
            get {
                return this.externalApplicationField;
            }
            set {
                this.externalApplicationField = value;
            }
        }
        
        /// <remarks/>
        public string OwningItem {
            get {
                return this.owningItemField;
            }
            set {
                this.owningItemField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string RiskCustomText1 {
            get {
                return this.riskCustomText1Field;
            }
            set {
                this.riskCustomText1Field = value;
            }
        }
        
        /// <remarks/>
        public string RiskCustomText2 {
            get {
                return this.riskCustomText2Field;
            }
            set {
                this.riskCustomText2Field = value;
            }
        }
        
        /// <remarks/>
        public string RiskCustomText3 {
            get {
                return this.riskCustomText3Field;
            }
            set {
                this.riskCustomText3Field = value;
            }
        }
        
        /// <remarks/>
        public string RiskCustomText4 {
            get {
                return this.riskCustomText4Field;
            }
            set {
                this.riskCustomText4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RiskCustomDate1 {
            get {
                return this.riskCustomDate1Field;
            }
            set {
                this.riskCustomDate1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RiskCustomDate2 {
            get {
                return this.riskCustomDate2Field;
            }
            set {
                this.riskCustomDate2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RiskCustomDate3 {
            get {
                return this.riskCustomDate3Field;
            }
            set {
                this.riskCustomDate3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RiskCustomDate4 {
            get {
                return this.riskCustomDate4Field;
            }
            set {
                this.riskCustomDate4Field = value;
            }
        }
        
        /// <remarks/>
        public int RiskCustomResource1Id {
            get {
                return this.riskCustomResource1IdField;
            }
            set {
                this.riskCustomResource1IdField = value;
            }
        }
        
        /// <remarks/>
        public int RiskCustomResource2Id {
            get {
                return this.riskCustomResource2IdField;
            }
            set {
                this.riskCustomResource2IdField = value;
            }
        }
        
        /// <remarks/>
        public int RiskCustomResource3Id {
            get {
                return this.riskCustomResource3IdField;
            }
            set {
                this.riskCustomResource3IdField = value;
            }
        }
        
        /// <remarks/>
        public int RiskCustomResource4Id {
            get {
                return this.riskCustomResource4IdField;
            }
            set {
                this.riskCustomResource4IdField = value;
            }
        }
        
        /// <remarks/>
        public int RiskCustomList1Id {
            get {
                return this.riskCustomList1IdField;
            }
            set {
                this.riskCustomList1IdField = value;
            }
        }
        
        /// <remarks/>
        public int RiskCustomList2Id {
            get {
                return this.riskCustomList2IdField;
            }
            set {
                this.riskCustomList2IdField = value;
            }
        }
        
        /// <remarks/>
        public int RiskCustomList3Id {
            get {
                return this.riskCustomList3IdField;
            }
            set {
                this.riskCustomList3IdField = value;
            }
        }
        
        /// <remarks/>
        public int[] RiskCustomMultiList1Id {
            get {
                return this.riskCustomMultiList1IdField;
            }
            set {
                this.riskCustomMultiList1IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastImported {
            get {
                return this.lastImportedField;
            }
            set {
                this.lastImportedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class WeightTypeTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class AssociationTransfer {
        
        private int impactIDField;
        
        private int itemIDField;
        
        private System.DateTime createdField;
        
        private short treeTypeField;
        
        private string itemNameField;
        
        private string fullyQualifiedItemNameField;
        
        /// <remarks/>
        public int ImpactID {
            get {
                return this.impactIDField;
            }
            set {
                this.impactIDField = value;
            }
        }
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public short TreeType {
            get {
                return this.treeTypeField;
            }
            set {
                this.treeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public string FullyQualifiedItemName {
            get {
                return this.fullyQualifiedItemNameField;
            }
            set {
                this.fullyQualifiedItemNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class WeightBandTransfer {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ProbabilityValueTransfer {
        
        private double probabilityField;
        
        private int scoreBandIdField;
        
        private int pidIdField;
        
        private AssessmentMode assessmentModeField;
        
        /// <remarks/>
        public double Probability {
            get {
                return this.probabilityField;
            }
            set {
                this.probabilityField = value;
            }
        }
        
        /// <remarks/>
        public int ScoreBandId {
            get {
                return this.scoreBandIdField;
            }
            set {
                this.scoreBandIdField = value;
            }
        }
        
        /// <remarks/>
        public int PidId {
            get {
                return this.pidIdField;
            }
            set {
                this.pidIdField = value;
            }
        }
        
        /// <remarks/>
        public AssessmentMode AssessmentMode {
            get {
                return this.assessmentModeField;
            }
            set {
                this.assessmentModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum AssessmentMode {
        
        /// <remarks/>
        Quantitative,
        
        /// <remarks/>
        Qualitative,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactCategoryValueTransfer {
        
        private double expectedValueField;
        
        private double maximumValueField;
        
        private double minimumValueField;
        
        private int scoreBandIdField;
        
        private int pidIdField;
        
        private int impactCategoryIdField;
        
        private AssessmentMode assessmentModeField;
        
        private int currencyIdField;
        
        private bool isCostCategoryField;
        
        private bool aggregateField;
        
        private bool mandatoryField;
        
        private bool filledInField;
        
        /// <remarks/>
        public double ExpectedValue {
            get {
                return this.expectedValueField;
            }
            set {
                this.expectedValueField = value;
            }
        }
        
        /// <remarks/>
        public double MaximumValue {
            get {
                return this.maximumValueField;
            }
            set {
                this.maximumValueField = value;
            }
        }
        
        /// <remarks/>
        public double MinimumValue {
            get {
                return this.minimumValueField;
            }
            set {
                this.minimumValueField = value;
            }
        }
        
        /// <remarks/>
        public int ScoreBandId {
            get {
                return this.scoreBandIdField;
            }
            set {
                this.scoreBandIdField = value;
            }
        }
        
        /// <remarks/>
        public int PidId {
            get {
                return this.pidIdField;
            }
            set {
                this.pidIdField = value;
            }
        }
        
        /// <remarks/>
        public int ImpactCategoryId {
            get {
                return this.impactCategoryIdField;
            }
            set {
                this.impactCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public AssessmentMode AssessmentMode {
            get {
                return this.assessmentModeField;
            }
            set {
                this.assessmentModeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrencyId {
            get {
                return this.currencyIdField;
            }
            set {
                this.currencyIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCostCategory {
            get {
                return this.isCostCategoryField;
            }
            set {
                this.isCostCategoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Aggregate {
            get {
                return this.aggregateField;
            }
            set {
                this.aggregateField = value;
            }
        }
        
        /// <remarks/>
        public bool Mandatory {
            get {
                return this.mandatoryField;
            }
            set {
                this.mandatoryField = value;
            }
        }
        
        /// <remarks/>
        public bool FilledIn {
            get {
                return this.filledInField;
            }
            set {
                this.filledInField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class AssessmentTransfer {
        
        private AssessmentType assessmentTypeField;
        
        private int distributionIdField;
        
        private Exposure exposureField;
        
        private int idField;
        
        private ImpactCategoryValueTransfer[] impactCategoryValuesField;
        
        private float occurrenceField;
        
        private ProbabilityValueTransfer probabilityField;
        
        private RiskLevelTransfer riskLevelField;
        
        private int scoringSchemeIdField;
        
        private int yearsField;
        
        private bool isAssessedField;
        
        private double meanCostValueField;
        
        private double costCVField;
        
        private double expectedMonetaryValueField;
        
        private bool aggregateCostsField;
        
        private WeightBandTransfer weightBandField;
        
        private decimal weightedScoreField;
        
        private string drivingImpactCategoryField;
        
        private string drivingImpactLevelField;
        
        /// <remarks/>
        public AssessmentType AssessmentType {
            get {
                return this.assessmentTypeField;
            }
            set {
                this.assessmentTypeField = value;
            }
        }
        
        /// <remarks/>
        public int DistributionId {
            get {
                return this.distributionIdField;
            }
            set {
                this.distributionIdField = value;
            }
        }
        
        /// <remarks/>
        public Exposure Exposure {
            get {
                return this.exposureField;
            }
            set {
                this.exposureField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public ImpactCategoryValueTransfer[] ImpactCategoryValues {
            get {
                return this.impactCategoryValuesField;
            }
            set {
                this.impactCategoryValuesField = value;
            }
        }
        
        /// <remarks/>
        public float Occurrence {
            get {
                return this.occurrenceField;
            }
            set {
                this.occurrenceField = value;
            }
        }
        
        /// <remarks/>
        public ProbabilityValueTransfer Probability {
            get {
                return this.probabilityField;
            }
            set {
                this.probabilityField = value;
            }
        }
        
        /// <remarks/>
        public RiskLevelTransfer RiskLevel {
            get {
                return this.riskLevelField;
            }
            set {
                this.riskLevelField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeId {
            get {
                return this.scoringSchemeIdField;
            }
            set {
                this.scoringSchemeIdField = value;
            }
        }
        
        /// <remarks/>
        public int Years {
            get {
                return this.yearsField;
            }
            set {
                this.yearsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAssessed {
            get {
                return this.isAssessedField;
            }
            set {
                this.isAssessedField = value;
            }
        }
        
        /// <remarks/>
        public double MeanCostValue {
            get {
                return this.meanCostValueField;
            }
            set {
                this.meanCostValueField = value;
            }
        }
        
        /// <remarks/>
        public double CostCV {
            get {
                return this.costCVField;
            }
            set {
                this.costCVField = value;
            }
        }
        
        /// <remarks/>
        public double ExpectedMonetaryValue {
            get {
                return this.expectedMonetaryValueField;
            }
            set {
                this.expectedMonetaryValueField = value;
            }
        }
        
        /// <remarks/>
        public bool AggregateCosts {
            get {
                return this.aggregateCostsField;
            }
            set {
                this.aggregateCostsField = value;
            }
        }
        
        /// <remarks/>
        public WeightBandTransfer WeightBand {
            get {
                return this.weightBandField;
            }
            set {
                this.weightBandField = value;
            }
        }
        
        /// <remarks/>
        public decimal WeightedScore {
            get {
                return this.weightedScoreField;
            }
            set {
                this.weightedScoreField = value;
            }
        }
        
        /// <remarks/>
        public string DrivingImpactCategory {
            get {
                return this.drivingImpactCategoryField;
            }
            set {
                this.drivingImpactCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string DrivingImpactLevel {
            get {
                return this.drivingImpactLevelField;
            }
            set {
                this.drivingImpactLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum AssessmentType {
        
        /// <remarks/>
        Inherent,
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Alternative,
        
        /// <remarks/>
        Target,
        
        /// <remarks/>
        Response,
        
        /// <remarks/>
        Baseline,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum Exposure {
        
        /// <remarks/>
        NotSet,
        
        /// <remarks/>
        Threat,
        
        /// <remarks/>
        Opportunity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class ImpactTransfer {
        
        private int planIdField;
        
        private AssessmentTransfer inherentAssessmentField;
        
        private AssessmentTransfer currentAssessmentField;
        
        private AssessmentTransfer targetAssessmentField;
        
        private int impactGroupIdField;
        
        private int scoringSchemeIdField;
        
        private int itemIdField;
        
        private short itemAccessRightField;
        
        private int riskIdField;
        
        private string blackFlagCommentsField;
        
        private int blackFlagTypeIdField;
        
        private CriteriaType criteriaTypeField;
        
        private string descriptionField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private int idField;
        
        private double roiField;
        
        private System.Nullable<System.DateTime> targetResolutionDateField;
        
        private System.Nullable<System.DateTime> triggerDateField;
        
        private int[] impactCategoryIdsField;
        
        private int versionNumberField;
        
        private int[] metaDataItemIdsField;
        
        private System.Nullable<System.DateTime> dateImpactedField;
        
        private System.Nullable<double> actualCostField;
        
        private bool isOwningNodeField;
        
        private bool aggregateCostsField;
        
        private AssociationTransfer[] associationsField;
        
        private string impactCustomText1Field;
        
        private string impactCustomText2Field;
        
        private int impactCustomList1IdField;
        
        private int impactCustomList2IdField;
        
        private System.Nullable<System.DateTime> impactCustomDate1Field;
        
        private System.Nullable<System.DateTime> lastUpdatedField;
        
        private WeightTypeTransfer weightTypeField;
        
        /// <remarks/>
        public int PlanId {
            get {
                return this.planIdField;
            }
            set {
                this.planIdField = value;
            }
        }
        
        /// <remarks/>
        public AssessmentTransfer InherentAssessment {
            get {
                return this.inherentAssessmentField;
            }
            set {
                this.inherentAssessmentField = value;
            }
        }
        
        /// <remarks/>
        public AssessmentTransfer CurrentAssessment {
            get {
                return this.currentAssessmentField;
            }
            set {
                this.currentAssessmentField = value;
            }
        }
        
        /// <remarks/>
        public AssessmentTransfer TargetAssessment {
            get {
                return this.targetAssessmentField;
            }
            set {
                this.targetAssessmentField = value;
            }
        }
        
        /// <remarks/>
        public int ImpactGroupId {
            get {
                return this.impactGroupIdField;
            }
            set {
                this.impactGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int ScoringSchemeId {
            get {
                return this.scoringSchemeIdField;
            }
            set {
                this.scoringSchemeIdField = value;
            }
        }
        
        /// <remarks/>
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public short ItemAccessRight {
            get {
                return this.itemAccessRightField;
            }
            set {
                this.itemAccessRightField = value;
            }
        }
        
        /// <remarks/>
        public int RiskId {
            get {
                return this.riskIdField;
            }
            set {
                this.riskIdField = value;
            }
        }
        
        /// <remarks/>
        public string BlackFlagComments {
            get {
                return this.blackFlagCommentsField;
            }
            set {
                this.blackFlagCommentsField = value;
            }
        }
        
        /// <remarks/>
        public int BlackFlagTypeId {
            get {
                return this.blackFlagTypeIdField;
            }
            set {
                this.blackFlagTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public CriteriaType CriteriaType {
            get {
                return this.criteriaTypeField;
            }
            set {
                this.criteriaTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public double Roi {
            get {
                return this.roiField;
            }
            set {
                this.roiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TargetResolutionDate {
            get {
                return this.targetResolutionDateField;
            }
            set {
                this.targetResolutionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TriggerDate {
            get {
                return this.triggerDateField;
            }
            set {
                this.triggerDateField = value;
            }
        }
        
        /// <remarks/>
        public int[] ImpactCategoryIds {
            get {
                return this.impactCategoryIdsField;
            }
            set {
                this.impactCategoryIdsField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
        
        /// <remarks/>
        public int[] MetaDataItemIds {
            get {
                return this.metaDataItemIdsField;
            }
            set {
                this.metaDataItemIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateImpacted {
            get {
                return this.dateImpactedField;
            }
            set {
                this.dateImpactedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ActualCost {
            get {
                return this.actualCostField;
            }
            set {
                this.actualCostField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOwningNode {
            get {
                return this.isOwningNodeField;
            }
            set {
                this.isOwningNodeField = value;
            }
        }
        
        /// <remarks/>
        public bool AggregateCosts {
            get {
                return this.aggregateCostsField;
            }
            set {
                this.aggregateCostsField = value;
            }
        }
        
        /// <remarks/>
        public AssociationTransfer[] Associations {
            get {
                return this.associationsField;
            }
            set {
                this.associationsField = value;
            }
        }
        
        /// <remarks/>
        public string ImpactCustomText1 {
            get {
                return this.impactCustomText1Field;
            }
            set {
                this.impactCustomText1Field = value;
            }
        }
        
        /// <remarks/>
        public string ImpactCustomText2 {
            get {
                return this.impactCustomText2Field;
            }
            set {
                this.impactCustomText2Field = value;
            }
        }
        
        /// <remarks/>
        public int ImpactCustomList1Id {
            get {
                return this.impactCustomList1IdField;
            }
            set {
                this.impactCustomList1IdField = value;
            }
        }
        
        /// <remarks/>
        public int ImpactCustomList2Id {
            get {
                return this.impactCustomList2IdField;
            }
            set {
                this.impactCustomList2IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ImpactCustomDate1 {
            get {
                return this.impactCustomDate1Field;
            }
            set {
                this.impactCustomDate1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public WeightTypeTransfer WeightType {
            get {
                return this.weightTypeField;
            }
            set {
                this.weightTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum CriteriaType {
        
        /// <remarks/>
        Probability,
        
        /// <remarks/>
        Frequency,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class BusinessAreaTransfer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class InstanceDatabaseInfoTransfer {
        
        private int instanceIdField;
        
        private string databaseNameField;
        
        private string databaseUsernameField;
        
        private string databaseServerField;
        
        private string databasePasswordField;
        
        private string connectionStringField;
        
        private bool databasePasswordUpdatedField;
        
        private string viewPointDatabaseUserNameField;
        
        private string viewPointDatabasePasswordField;
        
        private bool viewPointDatabasePasswordUpdatedField;
        
        /// <remarks/>
        public int InstanceId {
            get {
                return this.instanceIdField;
            }
            set {
                this.instanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseName {
            get {
                return this.databaseNameField;
            }
            set {
                this.databaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseUsername {
            get {
                return this.databaseUsernameField;
            }
            set {
                this.databaseUsernameField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseServer {
            get {
                return this.databaseServerField;
            }
            set {
                this.databaseServerField = value;
            }
        }
        
        /// <remarks/>
        public string DatabasePassword {
            get {
                return this.databasePasswordField;
            }
            set {
                this.databasePasswordField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectionString {
            get {
                return this.connectionStringField;
            }
            set {
                this.connectionStringField = value;
            }
        }
        
        /// <remarks/>
        public bool DatabasePasswordUpdated {
            get {
                return this.databasePasswordUpdatedField;
            }
            set {
                this.databasePasswordUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string ViewPointDatabaseUserName {
            get {
                return this.viewPointDatabaseUserNameField;
            }
            set {
                this.viewPointDatabaseUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ViewPointDatabasePassword {
            get {
                return this.viewPointDatabasePasswordField;
            }
            set {
                this.viewPointDatabasePasswordField = value;
            }
        }
        
        /// <remarks/>
        public bool ViewPointDatabasePasswordUpdated {
            get {
                return this.viewPointDatabasePasswordUpdatedField;
            }
            set {
                this.viewPointDatabasePasswordUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class InstanceAlertConfigInfoTransfer {
        
        private int instanceIdField;
        
        private string sMTPAddressField;
        
        private string alertServiceSenderPasswordField;
        
        private string alertServiceSenderNameField;
        
        private int sMTPPortField;
        
        private string alertServiceSenderAddressField;
        
        private string alertServiceReplyAddressField;
        
        private bool enableSSLField;
        
        private bool alertsPasswordUpdatedField;
        
        /// <remarks/>
        public int InstanceId {
            get {
                return this.instanceIdField;
            }
            set {
                this.instanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string SMTPAddress {
            get {
                return this.sMTPAddressField;
            }
            set {
                this.sMTPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string AlertServiceSenderPassword {
            get {
                return this.alertServiceSenderPasswordField;
            }
            set {
                this.alertServiceSenderPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string AlertServiceSenderName {
            get {
                return this.alertServiceSenderNameField;
            }
            set {
                this.alertServiceSenderNameField = value;
            }
        }
        
        /// <remarks/>
        public int SMTPPort {
            get {
                return this.sMTPPortField;
            }
            set {
                this.sMTPPortField = value;
            }
        }
        
        /// <remarks/>
        public string AlertServiceSenderAddress {
            get {
                return this.alertServiceSenderAddressField;
            }
            set {
                this.alertServiceSenderAddressField = value;
            }
        }
        
        /// <remarks/>
        public string AlertServiceReplyAddress {
            get {
                return this.alertServiceReplyAddressField;
            }
            set {
                this.alertServiceReplyAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableSSL {
            get {
                return this.enableSSLField;
            }
            set {
                this.enableSSLField = value;
            }
        }
        
        /// <remarks/>
        public bool AlertsPasswordUpdated {
            get {
                return this.alertsPasswordUpdatedField;
            }
            set {
                this.alertsPasswordUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public partial class InstanceTransfer {
        
        private int idField;
        
        private string nameField;
        
        private InstanceAlertConfigInfoTransfer alertConfigInfoField;
        
        private InstanceDatabaseInfoTransfer databaseInfoField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public InstanceAlertConfigInfoTransfer AlertConfigInfo {
            get {
                return this.alertConfigInfoField;
            }
            set {
                this.alertConfigInfoField = value;
            }
        }
        
        /// <remarks/>
        public InstanceDatabaseInfoTransfer DatabaseInfo {
            get {
                return this.databaseInfoField;
            }
            set {
                this.databaseInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://activerisk.com/")]
    public enum SpecialFeature {
        
        /// <remarks/>
        FEATURE_MSPROJECT,
        
        /// <remarks/>
        FEATURE_PRIMAVERA,
        
        /// <remarks/>
        FEATURE_DOORS,
        
        /// <remarks/>
        FEATURE_EXCEL,
        
        /// <remarks/>
        FEATURE_INCIDENTS,
        
        /// <remarks/>
        FEATURE_CONNECTIVITY,
        
        /// <remarks/>
        FEATURE_AUDITS,
        
        /// <remarks/>
        FEATURE_VIEWPOINT_DESIGNER,
        
        /// <remarks/>
        FEATURE_DOCUMENTS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetArmUrlCompletedEventHandler(object sender, GetArmUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArmUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArmUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPortalAccessCompletedEventHandler(object sender, GetPortalAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPortalAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPortalAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetInstancesCompletedEventHandler(object sender, GetInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstanceTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstanceTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetBusinessAreasCompletedEventHandler(object sender, GetBusinessAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusinessAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusinessAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessAreaTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessAreaTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetBlackFlagTypesCompletedEventHandler(object sender, GetBlackFlagTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlackFlagTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlackFlagTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BlackFlagTypeTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BlackFlagTypeTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRiskAndImpactCompletedEventHandler(object sender, AddRiskAndImpactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRiskAndImpactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRiskAndImpactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateImpactCompletedEventHandler(object sender, UpdateImpactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateImpactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateImpactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateRiskCompletedEventHandler(object sender, UpdateRiskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteImpactCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPlanCompletedEventHandler(object sender, AddPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlanTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlanTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePlanCompletedEventHandler(object sender, UpdatePlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlanTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlanTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddResponseCompletedEventHandler(object sender, AddResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateResponseCompletedEventHandler(object sender, UpdateResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteResponseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImpactsForFilterCompletedEventHandler(object sender, GetImpactsForFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImpactsForFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImpactsForFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactTransfer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public RiskTransfer[] risks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskTransfer[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int totalPages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResponsesForFilterCompletedEventHandler(object sender, GetResponsesForFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponsesForFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponsesForFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseTransfer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalPages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPlansForFilterCompletedEventHandler(object sender, GetPlansForFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlansForFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlansForFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlanTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlanTransfer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalPages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResponsesForPlanCompletedEventHandler(object sender, GetResponsesForPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponsesForPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponsesForPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImpactCompletedEventHandler(object sender, GetImpactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImpactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImpactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactTransfer)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public RiskTransfer risk {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskTransfer)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ItemTransfer item {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemTransfer)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public PlanTransfer plan {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlanTransfer)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRiskCompletedEventHandler(object sender, GetRiskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPlanCompletedEventHandler(object sender, GetPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlanTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlanTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetItemCompletedEventHandler(object sender, GetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTreeItemCompletedEventHandler(object sender, GetTreeItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TreeItemTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TreeItemTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResponseCompletedEventHandler(object sender, GetResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResponseStatusesCompletedEventHandler(object sender, GetResponseStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponseStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponseStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseStatusTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseStatusTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResponseEffectivenessesCompletedEventHandler(object sender, GetResponseEffectivenessesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponseEffectivenessesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponseEffectivenessesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseEffectivenessTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseEffectivenessTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResponsePrioritiesCompletedEventHandler(object sender, GetResponsePrioritiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponsePrioritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponsePrioritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponsePriorityTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponsePriorityTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImpactCategoriesCompletedEventHandler(object sender, GetImpactCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImpactCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImpactCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactCategoryTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactCategoryTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImpactGroupsCompletedEventHandler(object sender, GetImpactGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImpactGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImpactGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactGroupTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactGroupTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPIDPointsCompletedEventHandler(object sender, GetPIDPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPIDPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPIDPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PIDPointsTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PIDPointsTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPIDPointsForFilterCompletedEventHandler(object sender, GetPIDPointsForFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPIDPointsForFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPIDPointsForFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PIDPointsTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PIDPointsTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRiskLevelsCompletedEventHandler(object sender, GetRiskLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRiskLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRiskLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskLevelTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskLevelTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetScoringSchemeCompletedEventHandler(object sender, GetScoringSchemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScoringSchemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScoringSchemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScoringSchemeTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScoringSchemeTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetScoringSchemesForItemCompletedEventHandler(object sender, GetScoringSchemesForItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScoringSchemesForItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScoringSchemesForItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScoringSchemeTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScoringSchemeTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResourcesCompletedEventHandler(object sender, GetResourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRiskCategoriesCompletedEventHandler(object sender, GetRiskCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRiskCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRiskCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskCategoryTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskCategoryTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRiskStatusesCompletedEventHandler(object sender, GetRiskStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRiskStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRiskStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskStatusTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskStatusTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRiskPhasesCompletedEventHandler(object sender, GetRiskPhasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRiskPhasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRiskPhasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskPhaseTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskPhaseTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTestFrequenciesCompletedEventHandler(object sender, GetTestFrequenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestFrequenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestFrequenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestFrequencyTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestFrequencyTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDesignEffectivenessesCompletedEventHandler(object sender, GetDesignEffectivenessesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDesignEffectivenessesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDesignEffectivenessesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DesignEffectivenessTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DesignEffectivenessTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetControlClassificationsCompletedEventHandler(object sender, GetControlClassificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetControlClassificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetControlClassificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ControlClassificationTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ControlClassificationTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetControlTypesCompletedEventHandler(object sender, GetControlTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetControlTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetControlTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ControlTypeTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ControlTypeTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetControlAssertionsCompletedEventHandler(object sender, GetControlAssertionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetControlAssertionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetControlAssertionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ControlAssertionTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ControlAssertionTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetControlConditionsCompletedEventHandler(object sender, GetControlConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetControlConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetControlConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ControlConditionTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ControlConditionTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRiskSourcesCompletedEventHandler(object sender, GetRiskSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRiskSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRiskSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskSourceTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskSourceTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDistributionsCompletedEventHandler(object sender, GetDistributionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistributionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistributionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistributionTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistributionTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetWaterfallDataCompletedEventHandler(object sender, GetWaterfallDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaterfallDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaterfallDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WaterfallDataTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WaterfallDataTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDefaultFilterCompletedEventHandler(object sender, GetDefaultFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilterTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilterTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRecordTypesCompletedEventHandler(object sender, GetRecordTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecordTypeTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecordTypeTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserFiltersCompletedEventHandler(object sender, GetUserFiltersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilterTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilterTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserLanguageSetCompletedEventHandler(object sender, GetUserLanguageSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLanguageSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLanguageSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LanguageSetTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LanguageSetTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetColoursCompletedEventHandler(object sender, GetColoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetColoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ColourTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ColourTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddModuleCompletedEventHandler(object sender, AddModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ModuleTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ModuleTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetModuleCompletedEventHandler(object sender, GetModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ModuleTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ModuleTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateModuleCompletedEventHandler(object sender, UpdateModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ModuleTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ModuleTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRequirementCompletedEventHandler(object sender, AddRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequirementTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequirementTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRequirementCompletedEventHandler(object sender, GetRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequirementTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequirementTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateRequirementCompletedEventHandler(object sender, UpdateRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequirementTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequirementTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteItemIfEmptyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAssociationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAssociationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAssociationsForImpactCompletedEventHandler(object sender, GetAssociationsForImpactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociationsForImpactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociationsForImpactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssociationTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssociationTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAssociationsForItemCompletedEventHandler(object sender, GetAssociationsForItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociationsForItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociationsForItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssociationTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssociationTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserDataCompletedEventHandler(object sender, GetUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserProfileTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserProfileTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetStaticDataCompletedEventHandler(object sender, GetStaticDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaticDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaticDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StaticDataTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StaticDataTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IsStaticDataCurrentCompletedEventHandler(object sender, IsStaticDataCurrentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsStaticDataCurrentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsStaticDataCurrentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMetaDataHierarchyCompletedEventHandler(object sender, GetMetaDataHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetaDataHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetaDataHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetaDataItemDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetaDataItemDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEscalationItemCompletedEventHandler(object sender, GetEscalationItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEscalationItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEscalationItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EscalationItemTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EscalationItemTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddEscalationItemCompletedEventHandler(object sender, AddEscalationItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEscalationItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEscalationItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EscalationItemTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EscalationItemTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateEscalationItemCompletedEventHandler(object sender, UpdateEscalationItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEscalationItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEscalationItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EscalationItemTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EscalationItemTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteEscalationItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EscalateRisksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEscalationsForImpactCompletedEventHandler(object sender, GetEscalationsForImpactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEscalationsForImpactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEscalationsForImpactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactEscalationTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactEscalationTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResourceGroupsCompletedEventHandler(object sender, GetResourceGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceGroupTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceGroupTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResourcesOfGroupCompletedEventHandler(object sender, GetResourcesOfGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourcesOfGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourcesOfGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFolderCompletedEventHandler(object sender, GetFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFolderCompletedEventHandler(object sender, AddFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateFolderCompletedEventHandler(object sender, UpdateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetActivityCompletedEventHandler(object sender, GetActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddActivityCompletedEventHandler(object sender, AddActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateActivityCompletedEventHandler(object sender, UpdateActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddActivityScheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateActivityScheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetActivityScheduleCompletedEventHandler(object sender, GetActivityScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivityScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivityScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityScheduleTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityScheduleTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddActivityDependencyCompletedEventHandler(object sender, AddActivityDependencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddActivityDependencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddActivityDependencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityDependencyTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityDependencyTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateActivityDependencyCompletedEventHandler(object sender, UpdateActivityDependencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateActivityDependencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateActivityDependencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityDependencyTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityDependencyTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetActivityDependencyCompletedEventHandler(object sender, GetActivityDependencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivityDependencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivityDependencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityDependencyTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityDependencyTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveActivityDependencyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCalendarCompletedEventHandler(object sender, GetCalendarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CalendarTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CalendarTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCalendarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCalendarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRiskLinkageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRiskLinkageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLinkagesForRiskCompletedEventHandler(object sender, GetLinkagesForRiskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkagesForRiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkagesForRiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RiskLinkageTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RiskLinkageTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllScoreBandsCompletedEventHandler(object sender, GetAllScoreBandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScoreBandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScoreBandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScoreBandTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScoreBandTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetScoreBandsCompletedEventHandler(object sender, GetScoreBandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScoreBandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScoreBandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScoreBandTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScoreBandTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImpactsForItemsCompletedEventHandler(object sender, GetImpactsForItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImpactsForItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImpactsForItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPlanStrategiesCompletedEventHandler(object sender, GetPlanStrategiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanStrategiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanStrategiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlanStrategyTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlanStrategyTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRiskSecurityPropertiesCompletedEventHandler(object sender, GetRiskSecurityPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRiskSecurityPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRiskSecurityPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityPropertiesTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityPropertiesTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MoveRiskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MoveRisksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MoveItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateRiskSecurityPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateResponseAssessmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResponseAssessmentCompletedEventHandler(object sender, GetResponseAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponseAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponseAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssessmentTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssessmentTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResourceRolesCompletedEventHandler(object sender, GetResourceRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceRoleTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceRoleTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResourcesAndGroupsCompletedEventHandler(object sender, GetResourcesAndGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourcesAndGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourcesAndGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetColourConfigCompletedEventHandler(object sender, GetColourConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColourConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetColourConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ColourTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ColourTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetClassificationsCompletedEventHandler(object sender, GetClassificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClassificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClassificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClassificationTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClassificationTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCaveatsCompletedEventHandler(object sender, GetCaveatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaveatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaveatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CaveatTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CaveatTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetConfigurationSetsCompletedEventHandler(object sender, GetConfigurationSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConfigurationSetTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfigurationSetTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSecurityAttributesCompletedEventHandler(object sender, GetSecurityAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityAttributeTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityAttributeTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCurrenciesCompletedEventHandler(object sender, GetCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetResourceCompletedEventHandler(object sender, GetResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddResourceCompletedEventHandler(object sender, AddResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateResourceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteResourceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddResourceToGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveResourceFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveResourceFromAllGroupsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLanguageSetCompletedEventHandler(object sender, GetLanguageSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLanguageSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLanguageSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LanguageSetTransfer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LanguageSetTransfer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLanguageSetsCompletedEventHandler(object sender, GetLanguageSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLanguageSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLanguageSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LanguageSetTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LanguageSetTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImpactCategoryTypesCompletedEventHandler(object sender, GetImpactCategoryTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImpactCategoryTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImpactCategoryTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpactCategoryTypeTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpactCategoryTypeTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LinkPlanCompletedEventHandler(object sender, LinkPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UnlinkPlanCompletedEventHandler(object sender, UnlinkPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlinkPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlinkPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UnlinkResponsesFromPlanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LinkResponsesToPlanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOperatingResultCompletedEventHandler(object sender, GetOperatingResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatingResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatingResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperatingResultTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperatingResultTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDesignResultCompletedEventHandler(object sender, GetDesignResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDesignResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDesignResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DesignResultTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DesignResultTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetControlInfluenceCompletedEventHandler(object sender, GetControlInfluenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetControlInfluenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetControlInfluenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ControlInfluenceTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ControlInfluenceTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEvaluationTestTypeCompletedEventHandler(object sender, GetEvaluationTestTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEvaluationTestTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEvaluationTestTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EvaluationTestTypeTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EvaluationTestTypeTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomList1ValuesCompletedEventHandler(object sender, GetCustomList1ValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomList1ValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomList1ValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequirementCustomList1Transfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequirementCustomList1Transfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomList2ValuesCompletedEventHandler(object sender, GetCustomList2ValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomList2ValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomList2ValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequirementCustomList2Transfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequirementCustomList2Transfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomList3ValuesCompletedEventHandler(object sender, GetCustomList3ValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomList3ValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomList3ValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequirementCustomList3Transfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequirementCustomList3Transfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRequirementFieldConfigurationsCompletedEventHandler(object sender, GetRequirementFieldConfigurationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequirementFieldConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequirementFieldConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FieldConfigTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldConfigTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEvaluationTestConditionCompletedEventHandler(object sender, GetEvaluationTestConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEvaluationTestConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEvaluationTestConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EvaluationTestConditionTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EvaluationTestConditionTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEvaluationTestClassificationCompletedEventHandler(object sender, GetEvaluationTestClassificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEvaluationTestClassificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEvaluationTestClassificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EvaluationTestClassificationTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EvaluationTestClassificationTransfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLicensedFeaturesCompletedEventHandler(object sender, GetLicensedFeaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicensedFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicensedFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialFeature[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialFeature[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAvailableWebPartsCompletedEventHandler(object sender, GetAvailableWebPartsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableWebPartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableWebPartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebPartMetaData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebPartMetaData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRequirementsCompletedEventHandler(object sender, GetRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRequirementsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRequirementsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRequirementFiltersCompletedEventHandler(object sender, GetRequirementFiltersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequirementFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequirementFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilterTransfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilterTransfer[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591